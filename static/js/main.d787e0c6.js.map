{"version":3,"file":"static/js/main.d787e0c6.js","mappings":"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","sources":["src/utils/storage.ts","src/context/authContent.tsx","src/layout/layout.tsx","src/utils/url.ts","src/api/epetcoins.ts","src/context/appDataContext.tsx","src/api/aulas.ts","src/utils/colors.ts","src/components/ResumenMiniCard.tsx","src/components/AlumnosList.tsx","src/screens/home-screen.tsx","src/utils/getSaludoFecha.ts","src/screens/login-screen.tsx","src/api/login.ts","src/api/updateUser.ts","src/screens/profile.tsx","src/utils/initials.ts","src/components/AvatarCard.tsx","src/utils/theme.ts","src/context/themeContext.tsx","src/navigations/CustomDrawerContent.tsx","src/components/DropDonw.tsx","src/components/EpetcoinModal.tsx","src/components/LoadError.tsx","src/components/MateriaCard.tsx","src/components/ResponsiveGrid.tsx","src/components/CrearEpetcoinForm.tsx","src/screens/Epetcoin.tsx","src/screens/changePassword.tsx","src/screens/MisAulas.tsx","src/api/asistenciasClases.ts","src/components/ModalAsistencias.tsx","src/api/setClaseAsistencia.ts","src/components/ClaseCard.tsx","src/screens/DetailsAulas.tsx","src/api/clasesMateria.ts","src/navigations/materiasStack.tsx","src/navigations/router.tsx","src/screens/splashScreen.tsx","App.tsx","index.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { User as UsuarioType } from \"../types/UserType\";\r\nimport {\r\n  MateriasSimpleType as Aula,\r\n  ClaseType,\r\n  MateriasAlumnosType,\r\n} from \"../types/AulaType\";\r\nimport {\r\n  Epetcoin,\r\n  TransaccionCoinAulaAlumnoType,\r\n  TransaccionCoinHistorialAulaType,\r\n} from \"../types/EpetcoinType\";\r\nimport { AsistenciaAlumnoType } from \"../types/AsistenciaType\";\r\n\r\nexport const saveUser = async (user: UsuarioType) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"user\", JSON.stringify(user));\r\n  } catch (error) {\r\n    console.error(\"Error guardando el usuario:\", error);\r\n  }\r\n};\r\n\r\nexport const getUser = async (): Promise<UsuarioType | null> => {\r\n  try {\r\n    const user = await AsyncStorage.getItem(\"user\");\r\n    if (user !== null) {\r\n      return JSON.parse(user);\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error(\"Error obteniendo el usuario:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveToStorage = async (key: string, value: string) => {\r\n  try {\r\n    await AsyncStorage.setItem(key, value);\r\n  } catch (error) {\r\n    console.error(\"Error guardando en storage:\", error);\r\n  }\r\n};\r\n\r\nexport const getFromStorage = async (key: string): Promise<string | null> => {\r\n  try {\r\n    return await AsyncStorage.getItem(key);\r\n  } catch (error) {\r\n    console.error(\"Error obteniendo de storage:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const removeFromStorage = async (key: string) => {\r\n  try {\r\n    await AsyncStorage.removeItem(key);\r\n  } catch (error) {\r\n    console.error(\"Error eliminando de storage:\", error);\r\n  }\r\n};\r\n\r\nexport const saveAula = async (aulas: Aula[]) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"aulas\", JSON.stringify(aulas));\r\n  } catch (error) {\r\n    console.log(\"error al guardar materias\", error);\r\n  }\r\n};\r\n\r\nexport const getAulaStorage = async (): Promise<Aula[] | null> => {\r\n  try {\r\n    const aula = await AsyncStorage.getItem(\"aulas\");\r\n    if (aula != null) return JSON.parse(aula) as Aula[];\r\n    return null;\r\n  } catch (error) {\r\n    console.log(\"no hay aulas\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveAlumnos = async (alumnos: UsuarioType[]) => {\r\n  try {\r\n    const json = JSON.stringify(alumnos);\r\n    await AsyncStorage.setItem(\"alumnos\", json);\r\n  } catch (error) {\r\n    console.error(\"Error al guardar alumnos:\", error);\r\n  }\r\n};\r\n\r\nexport const getAlumnosStorage = async (): Promise<Record<\r\n  number,\r\n  UsuarioType\r\n> | null> => {\r\n  try {\r\n    const data = await AsyncStorage.getItem(\"alumnos\");\r\n    if (!data) return null;\r\n\r\n    const alumnosArray: UsuarioType[] = JSON.parse(data);\r\n    const alumnosMap: Record<number, UsuarioType> = {};\r\n\r\n    alumnosArray.forEach((alumno) => {\r\n      alumnosMap[alumno.id] = alumno;\r\n    });\r\n\r\n    return alumnosMap;\r\n  } catch (error) {\r\n    console.error(\"Error al leer alumnos desde storage:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveAsistencias = async (data: AsistenciaAlumnoType[]) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"asistencias\", JSON.stringify(data));\r\n  } catch (error) {\r\n    console.error(\"Error al guardar asistencias:\", error);\r\n  }\r\n};\r\n\r\nexport const getAsistenciasStorage = async (): Promise<\r\n  AsistenciaAlumnoType[] | null\r\n> => {\r\n  try {\r\n    const data = await AsyncStorage.getItem(\"asistencias\");\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error(\"Error al leer asistencias:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveClases = async (\r\n  materiaId: number,\r\n  data: ClaseType[]\r\n): Promise<void> => {\r\n  try {\r\n    await AsyncStorage.setItem(`clases_${materiaId}`, JSON.stringify(data));\r\n  } catch (error) {\r\n    console.error(\"Error guardando clases:\", error);\r\n  }\r\n};\r\n\r\nexport const getClasesStorage = async (\r\n  materiaId: number\r\n): Promise<ClaseType[] | null> => {\r\n  try {\r\n    const data = await AsyncStorage.getItem(`clases_${materiaId}`);\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error(\"Error leyendo clases:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getEpetCoinToStorage = async (): Promise<Epetcoin | null> => {\r\n  try {\r\n    const data = await AsyncStorage.getItem(\"epetCoin\");\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error(\"Error leyendo epetCoin:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveEpetCoin = async (epetCoin: Epetcoin | undefined) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"epetCoin\", JSON.stringify(epetCoin));\r\n  } catch (error) {\r\n    console.error(\"Error guardando epetCoin:\", error);\r\n  }\r\n};\r\n\r\nexport const saveTransaccionCoinProfe = async (\r\n  data: TransaccionCoinHistorialAulaType[]\r\n) => {\r\n  try {\r\n    const json = JSON.stringify(data);\r\n    await saveToStorage(\"transaccion_profe\", json);\r\n  } catch (error) {\r\n    console.error(\"Error al guardar alarcoin en storage:\", error);\r\n  }\r\n};\r\n\r\nexport const getTransaccionCoinProfe = async (): Promise<\r\n  TransaccionCoinHistorialAulaType[] | null\r\n> => {\r\n  try {\r\n    const json = await getFromStorage(\"transaccion_profe\");\r\n    return json ? JSON.parse(json) : null;\r\n  } catch (error) {\r\n    console.error(\"Error al leer alarcoins profe:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Para alumno\r\nexport const saveTransaccionCoinAlumno = async (\r\n  data: TransaccionCoinAulaAlumnoType[]\r\n) => {\r\n  try {\r\n    const json = JSON.stringify(data);\r\n    await saveToStorage(\"transaccion_alumno\", json);\r\n  } catch (error) {\r\n    console.error(\"Error al guardar alarcoin del alumno:\", error);\r\n  }\r\n};\r\n\r\nexport const getTransaccionCoinAlumno = async (): Promise<\r\n  TransaccionCoinAulaAlumnoType[] | null\r\n> => {\r\n  try {\r\n    const json = await getFromStorage(\"transaccion_alumno\");\r\n    return json ? JSON.parse(json) : null;\r\n  } catch (error) {\r\n    console.error(\"Error al leer alarcoin del alumno:\", error);\r\n    return null;\r\n  }\r\n};\r\n","// AuthContext.tsx\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { User } from \"../types/UserType\";\r\nimport {\r\n  getUser,\r\n  getFromStorage,\r\n  removeFromStorage,\r\n  saveUser,\r\n} from \"../utils/storage\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  setUser: (user: User | null) => void;\r\n  token: string | null;\r\n  setToken: (token: string | null) => void;\r\n  logout: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  setUser: () => {},\r\n  token: null,\r\n  setToken: () => {},\r\n  logout: () => {},\r\n  loading: true,\r\n});\r\n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState<string | null>(null);\r\n\r\n  const setUserAndPersist = async (newUser: User | null) => {\r\n    setUser(newUser);\r\n    if (newUser) {\r\n      await saveUser(newUser);\r\n    } else {\r\n      await removeFromStorage(\"user\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const users = await getUser();\r\n      const token = await getFromStorage(\"token\");\r\n      if (users) setUser(users);\r\n      if (token) setToken(token);\r\n      setLoading(false);\r\n    };\r\n    loadUser();\r\n  }, []);\r\n\r\n  const logout = async () => {\r\n    try {\r\n      // await removeFromStorage(\"token\");\r\n      // await removeFromStorage(\"user\");\r\n      // await removeFromStorage(\"aulas\");\r\n      await AsyncStorage.clear();\r\n    } catch (error) {\r\n      console.log(\"error al borrar items\", error);\r\n    }\r\n\r\n    setUser(null);\r\n    setToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        setUser: setUserAndPersist,\r\n        loading,\r\n        token,\r\n        setToken,\r\n        logout,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n","import { ReactNode } from \"react\";\r\nimport {\r\n  Platform,\r\n  StyleSheet,\r\n  View,\r\n  ScrollView,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { useTheme } from \"react-native-paper\";\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const Layout = ({ children }: LayoutProps) => {\r\n  const { colors } = useTheme();\r\n  return (\r\n    <LinearGradient\r\n      colors={[colors.primary, colors.background]}\r\n      start={{ x: 0.6, y: 1.0 }}\r\n      end={{ x: 0.5, y: 0.0 }}\r\n      style={styles.gradient}\r\n    >\r\n      <SafeAreaView style={styles.safeArea}>\r\n        <KeyboardAvoidingView\r\n          style={styles.flex}\r\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n          keyboardVerticalOffset={\r\n            Platform.OS === \"ios\" ? 0 : StatusBar.currentHeight || 0\r\n          }\r\n        >\r\n          <ScrollView\r\n            contentContainerStyle={styles.scrollContainer}\r\n            keyboardShouldPersistTaps=\"handled\"\r\n          >\r\n            <View style={styles.innerContainer}>{children}</View>\r\n          </ScrollView>\r\n        </KeyboardAvoidingView>\r\n      </SafeAreaView>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  gradient: {\r\n    flex: 1,\r\n  },\r\n  safeArea: {\r\n    flex: 1,\r\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n});\r\n","export const urlBase = \"https://adminaulas.onrender.com\";\r\n// https://adminaulas.onrender.com\r\n","import {\r\n  Epetcoin,\r\n  TransaccionCoinAulaAlumnoType,\r\n  TransaccionCoinCreateType,\r\n  TransaccionCoinHistorialAulaType,\r\n  TransaccionCoinType,\r\n} from \"../types/EpetcoinType\";\r\nimport { urlBase } from \"../utils/url\";\r\nimport { getFromStorage } from \"../utils/storage\";\r\n\r\n// Crear alarcoin\r\n// export async function crearAlarcoin(\r\n//   token: string | null,\r\n//   data: AlarcoinCreateType\r\n// ): Promise<Alarcoin> {\r\n//   const response = await fetch(`${urlBase}/alarcoins/`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//     body: JSON.stringify(data),\r\n//   });\r\n\r\n//   if (!response.ok) {\r\n//     const errorData = await response.json();\r\n//     throw new Error(errorData.detail || \"Error al asignar alarcoin\");\r\n//   }\r\n\r\n//   return await response.json();\r\n// }\r\n\r\n// // Actualizar alarcoin\r\n// export async function actualizarAlarcoin(\r\n//   token: string,\r\n//   id: number,\r\n//   data: {\r\n//     aula_id: number;\r\n//     alumno_id: number;\r\n//     detalle: string;\r\n//     suma: boolean;\r\n//   }\r\n// ): Promise<Alarcoin> {\r\n//   const response = await fetch(`${urlBase}/alarcoins/${id}`, {\r\n//     method: \"PUT\",\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//     body: JSON.stringify(data),\r\n//   });\r\n\r\n//   if (!response.ok) {\r\n//     const errorData = await response.json();\r\n//     throw new Error(errorData.detail || \"Error al actualizar alarcoin\");\r\n//   }\r\n\r\n//   return await response.json();\r\n// }\r\n\r\n// // Obtener alarcoins del alumno actual\r\n// export async function getAlarcoinsAlumno(\r\n//   token: string | null\r\n// ): Promise<AlarcoinAulaAlumnoType[]> {\r\n//   const response = await fetch(`${urlBase}/alarcoins/me`, {\r\n//     headers: {\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//   });\r\n\r\n//   if (!response.ok) {\r\n//     const errorData = await response.json();\r\n//     throw new Error(errorData.detail || \"Error al obtener mis alarcoins\");\r\n//   }\r\n\r\n//   return await response.json();\r\n// }\r\n\r\n// Obtener historial del profesor\r\n// export async function getHistorialProfesor(\r\n//   token: string | null\r\n// ): Promise<MateriasAlumnosType[]> {\r\n//   const response = await fetch(`${urlBase}/alarcoins/historial`, {\r\n//     headers: {\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//   });\r\n\r\n//   if (!response.ok) {\r\n//     const errorData = await response.json();\r\n//     throw new Error(errorData.detail || \"Error al obtener historial\");\r\n//   }\r\n\r\n//   return await response.json();\r\n// }\r\n\r\n//obtener epetcoin - nueva\r\n\r\nexport async function getEpetcoin(): Promise<Epetcoin | undefined> {\r\n  try {\r\n    const token = await getFromStorage(\"token\");\r\n    const response = await fetch(`${urlBase}/epetcoins/me`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error al consultar /me\", error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\n//obtener epetcoin - nueva\r\nexport async function crearEpetcoin(\r\n  nombre: string\r\n): Promise<Epetcoin | undefined> {\r\n  try {\r\n    const token = await getFromStorage(\"token\");\r\n    const response = await fetch(`${urlBase}/epetcoins/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ nombre }),\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error al consultar /me\", error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport async function getHistorialProfesor(): Promise<\r\n  TransaccionCoinHistorialAulaType[]\r\n> {\r\n  const token = await getFromStorage(\"token\");\r\n  const response = await fetch(`${urlBase}/epetcoins/historial`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al obtener historial\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function crearTransaccion(\r\n  data: TransaccionCoinCreateType\r\n): Promise<TransaccionCoinType> {\r\n  const token = await getFromStorage(\"token\");\r\n  const response = await fetch(`${urlBase}/epetcoins/transaccion`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al asignar alarcoin\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function getHistorialAlumno(): Promise<\r\n  TransaccionCoinAulaAlumnoType[]\r\n> {\r\n  const token = await getFromStorage(\"token\");\r\n  const response = await fetch(`${urlBase}/epetcoins/historial`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al obtener historial\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useAuth } from \"./authContent\";\r\nimport { User as AlumnoType } from \"../types/UserType\";\r\nimport {\r\n  MateriasAlumnosType,\r\n  MateriasSimpleType,\r\n  MateriasType,\r\n} from \"../types/AulaType\";\r\nimport { getalumnosAulas, getMisAulas } from \"../api/aulas\";\r\nimport {\r\n  getAlumnosStorage,\r\n  getAulaStorage,\r\n  saveAlumnos,\r\n  saveAula,\r\n  saveEpetCoin,\r\n  getEpetCoinToStorage,\r\n  getTransaccionCoinProfe,\r\n  getTransaccionCoinAlumno,\r\n  saveTransaccionCoinProfe,\r\n  saveTransaccionCoinAlumno,\r\n} from \"../utils/storage\";\r\nimport {\r\n  TransaccionCoinType,\r\n  TransaccionCoinAlumnoType,\r\n  Epetcoin,\r\n  TransaccionCoinCreateType,\r\n  TransaccionCoinAulaAlumnoType,\r\n  TransaccionCoinHistorialAulaType,\r\n} from \"../types/EpetcoinType\";\r\nimport {\r\n  getHistorialProfesor,\r\n  getEpetcoin,\r\n  getHistorialAlumno,\r\n} from \"../api/epetcoins\";\r\n\r\ninterface AppDataContextType {\r\n  aulas: MateriasSimpleType[];\r\n  alumnosMap: Record<number, AlumnoType>;\r\n  isLoading: boolean;\r\n  loadData: (token: string) => void;\r\n  transaccioncoins:\r\n    | TransaccionCoinType[]\r\n    | null\r\n    | TransaccionCoinHistorialAulaType[]\r\n    | TransaccionCoinAlumnoType[];\r\n  loadAlarcoins: (forceRefresh?: boolean) => void;\r\n  epetCoin: Epetcoin | null | undefined;\r\n  alarcoinsError: boolean;\r\n}\r\n\r\nconst AppDataContext = createContext<AppDataContextType | undefined>(undefined);\r\n\r\nexport const AppDataProvider = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => {\r\n  const { token, user } = useAuth();\r\n  const [aulas, setAulas] = useState<MateriasSimpleType[]>([]);\r\n  const [alumnosMap, setAlumnosMap] = useState<Record<number, AlumnoType>>({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [transaccioncoins, setTransaccionCoins] = useState<\r\n    | TransaccionCoinType[]\r\n    | null\r\n    | TransaccionCoinHistorialAulaType[]\r\n    | TransaccionCoinAlumnoType[]\r\n  >(null);\r\n  const [alarcoinsError, setAlarcoinsError] = useState(false);\r\n  const [epetCoin, setEpetcoin] = useState<Epetcoin | false | undefined>(false);\r\n\r\n  //le pasamos una cantidad\r\n  const calcularCantidadEpetcoins = (epetCoin: TransaccionCoinCreateType[]) => {\r\n    return epetCoin.reduce((acc, item) => {\r\n      return acc + (item.suma ? item.cantidad : -item.cantidad);\r\n    }, 0);\r\n  };\r\n\r\n  //alarcoin si el usuario es profesor\r\n  const transaccionCoinProfe = async (\r\n    data: TransaccionCoinHistorialAulaType[]\r\n  ) => {\r\n    const actualizarCantidadEpetcoins = (\r\n      alarcoinsData: TransaccionCoinHistorialAulaType[]\r\n    ) => {\r\n      const nuevoMap: Record<number, AlumnoType> = { ...alumnosMap };\r\n\r\n      Object.keys(nuevoMap).forEach((id) => {\r\n        nuevoMap[+id] = {\r\n          ...nuevoMap[+id],\r\n          epetcoin: 0,\r\n        };\r\n      });\r\n\r\n      alarcoinsData.forEach((aula) => {\r\n        aula.alumnos.forEach((alumno) => {\r\n          const cantidad = calcularCantidadEpetcoins(alumno?.epetcoins);\r\n          if (nuevoMap[alumno.id]) {\r\n            nuevoMap[alumno.id].epetcoin =\r\n              (nuevoMap[alumno.id].epetcoin || 0) + cantidad;\r\n          }\r\n        });\r\n      });\r\n\r\n      setAlumnosMap(nuevoMap);\r\n    };\r\n    actualizarCantidadEpetcoins(data);\r\n    setTransaccionCoins(data);\r\n    await saveTransaccionCoinProfe(data);\r\n  };\r\n  const transaccionCoinAlumno = async (\r\n    data: TransaccionCoinAulaAlumnoType[]\r\n  ) => {\r\n    setTransaccionCoins(data);\r\n    await saveTransaccionCoinAlumno(data);\r\n  };\r\n\r\n  //nuevo modelo epetcoin\r\n  const loadEpetcoin = async (): Promise<Epetcoin | boolean | undefined> => {\r\n    try {\r\n      const cachedCoin = await getEpetCoinToStorage();\r\n      if (cachedCoin) {\r\n        setEpetcoin(cachedCoin);\r\n        return true;\r\n      }\r\n      const data = await getEpetcoin(); // fetch /me\r\n      if (data?.coin) {\r\n        return false;\r\n      }\r\n      await saveEpetCoin(data);\r\n      setEpetcoin(data);\r\n    } catch (error: any) {\r\n      if (error?.response?.status === 404) {\r\n        setEpetcoin(false); // No hay moneda activa\r\n        return false;\r\n      }\r\n      console.error(\"Error verificando epetcoin:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  //cambiar a epetcoin\r\n  const loadAlarcoins = async (forceRefresh: boolean = false) => {\r\n    setAlarcoinsError(false);\r\n\r\n    try {\r\n      if (user?.is_teacher) {\r\n        const tieneMoneda = await loadEpetcoin(); // paso nuevo\r\n        if (!tieneMoneda) {\r\n          return false; // no sigue si no hay moneda\r\n        }\r\n        if (forceRefresh) {\r\n          const data = await getHistorialProfesor(); // API\r\n          transaccionCoinProfe(data);\r\n          await saveTransaccionCoinProfe(data);\r\n        } else {\r\n          const local = await getTransaccionCoinProfe();\r\n          if (local) {\r\n            transaccionCoinProfe(local);\r\n          } else {\r\n            const data = await getHistorialProfesor(); // API\r\n            transaccionCoinProfe(data);\r\n            await saveTransaccionCoinProfe(data);\r\n          }\r\n        }\r\n      } else {\r\n        if (forceRefresh) {\r\n          const data = await getHistorialAlumno(); // API\r\n          transaccionCoinAlumno(data);\r\n          await saveTransaccionCoinAlumno(data);\r\n        } else {\r\n          const local = await getTransaccionCoinAlumno();\r\n          if (local) {\r\n            transaccionCoinAlumno(local);\r\n          } else {\r\n            const data = await getHistorialAlumno(); // API\r\n            transaccionCoinAlumno(data);\r\n            await saveTransaccionCoinAlumno(data);\r\n          }\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error cargando alarcoins:\", e);\r\n      setAlarcoinsError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadDataAlumno = async (tokenParam: string) => {\r\n    try {\r\n      const cachedAulas = await getAulaStorage();\r\n      if (cachedAulas) {\r\n        setAulas(cachedAulas);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const aulasData: MateriasType[] = await getMisAulas(tokenParam);\r\n      const aulasProcesadas = aulasData.map((aula) => ({\r\n        ...aula,\r\n        alumnos: [user], // el alumno actual\r\n        alumnoIds: [user.id], // agregás este campo a mano para respetar el tipo MateriasSimpleType\r\n      }));\r\n\r\n      setAulas(aulasProcesadas);\r\n      await saveAula(aulasProcesadas);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const loadDataProfe = async (tokenParam: string) => {\r\n    try {\r\n      const cachedAulas = await getAulaStorage();\r\n      const cachedAulumnosMap = await getAlumnosStorage();\r\n\r\n      if (cachedAulas && cachedAulumnosMap) {\r\n        setAulas(cachedAulas);\r\n        setAlumnosMap(cachedAulumnosMap);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const aulasData: MateriasAlumnosType[] = await getalumnosAulas(\r\n        tokenParam\r\n      );\r\n      const alumnosMapTemp: Record<number, AlumnoType> = {};\r\n      const aulasSinAlumnos = aulasData.map((aula) => {\r\n        aula.alumnos.forEach((alumno) => {\r\n          alumnosMapTemp[alumno.id] = alumno;\r\n        });\r\n        return {\r\n          id: aula.id,\r\n          nombre: aula.nombre,\r\n          ano: aula.ano,\r\n          division: aula.division,\r\n          especialidad: aula.especialidad,\r\n          profesor_id: aula.profesor_id,\r\n          cantidad_clases: aula.cantidad_clases,\r\n          tipo: aula.tipo,\r\n          alumnoIds: aula.alumnos.map((alumno) => alumno.id),\r\n        };\r\n      });\r\n      setAulas(aulasSinAlumnos);\r\n      setAlumnosMap(alumnosMapTemp);\r\n      await saveAula(aulasSinAlumnos);\r\n\r\n      await saveAlumnos(Object.values(alumnosMapTemp));\r\n    } catch (error) {\r\n      console.error(\"Error cargando datos desde appData:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadData = async (tokenParam?: string) => {\r\n    const effectiveToken = tokenParam || token;\r\n    if (!effectiveToken) return;\r\n\r\n    if (user?.is_teacher) {\r\n      await loadDataProfe(effectiveToken);\r\n    } else {\r\n      await loadDataAlumno(effectiveToken);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [token]);\r\n\r\n  return (\r\n    <AppDataContext.Provider\r\n      value={{\r\n        aulas,\r\n        alumnosMap,\r\n        isLoading,\r\n        loadData,\r\n        transaccioncoins,\r\n        loadAlarcoins,\r\n        alarcoinsError,\r\n        epetCoin,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppDataContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppData = () => {\r\n  const context = useContext(AppDataContext);\r\n  if (!context)\r\n    throw new Error(\"useAppData debe usarse dentro de AppDataProvider\");\r\n  return context;\r\n};\r\n","import { urlBase } from \"../utils/url\";\r\nimport { MateriasAlumnosType, MateriasType } from \"../types/AulaType\";\r\n\r\nexport async function getalumnosAulas(\r\n  token: string | null\r\n): Promise<MateriasAlumnosType[]> {\r\n  const response = await fetch(`${urlBase}/aulas/mis-aulas-con-alumnos`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function getMisAulas(token: string): Promise<MateriasType[]> {\r\n  const response = await fetch(`${urlBase}/aulas/mis-aulas`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","export const PrimaryColor = \"#b14aca\";\r\n","import { Card, Avatar, Text } from \"react-native-paper\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\r\ntype Props = {\r\n  title: string;\r\n  value: number;\r\n  icon: string;\r\n  color: string;\r\n};\r\n\r\nconst ResumenMiniCard = ({ title, value, icon, color = \"#6200ee\" }: Props) => {\r\n  return (\r\n    <Card style={styles.card} mode=\"contained\">\r\n      <Card.Content style={styles.cardContent}>\r\n        <Avatar.Icon\r\n          icon={({ color, size }) => (\r\n            <Ionicons name={icon} color={color} size={size} />\r\n          )}\r\n          style={{ backgroundColor: color }}\r\n        />\r\n        <View style={{ marginLeft: 12 }}>\r\n          <Text variant=\"labelLarge\" style={{ color: \"#777\" }}>\r\n            {title}\r\n          </Text>\r\n          <Text variant=\"titleMedium\" style={{ fontWeight: \"bold\" }}>\r\n            {value}\r\n          </Text>\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ResumenMiniCard;\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n    minWidth: 350,\r\n    marginBottom: 12,\r\n    elevation: 12,\r\n    borderRadius: 12,\r\n    alignSelf: \"center\",\r\n  },\r\n  cardContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { StyleSheet, View } from \"react-native\";\r\nimport { Card, List, Avatar, Divider } from \"react-native-paper\";\r\nimport { User } from \"../types/UserType\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\n// Fix para iconos en web\r\n\r\ninterface Props {\r\n  alumnos: User[];\r\n}\r\nconst AlumnosList = ({ alumnos }: Props) => {\r\n  return (\r\n    <Card style={styles.card}>\r\n      <List.Accordion\r\n        title={`Alumnos (${alumnos.length})`}\r\n        left={(props) => (\r\n          <List.Icon\r\n            {...props}\r\n            icon={({ size, color }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"account-group-outline\"\r\n                size={size}\r\n                color={color}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n        right={(props) => (\r\n          <MaterialCommunityIcons\r\n            name={props.isExpanded ? \"chevron-up\" : \"chevron-down\"}\r\n            size={24}\r\n            color=\"#fff\"\r\n          />\r\n        )}\r\n        titleStyle={styles.accordionTitle}\r\n        style={styles.accordion}\r\n      >\r\n        {alumnos.length === 0 ? (\r\n          <List.Item\r\n            title=\"No hay alumnos\"\r\n            left={(props) => (\r\n              <List.Icon\r\n                {...props}\r\n                icon={({ size, color }) => (\r\n                  <MaterialCommunityIcons\r\n                    name=\"alert-circle-outline\"\r\n                    size={size}\r\n                    color={color}\r\n                  />\r\n                )}\r\n              />\r\n            )}\r\n            titleStyle={{ color: \"#888\" }}\r\n          />\r\n        ) : (\r\n          alumnos.map((alumno, idx) => (\r\n            <View key={alumno.id}>\r\n              <List.Item\r\n                title={alumno.nombre}\r\n                description={alumno.email}\r\n                left={() => (\r\n                  <Avatar.Text\r\n                    size={36}\r\n                    label={alumno.nombre ? alumno.nombre[0].toUpperCase() : \"A\"}\r\n                    style={styles.avatar}\r\n                    color=\"#fff\"\r\n                  />\r\n                )}\r\n                titleStyle={styles.itemTitle}\r\n                descriptionStyle={styles.itemDescription}\r\n                style={styles.listItem}\r\n              />\r\n              {idx < alumnos.length - 1 && <Divider />}\r\n            </View>\r\n          ))\r\n        )}\r\n      </List.Accordion>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AlumnosList;\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    width: \"100%\",\r\n\r\n    maxWidth: 600,\r\n    marginBottom: 12,\r\n    elevation: 12,\r\n    borderRadius: 16,\r\n    overflow: \"hidden\",\r\n  },\r\n  accordion: {},\r\n  accordionTitle: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n  },\r\n  listItem: {\r\n    backgroundColor: \"#fff\",\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 8,\r\n  },\r\n  itemTitle: {\r\n    color: \"#C93A4A\",\r\n    fontWeight: \"600\",\r\n    fontSize: 16,\r\n  },\r\n  itemDescription: {\r\n    color: \"#888\",\r\n    fontSize: 13,\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#C93A4A\",\r\n    marginRight: 8,\r\n  },\r\n});\r\n","import { StyleSheet, View, useWindowDimensions } from \"react-native\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { ActivityIndicator, Text } from \"react-native-paper\";\r\nimport { PrimaryColor } from \"../utils/colors\";\r\nimport { getSaludoFecha } from \"../utils/getSaludoFecha\";\r\nimport ResumenMiniCard from \"../components/ResumenMiniCard\";\r\nimport AlumnosList from \"../components/AlumnosList\";\r\n\r\nconst HomeScreen = () => {\r\n  const { width } = useWindowDimensions();\r\n  const isSmallScreen = width < 400;\r\n\r\n  const { user, loading } = useAuth();\r\n  const { aulas, alumnosMap, isLoading, alarcoins } = useAppData();\r\n  const cargando = isLoading && loading;\r\n\r\n  const totalClasesDictadas = aulas.reduce((total, aula) => {\r\n    return total + (aula.cantidad_clases || 0);\r\n  }, 0);\r\n  const { saludo, fecha } = getSaludoFecha();\r\n\r\n  return (\r\n    <Layout>\r\n      {cargando ? (\r\n        <ActivityIndicator size={\"large\"} color={PrimaryColor} />\r\n      ) : (\r\n        <>\r\n          <View style={[styles.header, isSmallScreen && styles.headerSmall]}>\r\n            <View>\r\n              <Text variant=\"titleMedium\">{`${saludo}, ${user?.nombre}`}</Text>\r\n              <Text variant=\"labelMedium\">\r\n                {user?.is_teacher ? \"Profesor\" : \"Alumno\"}\r\n              </Text>\r\n            </View>\r\n            <View style={isSmallScreen && { marginTop: 8 }}>\r\n              <Text variant=\"bodySmall\">{fecha}</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.cardsContainer}>\r\n            <ResumenMiniCard\r\n              title=\"Aulas\"\r\n              value={aulas.length}\r\n              icon=\"school\"\r\n              color={PrimaryColor}\r\n            />\r\n            <ResumenMiniCard\r\n              title=\"Clases\"\r\n              value={totalClasesDictadas}\r\n              icon=\"calendar\"\r\n              color=\"#C93A9F\"\r\n            />\r\n            {/* <ResumenMiniCard\r\n              title=\"Alarcoins\"\r\n              value={totalClasesDictadas}\r\n              icon=\"star\"\r\n              color=\"#FFD700\"\r\n            /> */}\r\n            {user?.is_teacher && (\r\n              <AlumnosList alumnos={Object.values(alumnosMap)} />\r\n            )}\r\n          </View>\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n    marginBottom: 16,\r\n    gap: 10,\r\n  },\r\n  headerSmall: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    gap: 4,\r\n  },\r\n  cardsContainer: {\r\n    flexWrap: \"wrap\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-between\",\r\n    gap: 16,\r\n    marginBottom: 24,\r\n  },\r\n  alumnosListContainer: {\r\n    marginTop: 16,\r\n  },\r\n});\r\n","export const getSaludoFecha = (): { saludo: string; fecha: string } => {\r\n  const now = new Date();\r\n  const hora = now.getHours();\r\n\r\n  let saludo;\r\n  // Determinar saludo\r\n  if (hora >= 6 && hora < 12) {\r\n    saludo = \"Buenos días\";\r\n  } else if (hora >= 12 && hora < 19) {\r\n    saludo = \"Buenas tardes\";\r\n  } else {\r\n    saludo = \"Buenas noches\";\r\n  }\r\n\r\n  // Formatear fecha\r\n  const opcionesFecha: Intl.DateTimeFormatOptions = {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n  };\r\n\r\n  const fecha = now.toLocaleDateString(\"es-ES\", opcionesFecha);\r\n\r\n  return {\r\n    saludo,\r\n    fecha, // ejemplo: \"20 de mayo de 2025\"\r\n  };\r\n};\r\n","// screens/Login/LoginScreen.tsx\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { loginUser } from \"../api/login\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport { saveToStorage, saveUser } from \"../utils/storage\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { Button, useTheme } from \"react-native-paper\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport { RootStack } from \"../types/route\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Email inválido\").required(\"Requerido\"),\r\n  password: Yup.string().min(6, \"Mínimo 6 caracteres\").required(\"Requerido\"),\r\n});\r\n\r\nexport default function LoginScreen() {\r\n  const navigation = useNavigation<NativeStackNavigationProp<RootStack>>();\r\n  const { loading, setUser, setToken } = useAuth();\r\n  const { loadData } = useAppData();\r\n  const { colors } = useTheme();\r\n  const handleLogin = async (\r\n    values: { email: string; password: string },\r\n    setSubmitting: (isSubmitting: boolean) => void,\r\n    setError: (msg: string) => void,\r\n    resetForm: () => void\r\n  ) => {\r\n    try {\r\n      const response = await loginUser(values);\r\n      resetForm();\r\n      setUser(response.user);\r\n      setToken(response.access_token);\r\n      await saveUser(response.user);\r\n      await saveToStorage(\"token\", response.access_token);\r\n      loadData(response.access_token);\r\n    } catch (error: any) {\r\n      setError(\"Credenciales inválidas\");\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {loading ? (\r\n        <Text>Cargando ...</Text>\r\n      ) : (\r\n        <View style={styles.container}>\r\n          <View style={styles.card}>\r\n            <Text style={styles.title}>Iniciar sesión</Text>\r\n\r\n            <Formik\r\n              initialValues={{ email: \"\", password: \"\" }}\r\n              validationSchema={LoginSchema}\r\n              onSubmit={(values, { setSubmitting, setErrors, resetForm }) =>\r\n                handleLogin(\r\n                  values,\r\n                  setSubmitting,\r\n                  (msg) => setErrors({ password: msg }),\r\n                  resetForm\r\n                )\r\n              }\r\n            >\r\n              {({\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                values,\r\n                errors,\r\n                touched,\r\n                isSubmitting,\r\n              }) => (\r\n                <>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Email\"\r\n                    onChangeText={handleChange(\"email\")}\r\n                    onBlur={handleBlur(\"email\")}\r\n                    value={values.email}\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                  />\r\n                  {touched.email && errors.email && (\r\n                    <Text style={styles.error}>{errors.email}</Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Contraseña\"\r\n                    onChangeText={handleChange(\"password\")}\r\n                    onBlur={handleBlur(\"password\")}\r\n                    value={values.password}\r\n                    secureTextEntry\r\n                  />\r\n                  {touched.password && errors.password && (\r\n                    <Text style={styles.error}>{errors.password}</Text>\r\n                  )}\r\n\r\n                  <Button\r\n                    onPress={() => handleSubmit()}\r\n                    style={{\r\n                      backgroundColor: colors.backdrop,\r\n                      paddingVertical: 8,\r\n                      marginTop: 15,\r\n                    }}\r\n                  >\r\n                    {isSubmitting ? (\r\n                      <ActivityIndicator color=\"#fff\" />\r\n                    ) : (\r\n                      <Text style={styles.buttonText}>Ingresar</Text>\r\n                    )}\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Formik>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  card: {\r\n    width: \"85%\",\r\n    padding: 24,\r\n    borderRadius: 12,\r\n    backgroundColor: \"#fefefe80\",\r\n    elevation: 6, // Android shadow\r\n    shadowColor: \"#000\", // iOS shadow\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    maxWidth: 400,\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    height: 48,\r\n    borderColor: \"#ccc\",\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    paddingHorizontal: 12,\r\n    marginTop: 12,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    fontSize: 12,\r\n    marginTop: 4,\r\n    marginLeft: 4,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"600\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n","import { User } from \"../types/UserType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport interface LoginData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface LoginResponse {\r\n  access_token: string;\r\n  user: User;\r\n}\r\n\r\nexport async function loginUser(data: LoginData): Promise<LoginResponse> {\r\n  const response = await fetch(`${urlBase}/users/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","// services/userService.ts\r\nimport { User, UserUpdateType } from \"../types/UserType\";\r\nimport { getFromStorage } from \"../utils/storage\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport async function updateUser(data: UserUpdateType): Promise<User> {\r\n  const token = await getFromStorage(\"token\");\r\n  const response = await fetch(`${urlBase}/users/me`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al actualizar el usuario\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { Layout } from \"../layout/layout\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Alert,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\nimport {\r\n  Text,\r\n  Card,\r\n  TextInput,\r\n  Button,\r\n  useTheme,\r\n  Divider,\r\n} from \"react-native-paper\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { UserUpdateType } from \"../types/UserType\";\r\nimport { updateUser } from \"../api/updateUser\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  nombre: Yup.string().required(\"El nombre es obligatorio\"),\r\n  apellido: Yup.string().required(\"El apellido es obligatorio\"),\r\n  email: Yup.string().email(\"Email inválido\").required(\"Email requerido\"),\r\n  newPassword: Yup.string().min(6, \"Mínimo 6 caracteres\"),\r\n  confirmPassword: Yup.string().oneOf(\r\n    [Yup.ref(\"newPassword\"), \"\"],\r\n    \"Las contraseñas no coinciden\"\r\n  ),\r\n});\r\n\r\nconst Profile = () => {\r\n  const { user } = useAuth();\r\n  const [editable, setEditable] = useState(false);\r\n  const [nombre, setNombre] = useState(user?.nombre);\r\n  const [apellido, setApellido] = useState(user?.apellido);\r\n  const [email, setEmail] = useState(user?.email);\r\n  const { colors } = useTheme();\r\n  const { width } = useWindowDimensions();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const { setUser } = useAuth();\r\n\r\n  const handleEdit = () => setEditable(true);\r\n\r\n  const handleCancel = () => {\r\n    setEditable(false);\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n  };\r\n\r\n  const handleSave = async (values: UserUpdateType) => {\r\n    const { newPassword, confirmPassword, ...rest } = values;\r\n\r\n    if (newPassword) {\r\n      if (newPassword !== confirmPassword) {\r\n        Alert.alert(\"Error\", \"Las contraseñas no coinciden.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      const updatedUser = await updateUser({\r\n        ...rest,\r\n        password: newPassword || undefined,\r\n      });\r\n\r\n      setUser(updatedUser);\r\n      setEditable(false);\r\n    } catch (error) {\r\n      Alert.alert(\"Error\", (error as Error).message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <ScrollView contentContainerStyle={[styles.container, ,]}>\r\n        <Text\r\n          variant=\"titleLarge\"\r\n          style={[styles.header, { color: colors.primary }]}\r\n        >\r\n          Perfil\r\n        </Text>\r\n        <Text\r\n          variant=\"bodyMedium\"\r\n          style={[styles.subheader, { color: colors.onSurfaceVariant }]}\r\n        >\r\n          Administra tu información personal\r\n        </Text>\r\n\r\n        <Card style={[styles.card, { backgroundColor: colors.surface }]}>\r\n          <View style={styles.cardheader}>\r\n            <Card.Title\r\n              title=\"Información Personal\"\r\n              subtitle=\"Actualiza tu información de cuenta\"\r\n              titleStyle={[styles.cardTitle, { color: colors.primary }]}\r\n              subtitleStyle={[\r\n                styles.cardSubtitle,\r\n                { color: colors.onSurfaceVariant },\r\n              ]}\r\n            />\r\n          </View>\r\n          <Divider\r\n            style={{ marginBottom: 8, backgroundColor: colors.outlineVariant }}\r\n          />\r\n          <Card.Content>\r\n            <Formik\r\n              initialValues={{\r\n                nombre: nombre || \"\",\r\n                apellido: apellido || \"\",\r\n                email: email || \"\",\r\n                newPassword: \"\",\r\n                confirmPassword: \"\",\r\n              }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(values) => {\r\n                handleSave(values);\r\n              }}\r\n              enableReinitialize\r\n            >\r\n              {({\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                values,\r\n                errors,\r\n                touched,\r\n              }) => (\r\n                <View style={styles.form}>\r\n                  <TextInput\r\n                    label=\"Nombre\"\r\n                    value={nombre}\r\n                    onChangeText={setNombre}\r\n                    editable={editable}\r\n                    mode=\"flat\"\r\n                    style={[\r\n                      styles.input,\r\n                      {\r\n                        backgroundColor: editable\r\n                          ? colors.background\r\n                          : colors.surfaceDisabled,\r\n                      },\r\n                    ]}\r\n                    error={!!errors.nombre && touched.nombre}\r\n                    onBlur={handleBlur(\"name\")}\r\n                    left={\r\n                      <TextInput.Icon\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons\r\n                            name=\"person-outline\"\r\n                            color={color}\r\n                            size={size}\r\n                          />\r\n                        )}\r\n                      />\r\n                    }\r\n                  />\r\n                  {editable && errors.nombre && touched.nombre && (\r\n                    <Text style={[styles.error, { color: colors.error }]}>\r\n                      {errors.nombre}\r\n                    </Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    label=\"Apellido\"\r\n                    value={apellido}\r\n                    onChangeText={setApellido}\r\n                    editable={editable}\r\n                    mode=\"flat\"\r\n                    style={[\r\n                      styles.input,\r\n                      {\r\n                        backgroundColor: editable\r\n                          ? colors.background\r\n                          : colors.surfaceDisabled,\r\n                      },\r\n                    ]}\r\n                    error={!!errors.apellido && touched.apellido}\r\n                    onBlur={handleBlur(\"apellido\")}\r\n                    left={\r\n                      <TextInput.Icon\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons\r\n                            name=\"person-outline\"\r\n                            color={color}\r\n                            size={size}\r\n                          />\r\n                        )}\r\n                      />\r\n                    }\r\n                  />\r\n                  {editable && errors.apellido && touched.apellido && (\r\n                    <Text style={[styles.error, { color: colors.error }]}>\r\n                      {errors.apellido}\r\n                    </Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    editable={editable}\r\n                    onChangeText={setEmail}\r\n                    mode=\"flat\"\r\n                    style={[\r\n                      styles.input,\r\n                      { backgroundColor: colors.surfaceDisabled },\r\n                    ]}\r\n                    error={!!errors.email && touched.email}\r\n                    onBlur={handleBlur(\"email\")}\r\n                    left={\r\n                      <TextInput.Icon\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons\r\n                            name=\"mail-outline\"\r\n                            color={color}\r\n                            size={size}\r\n                          />\r\n                        )}\r\n                      />\r\n                    }\r\n                  />\r\n                  {editable && errors.email && touched.email && (\r\n                    <Text style={[styles.error, { color: colors.error }]}>\r\n                      {errors.email}\r\n                    </Text>\r\n                  )}\r\n\r\n                  {editable && (\r\n                    <>\r\n                      <TextInput\r\n                        label=\"Nueva clave\"\r\n                        secureTextEntry\r\n                        value={password}\r\n                        onChangeText={setPassword}\r\n                        placeholder=\"********\"\r\n                        mode=\"flat\"\r\n                        autoComplete=\"off\"\r\n                        textContentType=\"none\"\r\n                        importantForAutofill=\"no\"\r\n                        style={[\r\n                          styles.input,\r\n                          { backgroundColor: colors.background },\r\n                        ]}\r\n                        error={!!errors.newPassword && touched.newPassword}\r\n                        onBlur={handleBlur(\"newPassword\")}\r\n                        left={\r\n                          <TextInput.Icon\r\n                            icon={({ color, size }) => (\r\n                              <Ionicons\r\n                                name=\"lock-closed-outline\"\r\n                                color={color}\r\n                                size={size}\r\n                              />\r\n                            )}\r\n                          />\r\n                        }\r\n                      />\r\n                      {errors.newPassword && touched.newPassword && (\r\n                        <Text style={[styles.error, { color: colors.error }]}>\r\n                          {errors.newPassword}\r\n                        </Text>\r\n                      )}\r\n\r\n                      <TextInput\r\n                        label=\"Repetir clave\"\r\n                        secureTextEntry\r\n                        value={confirmPassword}\r\n                        onChangeText={setConfirmPassword}\r\n                        placeholder=\"********\"\r\n                        mode=\"flat\"\r\n                        style={[styles.input, ,]}\r\n                        left={\r\n                          <TextInput.Icon\r\n                            icon={({ color, size }) => (\r\n                              <Ionicons\r\n                                name=\"lock-closed-outline\"\r\n                                color={color}\r\n                                size={size}\r\n                              />\r\n                            )}\r\n                          />\r\n                        }\r\n                      />\r\n\r\n                      <View style={styles.buttonGroup}>\r\n                        <Button\r\n                          mode=\"outlined\"\r\n                          style={[\r\n                            styles.cancelButton,\r\n                            { borderColor: colors.outline },\r\n                            width < 400 && { flex: 1 },\r\n                          ]}\r\n                          onPress={handleCancel}\r\n                          labelStyle={{ color: colors.primary }}\r\n                        >\r\n                          Cancelar\r\n                        </Button>\r\n                        <Button\r\n                          mode=\"contained\"\r\n                          style={[\r\n                            styles.saveButton,\r\n                            { backgroundColor: colors.primary },\r\n                            width < 400 && { flex: 1 },\r\n                          ]}\r\n                          onPress={handleSubmit as any}\r\n                          labelStyle={{ color: colors.onPrimary }}\r\n                        >\r\n                          Guardar\r\n                        </Button>\r\n                      </View>\r\n                    </>\r\n                  )}\r\n\r\n                  {!editable && (\r\n                    <Button\r\n                      style={[\r\n                        styles.editButton,\r\n                        { backgroundColor: colors.primary },\r\n                        width < 400 && { width: \"100%\", alignSelf: \"center\" },\r\n                      ]}\r\n                      mode=\"contained\"\r\n                      icon={({ color, size }) => (\r\n                        <Ionicons name=\"pencil\" color={color} size={size} />\r\n                      )}\r\n                      onPress={handleEdit}\r\n                      labelStyle={{ color: colors.onPrimary, fontSize: 16 }}\r\n                      contentStyle={{ paddingVertical: 8 }}\r\n                    >\r\n                      Editar\r\n                    </Button>\r\n                  )}\r\n                </View>\r\n              )}\r\n            </Formik>\r\n          </Card.Content>\r\n        </Card>\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexGrow: 1,\r\n    padding: 15,\r\n    alignItems: \"center\",\r\n    minHeight: \"100%\",\r\n  },\r\n  header: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 28,\r\n    marginTop: 16,\r\n    marginBottom: 4,\r\n    alignSelf: \"flex-start\",\r\n    letterSpacing: 0.5,\r\n  },\r\n  subheader: {\r\n    marginBottom: 16,\r\n    alignSelf: \"flex-start\",\r\n    fontSize: 16,\r\n    opacity: 0.85,\r\n  },\r\n  avatarContainer: {\r\n    alignItems: \"center\",\r\n    marginVertical: 16,\r\n    width: \"100%\",\r\n  },\r\n  cardheader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingRight: 8,\r\n    paddingTop: 8,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  cardSubtitle: {\r\n    fontSize: 14,\r\n  },\r\n  editButton: {\r\n    marginTop: 16,\r\n    borderRadius: 20,\r\n    minWidth: 120,\r\n    elevation: 0,\r\n    alignSelf: \"center\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    alignSelf: \"center\",\r\n    marginTop: 16,\r\n    paddingHorizontal: 0,\r\n    borderRadius: 16,\r\n    elevation: 2,\r\n  },\r\n  form: {\r\n    gap: 8,\r\n    marginTop: 8,\r\n    width: \"100%\",\r\n  },\r\n  input: {\r\n    marginBottom: 4,\r\n  },\r\n  error: {\r\n    fontSize: 12,\r\n    marginBottom: 4,\r\n    marginLeft: 4,\r\n  },\r\n  buttonGroup: {\r\n    marginTop: 16,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    gap: 8,\r\n  },\r\n  saveButton: {\r\n    marginLeft: 8,\r\n    borderRadius: 20,\r\n    minWidth: 100,\r\n  },\r\n  cancelButton: {\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 20,\r\n    minWidth: 100,\r\n  },\r\n  logoutButton: {\r\n    marginTop: 32,\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    alignSelf: \"center\",\r\n    borderRadius: 20,\r\n    borderWidth: 1,\r\n    borderColor: \"#e53935\",\r\n    color: \"#e53935\",\r\n  },\r\n});\r\n\r\nexport default Profile;\r\n","export const getInitials = (nombre?: string, apellido?: string) => {\r\n  const n = nombre?.trim()?.[0]?.toUpperCase() ?? \"\";\r\n  const a = apellido?.trim()?.[0]?.toUpperCase() ?? \"\";\r\n  return `${n}${a}`;\r\n};\r\n","import { View, StyleSheet } from \"react-native\";\r\nimport { Avatar, Text } from \"react-native-paper\";\r\nimport { User } from \"../types/UserType\";\r\nimport { useTheme } from \"@react-navigation/native\";\r\nimport { getInitials } from \"../utils/initials\";\r\n\r\ninterface Props {\r\n  isalarcoins: boolean;\r\n  alarcoins: number | undefined;\r\n  user: User;\r\n  loading: boolean;\r\n  desdeProfe?: boolean;\r\n}\r\n\r\nconst AvatarCard = ({\r\n  alarcoins,\r\n  isalarcoins = false,\r\n  user,\r\n  loading,\r\n  desdeProfe,\r\n}: Props) => {\r\n  const { colors } = useTheme();\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.profile,\r\n        isalarcoins && {\r\n          backgroundColor: colors.background,\r\n          borderRadius: 12,\r\n          padding: 16,\r\n          elevation: 2, // o shadow para iOS\r\n          shadowColor: \"#000\",\r\n          shadowOffset: { width: 0, height: 1 },\r\n          shadowOpacity: 0.2,\r\n          shadowRadius: 1.41,\r\n        },\r\n      ]}\r\n    >\r\n      <Avatar.Text\r\n        label={getInitials(user?.nombre, user?.apellido)}\r\n        size={64}\r\n        style={styles.avatar}\r\n      />\r\n      <Text variant=\"titleLarge\" style={styles.name}>\r\n        {loading ? \"Cargando\" : `${user?.nombre} ${user?.apellido}`}\r\n      </Text>\r\n      {!isalarcoins && (\r\n        <Text variant=\"bodySmall\" style={styles.role}>\r\n          {loading ? \"cargando\" : user?.is_teacher ? \"Profesor\" : \"Alumno\"}\r\n        </Text>\r\n      )}\r\n\r\n      {isalarcoins && (\r\n        <View>\r\n          <Text variant=\"bodyMedium\">\r\n            {desdeProfe ? \"epetCoins\" : \"Tus epetCoins\"}\r\n          </Text>\r\n          <Text variant=\"bodyMedium\" style={{ textAlign: \"center\" }}>\r\n            {alarcoins}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  profile: {\r\n    alignItems: \"center\",\r\n    marginBottom: 16,\r\n    maxWidth: 350,\r\n    margin: 10,\r\n    width: \"100%\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#c001f5\",\r\n  },\r\n  name: {\r\n    marginTop: 8,\r\n    fontWeight: \"bold\",\r\n  },\r\n  role: {\r\n    fontSize: 14,\r\n    color: \"#6b7280\",\r\n  },\r\n});\r\n\r\nexport default AvatarCard;\r\n","import { MD3LightTheme, MD3DarkTheme, MD3Theme } from \"react-native-paper\";\r\n\r\nexport const lightTheme: MD3Theme = {\r\n  ...MD3LightTheme,\r\n  colors: {\r\n    ...MD3LightTheme.colors,\r\n    primary: \"#d83dff\",\r\n    background: \"#d1a3ff\",\r\n    surface: \"#d1a3ff\",\r\n    text: \"#2b2b2b\",\r\n    secondary: \"#4ab19f\",\r\n    accent: \"#f2c94c\",\r\n    asistenciaBuena: \"#10b981\",\r\n    asistenciaMedia: \"#ffb93f\",\r\n    asistenciaMala: \"#ef4444\",\r\n  },\r\n};\r\n\r\nexport const darkTheme: MD3Theme = {\r\n  ...MD3DarkTheme,\r\n  colors: {\r\n    ...MD3DarkTheme.colors,\r\n    primary: \"#b14aca\",\r\n    background: \"#302f2f\",\r\n    surface: \"#1e1e1e\",\r\n    text: \"#ffffff\",\r\n    secondary: \"#4ab19f\",\r\n    accent: \"#f2c94c\",\r\n    asistenciaBuena: \"#097551\",\r\n    asistenciaMedia: \"#f59e0b\",\r\n    asistenciaMala: \"#e21313\",\r\n  },\r\n};\r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { Appearance } from \"react-native\";\r\nimport { lightTheme, darkTheme } from \"../utils/theme\";\r\nimport { useColorScheme } from \"react-native\";\r\nimport { getFromStorage, saveToStorage } from \"../utils/storage\";\r\n\r\nconst ThemeContext = createContext({\r\n  isDarkMode: false,\r\n  toggleTheme: () => {},\r\n  theme: lightTheme,\r\n});\r\n\r\nexport const ThemeProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const systemColorScheme = useColorScheme(); // 'light' | 'dark' | null\r\n  const [useSystemTheme, setUseSystemTheme] = useState(true);\r\n  const [isDarkMode, setIsDarkMode] = useState(systemColorScheme === \"dark\");\r\n\r\n  useEffect(() => {\r\n    const loadTheme = async () => {\r\n      const stored = await getFromStorage(\"theme\");\r\n      if (stored === \"light\" || stored === \"dark\") {\r\n        setUseSystemTheme(false);\r\n        setIsDarkMode(stored === \"dark\");\r\n      } else {\r\n        setUseSystemTheme(true);\r\n        setIsDarkMode(systemColorScheme === \"dark\");\r\n      }\r\n    };\r\n    loadTheme();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (useSystemTheme && systemColorScheme) {\r\n      setIsDarkMode(systemColorScheme === \"dark\");\r\n    }\r\n  }, [systemColorScheme, useSystemTheme]);\r\n\r\n  useEffect(() => {\r\n    const listener = Appearance.addChangeListener(({ colorScheme }) => {\r\n      setIsDarkMode(colorScheme === \"dark\");\r\n    });\r\n    return () => listener.remove();\r\n  }, []);\r\n\r\n  const toggleTheme = async () => {\r\n    const newValue = !isDarkMode;\r\n    setIsDarkMode(newValue);\r\n    setUseSystemTheme(false);\r\n    await saveToStorage(\"theme\", newValue ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const theme = isDarkMode ? darkTheme : lightTheme;\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme, theme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useThemeContext = () => useContext(ThemeContext);\r\n","import React from \"react\";\r\nimport { DrawerContentScrollView, DrawerItem } from \"@react-navigation/drawer\";\r\nimport { Drawer, Switch } from \"react-native-paper\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\r\nimport AvatarCard from \"../components/AvatarCard\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useThemeContext } from \"../context/themeContext\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport { RootStack } from \"../types/route\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\n\r\nexport default function CustomDrawerContent(props: any) {\r\n  const { isDarkMode, toggleTheme } = useThemeContext();\r\n  const { user, loading, logout } = useAuth();\r\n  const { epetCoin } = useAppData();\r\n\r\n  const drawerItems = [\r\n    {\r\n      icon: \"grid-outline\",\r\n      label: \"Dashboard\",\r\n      screen: \"Home\",\r\n    },\r\n    {\r\n      icon: \"person-outline\",\r\n      label: \"Perfil\",\r\n      screen: \"Perfil\",\r\n    },\r\n    {\r\n      icon: \"book-outline\",\r\n      label: \"Mis Aulas\",\r\n      screen: \"MateriasStack\",\r\n    },\r\n    {\r\n      icon: \"logo-bitcoin\",\r\n      label: user?.is_teacher\r\n        ? epetCoin?.nombre\r\n          ? epetCoin?.nombre\r\n          : \"epetCoins\"\r\n        : \"Mis epetCoins\",\r\n      screen: \"Alarcoin\",\r\n    },\r\n  ];\r\n\r\n  const navigation = useNavigation<NativeStackNavigationProp<RootStack>>();\r\n  return (\r\n    <DrawerContentScrollView {...props} contentContainerStyle={{ flex: 1 }}>\r\n      <View style={styles.container}>\r\n        {/* Perfil */}\r\n        <AvatarCard user={user} loading={loading} isalarcoins={false} />\r\n        {/* Navegación */}\r\n        <Drawer.Section style={styles.nav}>\r\n          {drawerItems.map((item, index) => (\r\n            <DrawerItem\r\n              key={index}\r\n              icon={({ color, size }) => (\r\n                <Ionicons name={item.icon as any} color={color} size={size} />\r\n              )}\r\n              label={item.label}\r\n              onPress={() => props.navigation.navigate(item.screen as any)}\r\n            />\r\n          ))}\r\n        </Drawer.Section>\r\n\r\n        {/* Cerrar sesión */}\r\n        <Drawer.Section style={styles.bottom}>\r\n          <View style={[styles.switchRow, styles.themeItem]}>\r\n            <DrawerItem\r\n              icon={({ color, size }) => (\r\n                <Ionicons\r\n                  name={isDarkMode ? \"moon\" : \"sunny\"}\r\n                  color={color}\r\n                  size={size}\r\n                />\r\n              )}\r\n              label={isDarkMode ? \"Modo oscuro\" : \"Modo claro\"}\r\n              onPress={toggleTheme}\r\n              style={{ flex: 1 }}\r\n            />\r\n            <Switch value={isDarkMode} onValueChange={toggleTheme} />\r\n          </View>\r\n\r\n          <DrawerItem\r\n            icon={({ color, size }) => (\r\n              <Feather name=\"log-out\" color={color} size={size} />\r\n            )}\r\n            label=\"Cerrar sesión\"\r\n            onPress={() => {\r\n              logout();\r\n              // navigation.dispatch(\r\n              //   CommonActions.reset({\r\n              //     index: 0,\r\n              //     routes: [{ name: \"Login\" }],\r\n              //   })\r\n              // );\r\n            }}\r\n          />\r\n        </Drawer.Section>\r\n      </View>\r\n    </DrawerContentScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 24,\r\n  },\r\n  nav: {\r\n    marginTop: 16,\r\n  },\r\n  bottom: {\r\n    marginTop: \"auto\",\r\n    padding: 5,\r\n  },\r\n  switchRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 8,\r\n  },\r\n  themeItem: {\r\n    paddingRight: 8,\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, Text } from \"react-native\";\r\nimport {\r\n  Button,\r\n  Menu,\r\n  Divider,\r\n  HelperText,\r\n  useTheme,\r\n} from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\ninterface Props {\r\n  historial: { aula_id: number; nombre: string }[];\r\n  onSeleccionar: (id: number | null) => void;\r\n  error?: boolean;\r\n}\r\n\r\nexport const SelectMateria = ({ historial, onSeleccionar, error }: Props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [selected, setSelected] = useState<{\r\n    label: string;\r\n    id: number | null;\r\n  }>({ label: \"Elegir materia\", id: null });\r\n\r\n  const { colors } = useTheme();\r\n\r\n  const openMenu = () => setVisible(true);\r\n  const closeMenu = () => setVisible(false);\r\n\r\n  const handleSelect = (nombre: string, id: number | null) => {\r\n    setSelected({ label: nombre, id });\r\n    closeMenu();\r\n    onSeleccionar(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelected({ label: \"Elegir materia\", id: null });\r\n  }, [historial]);\r\n\r\n  return (\r\n    <View>\r\n      <Menu\r\n        visible={visible}\r\n        onDismiss={closeMenu}\r\n        anchor={\r\n          <Button\r\n            mode={error ? \"contained-tonal\" : \"outlined\"}\r\n            onPress={openMenu}\r\n            contentStyle={styles.buttonContent}\r\n            style={[styles.button, error && { borderColor: colors.error }]}\r\n          >\r\n            <View style={styles.labelWithIcon}>\r\n              <Ionicons\r\n                name=\"book-outline\"\r\n                size={18}\r\n                color={error ? colors.error : colors.onSurface}\r\n                style={styles.iconLeft}\r\n              />\r\n              <View style={styles.labelTextWrapper}>\r\n                <Ionicons\r\n                  name={visible ? \"chevron-up\" : \"chevron-down\"}\r\n                  size={18}\r\n                  color={error ? colors.error : colors.onSurface}\r\n                  style={styles.iconRight}\r\n                />\r\n\r\n                <Text style={[styles.innerLabel, { color: colors.onSurface }]}>\r\n                  {selected.label}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          </Button>\r\n        }\r\n      >\r\n        <Menu.Item\r\n          key=\"default-item\"\r\n          onPress={() => handleSelect(\"Elegir materia\", null)}\r\n          title=\"Elegir materia\"\r\n          leadingIcon={() => (\r\n            <Ionicons name=\"refresh-outline\" size={18} color={colors.primary} />\r\n          )}\r\n        />\r\n        <Divider />\r\n        {historial.map((item) => (\r\n          <Menu.Item\r\n            key={item.aula_id}\r\n            onPress={() => handleSelect(item.nombre, item.aula_id)}\r\n            title={item.nombre}\r\n            leadingIcon={() => (\r\n              <Ionicons\r\n                name=\"school-outline\"\r\n                size={18}\r\n                color={colors.primary}\r\n              />\r\n            )}\r\n          />\r\n        ))}\r\n      </Menu>\r\n\r\n      {error && (\r\n        <HelperText type=\"error\" visible={error}>\r\n          Debes seleccionar una materia.\r\n        </HelperText>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    borderWidth: 1,\r\n  },\r\n  labelWithIcon: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  labelTextWrapper: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 6,\r\n  },\r\n  iconLeft: {\r\n    marginRight: 8,\r\n  },\r\n  iconRight: {\r\n    marginRight: 4,\r\n  },\r\n  innerLabel: {\r\n    paddingHorizontal: 0,\r\n  },\r\n});\r\n","import { useMemo, useState } from \"react\";\r\nimport { View, ScrollView, Alert } from \"react-native\";\r\nimport {\r\n  Modal,\r\n  Portal,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  RadioButton,\r\n  useTheme,\r\n  SegmentedButtons,\r\n  Card,\r\n  Divider,\r\n  Snackbar,\r\n} from \"react-native-paper\";\r\nimport { User } from \"../types/UserType\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport {\r\n  TransaccionCoinAulaAlumnoType,\r\n  TransaccionCoinCreateType,\r\n  TransaccionCoinHistorialType,\r\n} from \"../types/EpetcoinType\";\r\nimport { SelectMateria } from \"./DropDonw\";\r\nimport { crearTransaccion } from \"../api/epetcoins\";\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  onDismiss: () => void;\r\n  user: User | null;\r\n  is_teacher: boolean | undefined;\r\n  selectedAula?: TransaccionCoinAulaAlumnoType;\r\n}\r\n\r\nconst AlarcoinModal = ({\r\n  visible,\r\n  onDismiss,\r\n  user,\r\n  is_teacher,\r\n  selectedAula,\r\n}: Props) => {\r\n  if (!user) return null;\r\n  const { colors } = useTheme();\r\n  const [tab, setTab] = useState(is_teacher ? \"asignar\" : \"historial\");\r\n  const [cantidad, setCantidad] = useState(\"0\");\r\n  const [concepto, setConcepto] = useState(\"\");\r\n  const [tipo, setTipo] = useState<string>(\"1\");\r\n  const [materiaSeleccionada, setMateriaSeleccionada] = useState<number | null>(\r\n    null\r\n  );\r\n  const [visibleSnack, setVisibleSnack] = useState(false);\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  const { transaccioncoins, loadAlarcoins, epetCoin } = useAppData();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const historialPorAula = useMemo(() => {\r\n    if (!user) return [];\r\n\r\n    if (is_teacher) {\r\n      // PROFESOR: busca en todas las aulas\r\n      return (transaccioncoins ?? [])\r\n        .map((aula) => {\r\n          if (\"alumnos\" in aula && Array.isArray(aula.alumnos)) {\r\n            const alumno = aula.alumnos.find(\r\n              (a: { id: number }) => a.id === user.id\r\n            );\r\n            if (alumno) {\r\n              return {\r\n                aula_id: aula.aula_id,\r\n                nombre: aula.nombre,\r\n                epetcoins: alumno.epetcoins || [],\r\n              };\r\n            }\r\n          }\r\n          return null;\r\n        })\r\n        .filter(\r\n          (\r\n            aula\r\n          ): aula is {\r\n            aula_id: number;\r\n            nombre: string;\r\n            epetcoins: TransaccionCoinHistorialType[];\r\n          } => aula !== null\r\n        );\r\n    } else if (selectedAula) {\r\n      return [\r\n        {\r\n          aula_id: selectedAula.id,\r\n          nombre: selectedAula.nombre,\r\n          epetcoins: selectedAula.epetcoins,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return [];\r\n  }, [transaccioncoins, user, is_teacher, selectedAula]);\r\n\r\n  const handleGuardar = async () => {\r\n    if (!materiaSeleccionada || materiaSeleccionada === 0) {\r\n      setMensaje(\"Debes seleccionar una materia válida.\");\r\n      setVisibleSnack(true);\r\n      return;\r\n    }\r\n\r\n    if (!concepto.trim()) {\r\n      Alert.alert(\"Atención\", \"Debes ingresar un concepto.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    const transaccionCoin: TransaccionCoinCreateType = {\r\n      aula_id: materiaSeleccionada,\r\n      alumno_id: user.id,\r\n      detalle: concepto,\r\n      suma: Number(tipo),\r\n      cantidad: Number(cantidad),\r\n      moneda_id: epetCoin?.id,\r\n    };\r\n    try {\r\n      await crearTransaccion(transaccionCoin);\r\n      setCantidad(\"0\");\r\n      setConcepto(\"\");\r\n      setTipo(\"1\");\r\n      setMateriaSeleccionada(null);\r\n      onDismiss();\r\n      loadAlarcoins(true);\r\n      setMensaje(\"Alarcoin guardado correctamente.\");\r\n      setVisibleSnack(true);\r\n    } catch (error) {\r\n      setMensaje(\"error al guardar\");\r\n      setVisibleSnack(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <Snackbar\r\n        visible={visibleSnack && mensaje !== \"\"}\r\n        duration={1000}\r\n        onDismiss={() => {\r\n          setVisibleSnack(false);\r\n          setMensaje(\"\");\r\n        }}\r\n        action={{\r\n          label: \"Dale\",\r\n          onPress: () => setVisibleSnack(false),\r\n        }}\r\n      >\r\n        {mensaje}\r\n      </Snackbar>\r\n      <Modal\r\n        visible={visible}\r\n        onDismiss={onDismiss}\r\n        contentContainerStyle={{\r\n          backgroundColor: colors.surface,\r\n          padding: 10,\r\n          margin: 10,\r\n          borderRadius: 12,\r\n          width: \"90%\",\r\n          maxWidth: 500,\r\n          justifyContent: \"flex-start\",\r\n          alignSelf: \"center\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            flexWrap: \"nowrap\",\r\n            overflow: \"hidden\",\r\n            marginBottom: 8,\r\n          }}\r\n        >\r\n          <SegmentedButtons\r\n            value={tab}\r\n            onValueChange={setTab}\r\n            buttons={[\r\n              { value: \"historial\", label: \"Historial\" },\r\n              ...(is_teacher ? [{ value: \"asignar\", label: \"Asignar\" }] : []),\r\n            ]}\r\n            style={{\r\n              flex: 1,\r\n              minWidth: 0,\r\n              maxWidth: \"100%\",\r\n              borderRadius: 12,\r\n              overflow: \"hidden\",\r\n            }}\r\n          />\r\n        </View>\r\n        {tab === \"asignar\" && is_teacher && (\r\n          <Card mode=\"contained\" style={{ marginTop: 10, padding: 5 }}>\r\n            <Text variant=\"titleMedium\" style={{ marginBottom: 5 }}>\r\n              {`Gestionar Alarcoins de: ${user.nombre} ${user.apellido}`}\r\n            </Text>\r\n\r\n            <SelectMateria\r\n              historial={historialPorAula}\r\n              onSeleccionar={setMateriaSeleccionada}\r\n            />\r\n\r\n            <Divider style={{ marginVertical: 16 }} />\r\n\r\n            <Text variant=\"labelLarge\" style={{ marginBottom: 4 }}>\r\n              Cantidad\r\n            </Text>\r\n            <View\r\n              style={{ flexDirection: \"row\", alignItems: \"center\", gap: 8 }}\r\n            >\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={() =>\r\n                  setCantidad((prev) => String(Math.max(0, Number(prev) - 1)))\r\n                }\r\n              >\r\n                -\r\n              </Button>\r\n\r\n              <TextInput\r\n                value={cantidad}\r\n                onChangeText={setCantidad}\r\n                keyboardType=\"numeric\"\r\n                mode=\"outlined\"\r\n                style={{ flex: 1 }}\r\n              />\r\n\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={() => setCantidad((prev) => String(Number(prev) + 1))}\r\n              >\r\n                +\r\n              </Button>\r\n            </View>\r\n\r\n            <TextInput\r\n              label=\"Concepto\"\r\n              mode=\"outlined\"\r\n              value={concepto}\r\n              onChangeText={setConcepto}\r\n              style={{ marginTop: 16 }}\r\n            />\r\n\r\n            <Text variant=\"labelLarge\" style={{ marginTop: 16 }}>\r\n              Tipo de operación\r\n            </Text>\r\n            <RadioButton.Group\r\n              onValueChange={(value) => setTipo(value)}\r\n              value={tipo}\r\n            >\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                <RadioButton.Item label=\"Sumar\" value=\"1\" />\r\n                <RadioButton.Item label=\"Restar\" value=\"0\" />\r\n              </View>\r\n            </RadioButton.Group>\r\n\r\n            <Divider style={{ marginVertical: 16 }} />\r\n\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}>\r\n              <Button mode=\"contained\" onPress={handleGuardar}>\r\n                {loading ? \"Guardando...\" : \"Guardar\"}\r\n              </Button>\r\n            </View>\r\n          </Card>\r\n        )}\r\n        {tab === \"historial\" && (\r\n          <View style={{ marginTop: 12 }}>\r\n            <Text variant=\"titleMedium\" style={{ marginBottom: 8 }}>\r\n              Historial de Epetcoins\r\n            </Text>\r\n            {historialPorAula.every(\r\n              (item) => (item.epetcoins ?? []).length === 0\r\n            ) ? (\r\n              <Text style={{ marginTop: 8 }}>No hay historial aún</Text>\r\n            ) : (\r\n              <ScrollView>\r\n                {historialPorAula\r\n                  .filter((aula) => (aula.epetcoins ?? []).length > 0)\r\n\r\n                  .map((aula) => {\r\n                    // Calcular el total de alarcoins para el aula\r\n                    const totalAlarcoins = aula.epetcoins.reduce(\r\n                      (acc, entry) =>\r\n                        acc + (entry.suma ? entry.cantidad : -entry.cantidad),\r\n                      0\r\n                    );\r\n                    return (\r\n                      <Card key={aula.aula_id} style={{ marginBottom: 16 }}>\r\n                        <Card.Title\r\n                          title={\r\n                            <View\r\n                              key={aula.aula_id}\r\n                              style={{\r\n                                flexDirection: \"row\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                            >\r\n                              <Text>{aula.nombre}</Text>\r\n                              <Text\r\n                                style={{\r\n                                  marginLeft: 8,\r\n                                  fontWeight: \"bold\",\r\n                                  color: totalAlarcoins >= 0 ? \"green\" : \"red\",\r\n                                }}\r\n                              >\r\n                                {`(${totalAlarcoins})`}\r\n                              </Text>\r\n                            </View>\r\n                          }\r\n                        />\r\n                        <Card.Content>\r\n                          {aula.epetcoins.map((entry) => (\r\n                            <View key={entry.id}>\r\n                              <View\r\n                                key={entry.id}\r\n                                style={{\r\n                                  flexDirection: \"row\",\r\n                                  justifyContent: \"space-between\",\r\n                                  marginVertical: 4,\r\n                                }}\r\n                              >\r\n                                <Text>\r\n                                  {new Date(entry.fecha).toLocaleDateString()}\r\n                                </Text>\r\n                                <Text>{entry.detalle}</Text>\r\n                                <Text\r\n                                  style={{\r\n                                    color: entry.suma ? \"green\" : \"red\",\r\n                                  }}\r\n                                >\r\n                                  {entry.suma\r\n                                    ? `+${entry.cantidad}`\r\n                                    : `-${entry.cantidad}`}\r\n                                </Text>\r\n                              </View>\r\n                              <Divider />\r\n                            </View>\r\n                          ))}\r\n                        </Card.Content>\r\n                      </Card>\r\n                    );\r\n                  })}\r\n              </ScrollView>\r\n            )}\r\n          </View>\r\n        )}\r\n      </Modal>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nexport default AlarcoinModal;\r\n\r\n//implementar a futuro\r\n\r\n// import React, { useMemo, useState } from \"react\";\r\n// import { Modal, Portal, Card, Text, Button, Divider } from \"react-native-paper\";\r\n// import { View, ScrollView, StyleSheet, Dimensions } from \"react-native\";\r\n// import { TabView, SceneMap, TabBar } from \"react-native-tab-view\";\r\n// import { User } from \"../types/UserType\";\r\n// import { AlarcoinAulaAlumnoType } from \"../types/AlarcoinType\";\r\n// import { useAppData } from \"../context/appDataContext\";\r\n\r\n// interface Props {\r\n//   visible: boolean;\r\n//   onDismiss: () => void;\r\n//   user: User | null;\r\n//   is_teacher: boolean | undefined;\r\n//   selectedAula?: AlarcoinAulaAlumnoType;\r\n// }\r\n\r\n// const AlarcoinModal: React.FC<Props> = ({\r\n//   visible,\r\n//   onDismiss,\r\n//   user,\r\n//   is_teacher,\r\n//   selectedAula,\r\n// }) => {\r\n//   const layout = Dimensions.get(\"window\");\r\n//   const [index, setIndex] = useState(0);\r\n\r\n//   const [routes] = useState([\r\n//     { key: \"historial\", title: \"Historial\" },\r\n//     ...(is_teacher ? [{ key: \"asignar\", title: \"Asignar\" }] : []),\r\n//   ]);\r\n\r\n//   const { alarcoins } = useAppData();\r\n\r\n//   const historial = useMemo(() => {\r\n//     if (!selectedAula || !user) return [];\r\n//     return alarcoins?.alarcoins ?? [];\r\n//   }, [selectedAula, user]);\r\n\r\n//   const renderHistorial = () => (\r\n//     <ScrollView contentContainerStyle={styles.scroll}>\r\n//       <Card>\r\n//         <Card.Title title={selectedAula?.nombre || \"Aula\"} />\r\n//         <Card.Content>\r\n//           {historial.length === 0 ? (\r\n//             <Text>No hay movimientos aún.</Text>\r\n//           ) : (\r\n//             historial.map((entry, index) => (\r\n//               <View key={index} style={styles.entry}>\r\n//                 <Text>{new Date(entry.fecha).toLocaleDateString()}</Text>\r\n//                 <Text>{entry.motivo}</Text>\r\n//                 <Text style={{ color: entry.cantidad > 0 ? \"green\" : \"red\" }}>\r\n//                   {entry.cantidad > 0 ? `+${entry.cantidad}` : entry.cantidad}\r\n//                 </Text>\r\n//                 <Divider style={{ marginVertical: 4 }} />\r\n//               </View>\r\n//             ))\r\n//           )}\r\n//         </Card.Content>\r\n//       </Card>\r\n//     </ScrollView>\r\n//   );\r\n\r\n//   const renderAsignar = () => (\r\n//     <View style={styles.asignar}>\r\n//       <Text style={{ marginBottom: 8 }}>\r\n//         Aquí podrías colocar el formulario de asignación:\r\n//       </Text>\r\n//       <Button mode=\"contained\" onPress={() => {}}>\r\n//         Asignar alarcoins\r\n//       </Button>\r\n//     </View>\r\n//   );\r\n\r\n//   const renderScene = SceneMap({\r\n//     historial: renderHistorial,\r\n//     asignar: renderAsignar,\r\n//   });\r\n\r\n//   return (\r\n//     <Portal>\r\n//       <Modal\r\n//         visible={visible}\r\n//         onDismiss={onDismiss}\r\n//         contentContainerStyle={styles.modal}\r\n//       >\r\n//         <TabView\r\n//           navigationState={{ index, routes }}\r\n//           renderScene={renderScene}\r\n//           onIndexChange={setIndex}\r\n//           initialLayout={{ width: layout.width }}\r\n//           renderTabBar={(props) => (\r\n//             <TabBar\r\n//               {...props}\r\n//               indicatorStyle={{ backgroundColor: \"white\" }}\r\n//               style={{ backgroundColor: \"#6200ee\" }}\r\n//             />\r\n//           )}\r\n//         />\r\n//       </Modal>\r\n//     </Portal>\r\n//   );\r\n// };\r\n\r\n// export default AlarcoinModal;\r\n\r\n// const styles = StyleSheet.create({\r\n//   modal: {\r\n//     margin: 16,\r\n//     backgroundColor: \"white\",\r\n//     borderRadius: 12,\r\n//     padding: 16,\r\n//     maxHeight: \"90%\",\r\n//   },\r\n//   scroll: {\r\n//     paddingBottom: 24,\r\n//   },\r\n//   entry: {\r\n//     marginVertical: 4,\r\n//   },\r\n//   asignar: {\r\n//     padding: 16,\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//   },\r\n// });\r\n","import React from \"react\";\r\nimport { View, Image } from \"react-native\";\r\nimport { ActivityIndicator, Text, Button } from \"react-native-paper\";\r\n\r\ntype Props = {\r\n  isLoading: boolean;\r\n  hasError: boolean;\r\n  reLoad: () => void;\r\n  children: React.ReactNode;\r\n  errorMessage?: string;\r\n};\r\n\r\nexport default function LoadError({\r\n  isLoading,\r\n  hasError,\r\n  reLoad,\r\n  children,\r\n  errorMessage = \"Ocurrió un error al cargar los datos\",\r\n}: Props) {\r\n  if (isLoading) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color=\"violet\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (hasError) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <Text\r\n          variant=\"titleLarge\"\r\n          style={{ marginBottom: 12, color: \"#9333EA\", textAlign: \"center\" }}\r\n        >\r\n          {errorMessage}\r\n        </Text>\r\n        <Image\r\n          source={require(\"../../assets/errorImagen.png\")}\r\n          style={{\r\n            width: 200,\r\n            height: 200,\r\n            marginBottom: 20,\r\n            borderRadius: 100,\r\n          }}\r\n          resizeMode=\"contain\"\r\n        />\r\n        <Button mode=\"contained\" onPress={reLoad}>\r\n          Reintentar\r\n        </Button>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return <>{children}</>;\r\n}\r\n","import { Card, Text, useTheme } from \"react-native-paper\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { MateriasSimpleType } from \"../types/AulaType\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\ntype Props = {\r\n  materia: MateriasSimpleType;\r\n  onPress?: (materia: MateriasSimpleType) => void;\r\n  porcentaje?: number;\r\n  is_alumno: boolean;\r\n  alarcoin?: number;\r\n  coin?: string;\r\n};\r\n\r\nexport default function MateriasCard({\r\n  materia,\r\n  onPress,\r\n  porcentaje = 0,\r\n  is_alumno,\r\n  alarcoin,\r\n  coin,\r\n}: Props) {\r\n  const { colors } = useTheme();\r\n  const getColorFromPorcentaje = (porcentaje: number) => {\r\n    if (porcentaje === 0) return [\"transparent\", \"transparent\"];\r\n    if (porcentaje < 60) return [colors.background, colors.asistenciaMala]; // rojo\r\n    if (porcentaje < 79) return [colors.background, colors.asistenciaMedia]; // naranja\r\n\r\n    return [colors.background, colors.asistenciaBuena]; // verde\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      style={[styles.card]}\r\n      mode=\"outlined\"\r\n      onPress={onPress ? () => onPress(materia) : undefined}\r\n    >\r\n      <LinearGradient\r\n        colors={\r\n          is_alumno && !alarcoin\r\n            ? getColorFromPorcentaje(porcentaje)\r\n            : [\"#trnasparent\", \"transparent\"]\r\n        }\r\n        start={{ x: 0.4, y: 0.3 }}\r\n        end={{ x: 1, y: 1 }}\r\n        style={{ borderRadius: 8, padding: 10 }}\r\n      >\r\n        <Card.Content style={styles.cardContent}>\r\n          <View style={styles.infoLeft}>\r\n            <Text variant=\"titleMedium\">{materia.nombre}</Text>\r\n            <View style={styles.scheduleRow}>\r\n              <Text variant=\"bodySmall\">\r\n                {`${materia.ano}° ${materia.division}° - ${materia.especialidad}`}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.infoRight}>\r\n            <Text variant=\"labelSmall\">\r\n              {is_alumno && alarcoin == null\r\n                ? \"Asistencias\"\r\n                : alarcoin != null\r\n                ? coin\r\n                : \" Clases dictadas\"}\r\n            </Text>\r\n            <Text variant=\"titleMedium\" style={styles.classCount}>\r\n              {is_alumno && alarcoin == null\r\n                ? `${porcentaje}%`\r\n                : alarcoin != null\r\n                ? alarcoin\r\n                : materia.cantidad_clases}\r\n            </Text>\r\n          </View>\r\n        </Card.Content>\r\n      </LinearGradient>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    marginBottom: 16,\r\n    width: \"100%\",\r\n    marginHorizontal: 10,\r\n    maxWidth: 450,\r\n    borderRadius: 8,\r\n    elevation: 3,\r\n    alignSelf: \"center\",\r\n  },\r\n  cardContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  infoLeft: {\r\n    flex: 1,\r\n    gap: 4,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    gap: 6,\r\n  },\r\n\r\n  infoRight: {\r\n    alignItems: \"flex-end\",\r\n  },\r\n\r\n  classCount: {\r\n    marginTop: 2,\r\n    fontWeight: \"600\",\r\n  },\r\n});\r\n","import { FlatList, View, useWindowDimensions } from \"react-native\";\r\nimport React from \"react\";\r\n\r\ninterface ResponsiveGridProps<T> {\r\n  items: T[];\r\n  renderItem: (item: T) => React.ReactElement | null;\r\n  numColumns?: number;\r\n  getKey: (item: T) => string | number;\r\n  refreshing?: boolean;\r\n  onRefresh?: () => void;\r\n  ListEmptyComponent?: React.ReactElement | null;\r\n  ListFooterComponent?: React.ReactElement | null;\r\n  alumno?: boolean;\r\n}\r\n\r\nexport default function ResponsiveGrid<T>({\r\n  items,\r\n  renderItem,\r\n  getKey,\r\n  numColumns,\r\n  refreshing,\r\n  onRefresh,\r\n  ListEmptyComponent,\r\n  ListFooterComponent,\r\n  alumno,\r\n}: ResponsiveGridProps<T>) {\r\n  const { width } = useWindowDimensions();\r\n\r\n  const computedColumns =\r\n    alumno === true ? 1 : numColumns ? numColumns : width >= 900 ? 2 : 1;\r\n\r\n  return (\r\n    <FlatList\r\n      data={items}\r\n      key={computedColumns} // para forzar re-render al cambiar columnas\r\n      keyExtractor={(item) => getKey(item).toString()}\r\n      numColumns={computedColumns}\r\n      refreshing={refreshing}\r\n      onRefresh={onRefresh}\r\n      contentContainerStyle={{\r\n        padding: 12,\r\n        gap: 12,\r\n        paddingBottom: 32,\r\n      }}\r\n      columnWrapperStyle={\r\n        computedColumns > 1\r\n          ? {\r\n              gap: 12,\r\n              justifyContent: \"space-between\",\r\n              marginBottom: 12,\r\n            }\r\n          : undefined\r\n      }\r\n      renderItem={({ item }) => (\r\n        <View style={{ flex: 1, marginBottom: 12 }}>{renderItem(item)}</View>\r\n      )}\r\n      ListEmptyComponent={ListEmptyComponent}\r\n      ListFooterComponent={ListFooterComponent}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { TextInput, Button, Text } from \"react-native-paper\";\r\nimport { useAuth } from \"../context/authContent\"; // o el path correcto\r\nimport { crearEpetcoin } from \"../api/epetcoins\";\r\n\r\nconst CrearEpetcoinForm = ({ onCreated }: { onCreated: () => void }) => {\r\n  const { user } = useAuth();\r\n  const apellido = user?.apellido || \"Mi\";\r\n  const sugerido = `${apellido}Coin`;\r\n\r\n  const [nombre, setNombre] = useState(sugerido);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleCrear = async () => {\r\n    if (!nombre.trim()) {\r\n      setError(\"Debes ingresar un nombre válido\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n    try {\r\n      await crearEpetcoin(nombre); // hace POST al backend\r\n      onCreated(); // callback al padre para recargar\r\n    } catch (e) {\r\n      setError(\"Error al crear la moneda\");\r\n      console.error(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ gap: 12, padding: 16 }}>\r\n      <Text variant=\"titleMedium\">Activar tu moneda personalizada</Text>\r\n\r\n      <TextInput\r\n        label=\"Nombre de la moneda\"\r\n        value={nombre}\r\n        onChangeText={setNombre}\r\n        mode=\"outlined\"\r\n      />\r\n\r\n      {error ? <Text style={{ color: \"red\" }}>{error}</Text> : null}\r\n\r\n      <Button\r\n        mode=\"contained\"\r\n        onPress={handleCrear}\r\n        loading={loading}\r\n        disabled={loading}\r\n      >\r\n        Crear Epetcoin\r\n      </Button>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CrearEpetcoinForm;\r\n","import { Layout } from \"../layout/layout\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { Platform, Pressable, useWindowDimensions, View } from \"react-native\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport AvatarCard from \"../components/AvatarCard\";\r\nimport AlarcoinModal from \"../components/EpetcoinModal\";\r\nimport { User } from \"../types/UserType\";\r\nimport LoadError from \"../components/LoadError\";\r\nimport MateriasCard from \"../components/MateriaCard\";\r\nimport {\r\n  TransaccionCoinAlumnoType,\r\n  TransaccionCoinAulaAlumnoType,\r\n} from \"../types/EpetcoinType\";\r\nimport ResponsiveGrid from \"../components/ResponsiveGrid\";\r\nimport { MateriasAlumnosType } from \"../types/AulaType\";\r\nimport { Button, Text } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport CrearEpetcoinForm from \"../components/CrearEpetcoinForm\";\r\n\r\nconst Alarcoin = () => {\r\n  const { user } = useAuth();\r\n  const {\r\n    alumnosMap,\r\n    loadAlarcoins,\r\n    alarcoinsError,\r\n    aulas,\r\n    epetCoin,\r\n    transaccioncoins,\r\n  } = useAppData();\r\n  const [selectedAlumno, setSelectedAlumno] = useState<User | null>(null);\r\n  const [selectedAula, setSelectedAula] =\r\n    useState<TransaccionCoinAulaAlumnoType>();\r\n  const [visible, setVisible] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { width } = useWindowDimensions();\r\n\r\n  const numColumns = useMemo(() => {\r\n    if (width >= 1000) return 3;\r\n    if (width >= 600) return 2;\r\n    return 1;\r\n  }, [width]);\r\n\r\n  // const fetchData = async () => {\r\n  //   setIsLoading(true);\r\n  //   try {\r\n  //     if (user?.is_teacher) {\r\n  //       const local = await getTransaccionCoinProfe();\r\n  //       if (local && Array.isArray(local)) {\r\n  //         console.log(\"paso local\");\r\n  //         setCoin(local);\r\n  //         return;\r\n  //       }\r\n  //     } else {\r\n  //       const local = await getTransaccionCoinAlumno();\r\n  //       if (local && Array.isArray(local)) {\r\n  //         setCoin(local);\r\n  //         return;\r\n  //       }\r\n  //     }\r\n\r\n  //     loadAlarcoins(); // hace el fetch del backend y actualiza\r\n  //     setCoin(epetCoin);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error al cargar alarcoins:\", error);\r\n  //   } finally {\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      setIsLoading(true);\r\n      loadAlarcoins();\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetch();\r\n  }, []);\r\n  const handleOpenModal = (item: User | TransaccionCoinAlumnoType) => {\r\n    if (user?.is_teacher) {\r\n      setSelectedAlumno(item as User);\r\n    } else {\r\n      setSelectedAlumno(user);\r\n      setSelectedAula(item as TransaccionCoinAulaAlumnoType);\r\n    }\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const renderItem = (item: User | TransaccionCoinAlumnoType) => {\r\n    if (!user?.is_teacher) {\r\n      const materia = aulas.find(\r\n        (a) => a.id === (item as TransaccionCoinAulaAlumnoType).aula_id\r\n      );\r\n      if (!materia) return null;\r\n\r\n      const epetcoins = (item as TransaccionCoinAulaAlumnoType).epetcoins ?? [];\r\n\r\n      const total = epetcoins.reduce(\r\n        (acc, a) => acc + (a.suma ? a.cantidad : -a.cantidad),\r\n        0\r\n      );\r\n\r\n      return (\r\n        <Pressable\r\n          style={({ pressed }) => [{ flex: 1, opacity: pressed ? 0.5 : 1 }]}\r\n          onPress={() => handleOpenModal(item)}\r\n        >\r\n          <MateriasCard\r\n            coin={(item as TransaccionCoinAlumnoType).nombre_moneda}\r\n            materia={materia}\r\n            is_alumno={true}\r\n            alarcoin={total}\r\n          />\r\n        </Pressable>\r\n      );\r\n    } else {\r\n      return (\r\n        <Pressable\r\n          style={({ pressed }) => [{ flex: 1, opacity: pressed ? 0.5 : 1 }]}\r\n          onPress={() => handleOpenModal(item)}\r\n        >\r\n          <AvatarCard\r\n            user={item as User}\r\n            loading={false}\r\n            isalarcoins={true}\r\n            alarcoins={(item as User).epetcoin}\r\n            desdeProfe={true}\r\n          />\r\n        </Pressable>\r\n      );\r\n    }\r\n  };\r\n\r\n  const dataList: (\r\n    | MateriasAlumnosType\r\n    | User\r\n    | TransaccionCoinAulaAlumnoType\r\n  )[] = user?.is_teacher ? Object.values(alumnosMap) : transaccioncoins ?? [];\r\n\r\n  return (\r\n    <Layout>\r\n      <LoadError\r\n        isLoading={isLoading}\r\n        hasError={alarcoinsError}\r\n        errorMessage=\"Error al cargar los Alarcoins\"\r\n        reLoad={() => loadAlarcoins(true)}\r\n      >\r\n        {isLoading ? (\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginVertical: 40,\r\n            }}\r\n          >\r\n            <Ionicons\r\n              name=\"refresh-circle\"\r\n              size={48}\r\n              color=\"#888\"\r\n              style={{ marginBottom: 10 }}\r\n            />\r\n            <Text variant=\"titleMedium\">Cargando...</Text>\r\n          </View>\r\n        ) : (\r\n          <>\r\n            {user?.is_teacher ? (\r\n              epetCoin?.nombre ? (\r\n                <Text>{epetCoin.nombre}</Text>\r\n              ) : (\r\n                <CrearEpetcoinForm onCreated={loadAlarcoins} />\r\n              )\r\n            ) : null}\r\n\r\n            {(!user?.is_teacher || epetCoin?.nombre) && (\r\n              <>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <Text variant=\"titleMedium\">\r\n                    {user?.is_teacher ? \"Tus Alumnos\" : \"Tus EpetCoin\"}\r\n                  </Text>\r\n                  {Platform.OS !== \"android\" && Platform.OS !== \"ios\" && (\r\n                    <View style={{ marginBottom: 10, width: 200 }}>\r\n                      <Button\r\n                        mode=\"contained\"\r\n                        style={{\r\n                          borderRadius: 8,\r\n                          marginVertical: 10,\r\n                        }}\r\n                        onPress={() => loadAlarcoins(true)}\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons name=\"refresh\" color={color} size={size} />\r\n                        )}\r\n                      >\r\n                        Refrescar\r\n                      </Button>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n                {/* Agregar validad si hay transaccion para mostrar */}\r\n                {!user?.is_teacher && transaccioncoins?.length === 0 ? (\r\n                  <Text style={{ marginTop: 20, textAlign: \"center\" }}>\r\n                    Aún no tenés EpetCoins asignadas.\r\n                  </Text>\r\n                ) : (\r\n                  <ResponsiveGrid\r\n                    items={dataList}\r\n                    numColumns={numColumns}\r\n                    renderItem={renderItem}\r\n                    getKey={(item) =>\r\n                      user?.is_teacher\r\n                        ? (item as User).id\r\n                        : (item as TransaccionCoinAulaAlumnoType).aula_id\r\n                    }\r\n                    refreshing={isLoading}\r\n                    onRefresh={() => loadAlarcoins(true)}\r\n                    alumno={!user?.is_teacher}\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            <AlarcoinModal\r\n              visible={visible}\r\n              onDismiss={handleCloseModal}\r\n              user={selectedAlumno}\r\n              is_teacher={user?.is_teacher}\r\n              selectedAula={selectedAula}\r\n            />\r\n          </>\r\n        )}\r\n      </LoadError>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Alarcoin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport {\r\n  TextInput,\r\n  Button,\r\n  Text,\r\n  Card,\r\n  ActivityIndicator,\r\n} from \"react-native-paper\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport { updateUser } from \"../api/updateUser\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { saveUser, getFromStorage } from \"../utils/storage\";\r\n\r\nconst ChangePassword = () => {\r\n  const { setUser } = useAuth();\r\n  const navigator = useNavigation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [apiError, setApiError] = useState<string | null>(null);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    newPassword: Yup.string()\r\n      .min(6, \"La contraseña debe tener al menos 6 caracteres\")\r\n      .matches(\r\n        /[A-Z]/,\r\n        \"La contraseña debe contener al menos una letra mayúscula\"\r\n      )\r\n      .required(\"Campo obligatorio\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"newPassword\")], \"Las contraseñas no coinciden\")\r\n      .required(\"Campo obligatorio\"),\r\n  });\r\n\r\n  const handleSubmit = async (values: {\r\n    newPassword: string;\r\n    confirmPassword: string;\r\n  }) => {\r\n    setLoading(true);\r\n    setApiError(null);\r\n    try {\r\n      const updatedUser = await updateUser({\r\n        password: values.newPassword,\r\n        cambiarContrasena: false,\r\n      });\r\n\r\n      setUser({ ...updatedUser });\r\n      await saveUser(updatedUser);\r\n    } catch (error: any) {\r\n      setApiError(error.message || \"Error al cambiar la contraseña\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.container}>\r\n        <Card style={styles.card}>\r\n          <Card.Title\r\n            title=\"Cambia tu contraseña\"\r\n            subtitle=\"Por seguridad, debes actualizarla\"\r\n          />\r\n          <Card.Content>\r\n            <Formik\r\n              initialValues={{ newPassword: \"\", confirmPassword: \"\" }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {({\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                values,\r\n                errors,\r\n                touched,\r\n              }) => (\r\n                <View>\r\n                  <TextInput\r\n                    label=\"Nueva contraseña\"\r\n                    secureTextEntry\r\n                    value={values.newPassword}\r\n                    onChangeText={handleChange(\"newPassword\")}\r\n                    onBlur={handleBlur(\"newPassword\")}\r\n                    style={styles.input}\r\n                  />\r\n                  {touched.newPassword && errors.newPassword && (\r\n                    <Text style={styles.error}>{errors.newPassword}</Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    label=\"Repetir contraseña\"\r\n                    secureTextEntry\r\n                    value={values.confirmPassword}\r\n                    onChangeText={handleChange(\"confirmPassword\")}\r\n                    onBlur={handleBlur(\"confirmPassword\")}\r\n                    style={styles.input}\r\n                  />\r\n                  {touched.confirmPassword && errors.confirmPassword && (\r\n                    <Text style={styles.error}>{errors.confirmPassword}</Text>\r\n                  )}\r\n\r\n                  {apiError && <Text style={styles.error}>{apiError}</Text>}\r\n\r\n                  <Button\r\n                    mode=\"contained\"\r\n                    onPress={() => handleSubmit()}\r\n                    style={styles.button}\r\n                    disabled={loading}\r\n                    loading={loading}\r\n                  >\r\n                    Guardar contraseña\r\n                  </Button>\r\n                </View>\r\n              )}\r\n            </Formik>\r\n          </Card.Content>\r\n        </Card>\r\n      </View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n    justifyContent: \"center\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n  },\r\n  input: {\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    marginBottom: 10,\r\n  },\r\n});\r\n","import { Layout } from \"../layout/layout\";\r\nimport { ScrollView, StyleSheet, View } from \"react-native\";\r\nimport { Button, IconButton, Text } from \"react-native-paper\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport MateriasCard from \"../components/MateriaCard\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport { RootStack } from \"../types/route\";\r\nimport { MateriasSimpleType } from \"../types/AulaType\";\r\nimport { useWindowDimensions } from \"react-native\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AsistenciaAlumnoType, AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { getAsistenciasPorClase } from \"../api/asistenciasClases\";\r\nimport { getAsistenciasStorage, saveAsistencias } from \"../utils/storage\";\r\n\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\ntype Props = NativeStackNavigationProp<RootStack, \"MateriasStack\">;\r\n\r\nconst Materias = () => {\r\n  const { width } = useWindowDimensions();\r\n  const numColums = width >= 900 ? 2 : 1;\r\n  const { user, token } = useAuth();\r\n  const navigation = useNavigation<Props>();\r\n  const { aulas } = useAppData();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [asistencias, setAsistencias] = useState<AsistenciaAlumnoType[]>([]);\r\n\r\n  const getAsistencias = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const data = await getAsistenciasPorClase(token);\r\n      setAsistencias(data);\r\n      await saveAsistencias(data); // actualizar local también\r\n    } catch (error) {\r\n      console.error(\"Error recargando asistencias\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAsistencias = async () => {\r\n      setIsLoading(true);\r\n\r\n      // 1. Intentar obtener desde local\r\n      const local = await getAsistenciasStorage();\r\n      if (local) {\r\n        setAsistencias(local);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      // 2. Si no hay local, fetch desde backend\r\n      getAsistencias();\r\n    };\r\n\r\n    if (!user?.is_teacher) fetchAsistencias();\r\n  }, [isLoading]);\r\n\r\n  const handlerNavigation = (\r\n    item: MateriasSimpleType,\r\n    asistencia: AsistenciaType[]\r\n  ) => {\r\n    navigation.navigate(\"MateriasStack\", {\r\n      screen: \"DetalleMateria\",\r\n      params: { materia: item, asistencia: asistencia },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.header}>\r\n        <View>\r\n          <Text variant=\"titleLarge\" style={styles.title}>\r\n            Mis Materias\r\n          </Text>\r\n          <Text variant=\"bodyMedium\" style={styles.subtitle}>\r\n            {user?.is_teacher\r\n              ? \"Lista de materias que dictas\"\r\n              : \"Lista de materias que cursas\"}\r\n          </Text>\r\n        </View>\r\n\r\n        <Button\r\n          mode=\"contained\"\r\n          style={styles.button}\r\n          onPress={getAsistencias}\r\n          icon={({ color, size }) => (\r\n            <Ionicons name=\"refresh\" color={color} size={size} />\r\n          )}\r\n        >\r\n          Refrescar\r\n        </Button>\r\n      </View>\r\n\r\n      <ScrollView\r\n        contentContainerStyle={{\r\n          paddingBottom: 32,\r\n          gap: 12,\r\n          flexDirection: numColums > 1 ? \"row\" : \"column\",\r\n          flexWrap: numColums > 1 ? \"wrap\" : \"nowrap\",\r\n          justifyContent: numColums > 1 ? \"center\" : \"flex-start\",\r\n        }}\r\n      >\r\n        {aulas.map((item) => {\r\n          const asistenciaAula = asistencias.find((a) => a.aula_id === item.id);\r\n          const porcentaje = asistenciaAula?.porcentaje_asistencia;\r\n          const asistenciaAulaClases = asistencias.find(\r\n            (a) => a.aula_id === item.id\r\n          );\r\n          const asistenciasA = asistenciaAulaClases?.asistencias || [];\r\n          return (\r\n            <View\r\n              key={item.id}\r\n              style={[\r\n                styles.card,\r\n                numColums > 1 && { width: width / 2 - 24, marginHorizontal: 6 },\r\n              ]}\r\n            >\r\n              <MateriasCard\r\n                materia={item}\r\n                onPress={() => handlerNavigation(item, asistenciasA)}\r\n                porcentaje={porcentaje}\r\n                is_alumno={!user?.is_teacher}\r\n                alarcoin={undefined}\r\n              />\r\n            </View>\r\n          );\r\n        })}\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Materias;\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  header: {\r\n    marginBottom: 24,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignContent: \"center\",\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  subtitle: {\r\n    marginTop: 4,\r\n    color: \"#6b7280\",\r\n  },\r\n  card: {\r\n    marginBottom: 16,\r\n  },\r\n  cardContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  infoLeft: {\r\n    flex: 1,\r\n    gap: 4,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    gap: 6,\r\n  },\r\n  scheduleText: {\r\n    color: \"#6b7280\",\r\n  },\r\n  infoRight: {\r\n    alignItems: \"flex-end\",\r\n  },\r\n  label: {\r\n    color: \"#6b7280\",\r\n  },\r\n  classCount: {\r\n    marginTop: 2,\r\n    fontWeight: \"600\",\r\n  },\r\n  button: {\r\n    borderRadius: 8,\r\n    marginVertical: 10,\r\n  },\r\n});\r\n","import { AsistenciaAlumnoType, AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport async function AsistenciasClase(\r\n  clase_id: number,\r\n  token: string | null\r\n): Promise<AsistenciaType[]> {\r\n  const response = await fetch(\r\n    `${urlBase}/asistencias/asistencias-por-clase/${clase_id}`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function getAsistenciasPorClase(\r\n  token: string | null\r\n): Promise<AsistenciaAlumnoType[]> {\r\n  const response = await fetch(`${urlBase}/asistencias/mis-asistencias`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Pressable,\r\n  useWindowDimensions,\r\n  Alert,\r\n} from \"react-native\";\r\nimport {\r\n  Text,\r\n  Button,\r\n  RadioButton,\r\n  TextInput,\r\n  ActivityIndicator,\r\n  Portal,\r\n  Modal,\r\n  useTheme,\r\n  Card,\r\n} from \"react-native-paper\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { AsistenciasClase } from \"../api/asistenciasClases\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { setClaseAsistencia } from \"../api/setClaseAsistencia\";\r\n\r\ntype Props = {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  clase: ClaseType;\r\n};\r\n\r\ntype AsistenciaEdit = {\r\n  alumno_id: number;\r\n  presente: number;\r\n  justificado?: string;\r\n};\r\n\r\nexport default function ModalAsistencia({ visible, onClose, clase }: Props) {\r\n  const { token } = useAuth();\r\n  const { alumnosMap, aulas } = useAppData();\r\n  const [asistencias, setAsistencias] = useState<AsistenciaType[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [filtroAlumno, setFiltroAlumno] = useState(\"\");\r\n\r\n  const [asistenciasEditadas, setAsistenciasEditadas] = useState<\r\n    AsistenciaEdit[]\r\n  >([]);\r\n  const { colors } = useTheme();\r\n  const { width } = useWindowDimensions();\r\n\r\n  const isMobile = width < 600;\r\n  const columns = width >= 1000 ? 3 : width >= 700 ? 2 : 1;\r\n\r\n  const aula = aulas.find((a) => a.id === clase.aula_id);\r\n  // const alumnos =\r\n  //   aula?.alumnoIds.map((id) => alumnosMap[id]).filter(Boolean) ?? [];\r\n  const alumnos =\r\n    aula?.alumnoIds\r\n      .map((id) => alumnosMap[id])\r\n      .filter(Boolean)\r\n      .filter((alumno) =>\r\n        clase.grupo_id ? alumno.grupo_id === clase.grupo_id : true\r\n      ) ?? [];\r\n\r\n  useEffect(() => {\r\n    if (!visible) return;\r\n\r\n    setIsLoading(true);\r\n    const getAsistencias = async () => {\r\n      try {\r\n        const data = await AsistenciasClase(clase.id, token);\r\n        setAsistencias(data);\r\n        if (data.length === 0) {\r\n          const todosPresentes: AsistenciaEdit[] = alumnos.map((alumno) => ({\r\n            alumno_id: alumno.id,\r\n            presente: 1,\r\n          }));\r\n          setAsistenciasEditadas(todosPresentes);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al obtener asistencias:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    getAsistencias();\r\n    setAsistenciasEditadas([]);\r\n  }, [visible, clase.id]);\r\n\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      setAsistencias([]);\r\n      setAsistenciasEditadas([]);\r\n    }\r\n  }, [visible]);\r\n\r\n  const alumnosFiltrados = alumnos.filter((alumno) => {\r\n    const texto = filtroAlumno.toLowerCase();\r\n    return (\r\n      alumno.nombre.toLowerCase().includes(texto) ||\r\n      alumno.apellido.toLowerCase().includes(texto)\r\n    );\r\n  });\r\n\r\n  const handleChange = (alumno_id: number, presente: number) => {\r\n    setAsistenciasEditadas((prev) => {\r\n      const existente = prev.find((a) => a.alumno_id === alumno_id);\r\n      if (existente) {\r\n        return prev.map((a) =>\r\n          a.alumno_id === alumno_id ? { ...a, presente } : a\r\n        );\r\n      } else {\r\n        return [...prev, { alumno_id, presente }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleJustificacionChange = (\r\n    alumno_id: number,\r\n    justificado: string\r\n  ) => {\r\n    setAsistenciasEditadas((prev) => {\r\n      const existente = prev.find((a) => a.alumno_id === alumno_id);\r\n      if (existente) {\r\n        return prev.map((a) =>\r\n          a.alumno_id === alumno_id ? { ...a, justificado } : a\r\n        );\r\n      } else {\r\n        return [...prev, { alumno_id, presente: 2, justificado }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleGuardar = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      if (asistenciasEditadas.length === 0) {\r\n        Alert.alert(\"Sin cambios\", \"No se detectaron asistencias editadas.\");\r\n        return;\r\n      }\r\n\r\n      const payload = alumnos.map((alumno) => {\r\n        const editada = asistenciasEditadas.find(\r\n          (a) => a.alumno_id === alumno.id\r\n        );\r\n\r\n        return {\r\n          alumno_id: alumno.id,\r\n          presente: editada?.presente ?? 1,\r\n          justificado: editada?.justificado ?? \"no\",\r\n        };\r\n      });\r\n\r\n      await setClaseAsistencia(clase.id, token, payload);\r\n\r\n      Alert.alert(\r\n        \"Guardado\",\r\n        \"Las asistencias fueron actualizadas correctamente.\"\r\n      );\r\n      setAsistenciasEditadas([]);\r\n      onClose();\r\n    } catch (error: any) {\r\n      console.error(\"Error al guardar asistencias:\", error);\r\n      Alert.alert(\"Error\", error.message || \"Ocurrió un error al guardar.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <Modal\r\n        visible={visible}\r\n        onDismiss={onClose}\r\n        contentContainerStyle={[\r\n          styles.modalContainer,\r\n          { backgroundColor: colors.background },\r\n        ]}\r\n      >\r\n        <Text variant=\"titleMedium\" style={styles.headerTitle}>\r\n          Asistencia - {clase.tema}\r\n        </Text>\r\n\r\n        {isLoading ? (\r\n          <ActivityIndicator style={{ marginVertical: 20 }} />\r\n        ) : (\r\n          <>\r\n            <TextInput\r\n              label=\"Buscar alumno\"\r\n              mode=\"outlined\"\r\n              value={filtroAlumno}\r\n              onChangeText={setFiltroAlumno}\r\n              style={{ marginBottom: 10 }}\r\n              placeholder=\"Nombre o apellido\"\r\n            />\r\n\r\n            <ScrollView contentContainerStyle={styles.scroll}>\r\n              <View style={[styles.grid, { gap: 12 }]}>\r\n                {alumnosFiltrados.map((alumno) => {\r\n                  const asistenciaExistente = asistencias.find(\r\n                    (a) => a.alumno_id === alumno.id\r\n                  );\r\n                  const asistenciaEditada = asistenciasEditadas.find(\r\n                    (a) => a.alumno_id === alumno.id\r\n                  );\r\n                  const valuePresente =\r\n                    asistenciaEditada?.presente?.toString() ??\r\n                    asistenciaExistente?.presente?.toString() ??\r\n                    \"\";\r\n\r\n                  const valueJustificado =\r\n                    asistenciaEditada?.justificado ??\r\n                    asistenciaExistente?.justificado ??\r\n                    \"\";\r\n\r\n                  return (\r\n                    <View\r\n                      key={alumno.id}\r\n                      style={[\r\n                        styles.cardWrapper,\r\n                        { width: `${100 / columns - 4}%` },\r\n                      ]}\r\n                    >\r\n                      <Card mode=\"outlined\" style={styles.alumnoCard}>\r\n                        <Card.Content style={{ gap: 4, padding: 5 }}>\r\n                          <Text style={styles.nombreAlumno}>\r\n                            {alumno.nombre} {alumno.apellido}\r\n                          </Text>\r\n\r\n                          <RadioButton.Group\r\n                            onValueChange={(value) =>\r\n                              handleChange(alumno.id, parseInt(value))\r\n                            }\r\n                            value={valuePresente}\r\n                          >\r\n                            <View style={styles.radioRowFixed}>\r\n                              {[\r\n                                {\r\n                                  label: isMobile ? \"P\" : \"Presente\",\r\n                                  value: \"1\",\r\n                                },\r\n                                {\r\n                                  label: isMobile ? \"A\" : \"Ausente\",\r\n                                  value: \"2\",\r\n                                },\r\n                                { label: isMobile ? \"T\" : \"Tarde\", value: \"3\" },\r\n                              ].map((item) => (\r\n                                <Pressable\r\n                                  key={item.value}\r\n                                  style={styles.radioItemPressable}\r\n                                  onPress={() =>\r\n                                    handleChange(\r\n                                      alumno.id,\r\n                                      parseInt(item.value)\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <RadioButton\r\n                                    value={item.value}\r\n                                    status={\r\n                                      valuePresente === item.value\r\n                                        ? \"checked\"\r\n                                        : \"unchecked\"\r\n                                    }\r\n                                    onPress={() =>\r\n                                      handleChange(\r\n                                        alumno.id,\r\n                                        parseInt(item.value)\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  <Text\r\n                                    style={[\r\n                                      isMobile\r\n                                        ? styles.radioLabelMobile\r\n                                        : styles.radioLabel,\r\n                                      styles.radioLabelText,\r\n                                    ]}\r\n                                  >\r\n                                    {item.label}\r\n                                  </Text>\r\n                                </Pressable>\r\n                              ))}\r\n                            </View>\r\n                          </RadioButton.Group>\r\n\r\n                          <TextInput\r\n                            label=\"Justificación\"\r\n                            mode=\"outlined\"\r\n                            value={valueJustificado}\r\n                            onChangeText={(text) =>\r\n                              handleJustificacionChange(alumno.id, text)\r\n                            }\r\n                          />\r\n                        </Card.Content>\r\n                      </Card>\r\n                    </View>\r\n                  );\r\n                })}\r\n              </View>\r\n            </ScrollView>\r\n          </>\r\n        )}\r\n\r\n        <View style={styles.buttonRow}>\r\n          <Button mode=\"text\" onPress={onClose}>\r\n            Cancelar\r\n          </Button>\r\n          <Button mode=\"contained\" onPress={handleGuardar}>\r\n            {isLoading ? \"guardando\" : \"Guardar\"}\r\n          </Button>\r\n        </View>\r\n      </Modal>\r\n    </Portal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContainer: {\r\n    margin: 10,\r\n    padding: 20,\r\n    borderRadius: 12,\r\n    maxHeight: \"95%\",\r\n  },\r\n  scroll: {\r\n    paddingVertical: 5,\r\n  },\r\n  headerTitle: {\r\n    marginBottom: 12,\r\n  },\r\n  grid: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  cardWrapper: {\r\n    marginBottom: 16,\r\n  },\r\n  alumnoCard: {\r\n    borderRadius: 12,\r\n  },\r\n  nombreAlumno: {\r\n    fontWeight: \"600\",\r\n    marginBottom: 4,\r\n  },\r\n  radioRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  buttonRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    marginTop: 20,\r\n    gap: 10,\r\n  },\r\n  radioRowFixed: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"nowrap\", // importante para evitar múltiples filas\r\n  },\r\n\r\n  radioItemFixed: {\r\n    flex: 1,\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n\r\n  radioLabel: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  radioLabelMobile: {\r\n    fontSize: 12,\r\n  },\r\n  radioItemPressable: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    minWidth: 50,\r\n    maxWidth: 80,\r\n  },\r\n\r\n  radioLabelText: {\r\n    textAlign: \"center\",\r\n    flexShrink: 1,\r\n  },\r\n});\r\n","import { AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport async function setClaseAsistencia(\r\n  clase_id: number,\r\n  token: string | null,\r\n  asistencias: Omit<AsistenciaType, \"id\">[]\r\n): Promise<void> {\r\n  const response = await fetch(`${urlBase}/asistencias/masiva/${clase_id}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(asistencias),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al guardar asistencias\");\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Card, Text, Button, useTheme } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\nimport ModalAsistencia from \"./ModalAsistencias\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\n\r\ntype Props = {\r\n  clase: ClaseType;\r\n  asistencia: AsistenciaType | undefined;\r\n};\r\n\r\nexport default function ClaseCard({ clase, asistencia }: Props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const { user } = useAuth();\r\n  const { colors } = useTheme();\r\n  const getColorFromAsistencia = (asistencia: number) => {\r\n    if (asistencia === 1) return [colors.background, colors.asistenciaBuena];\r\n    if (asistencia === 2) return [colors.background, colors.asistenciaMala]; //rojo\r\n    if (asistencia === 3) return [colors.background, colors.asistenciaMedia]; // naranja\r\n    return [\"transparent\", \"transparent\"];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card style={[styles.card]}>\r\n        <LinearGradient\r\n          colors={\r\n            !user?.is_teacher\r\n              ? getColorFromAsistencia(asistencia?.presente)\r\n              : [\"#trnasparent\", \"transparent\"]\r\n          }\r\n          start={{ x: 0.4, y: 0.3 }}\r\n          end={{ x: 1, y: 1 }}\r\n          style={{ borderRadius: 8, padding: 10 }}\r\n        >\r\n          <Card.Content>\r\n            <View style={styles.headerRow}>\r\n              <Text variant=\"titleSmall\" style={styles.cardTitle}>\r\n                {clase.tema}\r\n              </Text>\r\n\r\n              <View style={styles.iconButtons}>\r\n                {user?.is_teacher ? (\r\n                  <>\r\n                    <Ionicons\r\n                      name=\"create-outline\"\r\n                      size={20}\r\n                      color=\"#9CA3AF\"\r\n                      style={styles.iconMargin}\r\n                    />\r\n                    <Ionicons name=\"trash-outline\" size={20} color=\"#9CA3AF\" />\r\n                  </>\r\n                ) : (\r\n                  <Text variant=\"bodyMedium\">\r\n                    {\" \"}\r\n                    {asistencia\r\n                      ? asistencia.presente === 1\r\n                        ? \"Presente\"\r\n                        : asistencia.presente === 2\r\n                        ? \"Ausente\"\r\n                        : \"Tarde\"\r\n                      : \"Sin asistencia\"}\r\n                  </Text>\r\n                )}\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.scheduleRow}>\r\n              <Ionicons\r\n                name=\"calendar-outline\"\r\n                size={13}\r\n                color=\"#9CA3AF\"\r\n                style={styles.iconMargin}\r\n              />\r\n              <Text variant=\"bodySmall\" style={styles.cardSubtitle}>\r\n                {clase.fecha.toString()}\r\n              </Text>\r\n            </View>\r\n\r\n            {user?.is_teacher && (\r\n              <Button\r\n                mode=\"outlined\"\r\n                icon={({ color, size }) => (\r\n                  <Ionicons name=\"checkmark-circle\" color={color} size={size} />\r\n                )}\r\n                style={styles.attendanceButton}\r\n                onPress={() => setModalVisible(true)}\r\n              >\r\n                Tomar asistencia\r\n              </Button>\r\n            )}\r\n          </Card.Content>\r\n        </LinearGradient>\r\n      </Card>\r\n\r\n      {/* Modal de asistencia */}\r\n      <ModalAsistencia\r\n        visible={modalVisible}\r\n        onClose={() => setModalVisible(false)}\r\n        clase={clase}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 400,\r\n    borderRadius: 8,\r\n    elevation: 2,\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 15,\r\n    marginBottom: 10,\r\n  },\r\n  headerRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconButtons: {\r\n    flexDirection: \"row\",\r\n  },\r\n  iconMargin: {\r\n    marginRight: 8,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n  },\r\n  cardTitle: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: 4,\r\n  },\r\n  cardSubtitle: {\r\n    color: \"#6B7280\",\r\n  },\r\n  attendanceButton: {\r\n    marginTop: 10,\r\n  },\r\n  modalBackdrop: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.4)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modalContainer: {\r\n    width: \"85%\",\r\n    padding: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    elevation: 5,\r\n  },\r\n  modalCloseButton: {\r\n    marginTop: 20,\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  modalCloseText: {\r\n    color: \"#2563EB\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","import { View, StyleSheet, Image, ScrollView } from \"react-native\";\r\nimport { Text, Button, ActivityIndicator, useTheme } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useNavigation, useRoute, RouteProp } from \"@react-navigation/native\";\r\nimport { MateriasStackParamList } from \"../types/route\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { clasesMateria } from \"../api/clasesMateria\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\nimport ClaseCard from \"../components/ClaseCard\";\r\nimport { useWindowDimensions } from \"react-native\";\r\nimport { getClasesStorage, getFromStorage, saveClases } from \"../utils/storage\";\r\nimport { Layout } from \"../layout/layout\";\r\ntype Props = RouteProp<MateriasStackParamList, \"DetalleMateria\">;\r\n\r\nexport default function DetallesMaterias() {\r\n  const { width } = useWindowDimensions();\r\n  const route = useRoute<Props>();\r\n  const { materia, asistencia } = route.params;\r\n  const navigation = useNavigation();\r\n  const { token, user } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [clases, setClases] = useState<ClaseType[]>([]);\r\n  const [error, setError] = useState(false);\r\n  const [grupoSeleccionado, setGrupoSeleccionado] = useState<number | null>(\r\n    null\r\n  );\r\n  const [cuatrimestreSeleccionado, setCuatrimestreSeleccionado] = useState<\r\n    number | null\r\n  >(null);\r\n\r\n  const { colors } = useTheme();\r\n\r\n  const getClases = async (forzarBackend = false) => {\r\n    let efectiveToken = token;\r\n    if (!token) {\r\n      efectiveToken = await getFromStorage(\"token\");\r\n    }\r\n    try {\r\n      if (!forzarBackend) {\r\n        const local = await getClasesStorage(materia.id);\r\n        if (local) {\r\n          setClases(local);\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Si no hay local o se fuerza el fetch\r\n      const data = await clasesMateria(materia.id, efectiveToken);\r\n      setClases(data);\r\n      await saveClases(materia.id, data); // guardar local\r\n    } catch (error) {\r\n      console.log(\"error al obtener las clases\", error);\r\n      setError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // const clasesFiltradas = user?.is_teacher\r\n  //   ? clases\r\n  //   : clases.filter((clase) => !/^clases\\s+\\d+/i.test(clase.tema));\r\n\r\n  const clasesVisibles = user?.is_teacher\r\n    ? clases\r\n    : clases.filter((clase) => !/^clases\\s+\\d+/i.test(clase.tema));\r\n\r\n  const clasesFiltradas = clasesVisibles.filter((clase) => {\r\n    if (grupoSeleccionado !== null && clase.grupo_id !== grupoSeleccionado) {\r\n      return false;\r\n    }\r\n    if (\r\n      cuatrimestreSeleccionado !== null &&\r\n      clase.cuatrimestre !== cuatrimestreSeleccionado\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  const numColumns = width >= 1024 ? 3 : width >= 600 ? 2 : 1;\r\n  const isSmallDevice = width < 600;\r\n  useEffect(() => {\r\n    getClases();\r\n  }, []);\r\n\r\n  const handleGoBack = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  const handleAddClass = () => {\r\n    // lógica para agregar clase\r\n  };\r\n\r\n  // Agrupa las clases en filas según numColumns\r\n  const getRows = (data: ClaseType[], columns: number) => {\r\n    const rows = [];\r\n    for (let i = 0; i < data.length; i += columns) {\r\n      rows.push(data.slice(i, i + columns));\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.container}>\r\n        <View\r\n          style={[\r\n            styles.sectionHeader,\r\n            isSmallDevice && {\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\",\r\n              gap: 8,\r\n            },\r\n          ]}\r\n        >\r\n          <View\r\n            style={[\r\n              styles.headerRow,\r\n              isSmallDevice && { flexDirection: \"row\", alignItems: \"center\" },\r\n            ]}\r\n          >\r\n            <Button\r\n              onPress={handleGoBack}\r\n              mode=\"text\"\r\n              compact\r\n              icon={({ size, color }) => (\r\n                <Ionicons name=\"arrow-back\" size={16} color={colors.primary} />\r\n              )}\r\n              contentStyle={styles.backButton}\r\n              labelStyle={[\r\n                styles.backButtonText,\r\n                isSmallDevice && { display: \"none\" },\r\n              ]}\r\n            >\r\n              {!isSmallDevice && \"Volver\"}\r\n            </Button>\r\n            <Text\r\n              variant={isSmallDevice ? \"titleSmall\" : \"titleMedium\"}\r\n              style={[\r\n                styles.subjectTitle,\r\n                {\r\n                  flexShrink: 1,\r\n                  flexWrap: \"wrap\",\r\n                  maxWidth: isSmallDevice ? \"90%\" : \"100%\",\r\n                },\r\n              ]}\r\n              numberOfLines={1}\r\n              ellipsizeMode=\"tail\"\r\n            >\r\n              {materia.nombre}\r\n            </Text>\r\n          </View>\r\n\r\n          <View style={styles.scheduleRow}>\r\n            <Button\r\n              mode=\"contained\"\r\n              style={styles.addButton}\r\n              onPress={() => getClases(true)}\r\n              icon={({ color, size }) => (\r\n                <Ionicons name=\"refresh\" color={color} size={size} />\r\n              )}\r\n            >\r\n              Refrescar\r\n            </Button>\r\n\r\n            {user?.is_teacher && (\r\n              <Button\r\n                icon={({ color, size }) => (\r\n                  <Ionicons\r\n                    name=\"add-circle-outline\"\r\n                    color={color}\r\n                    size={size}\r\n                  />\r\n                )}\r\n                mode=\"contained\"\r\n                onPress={handleAddClass}\r\n                contentStyle={styles.addButtonContent}\r\n                style={styles.addButton}\r\n              >\r\n                Agregar Clase\r\n              </Button>\r\n            )}\r\n          </View>\r\n        </View>\r\n\r\n        {isLoading ? (\r\n          <ActivityIndicator size={\"large\"} color=\"violet\" />\r\n        ) : error ? (\r\n          <View\r\n            style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}\r\n          >\r\n            <Text\r\n              variant=\"titleLarge\"\r\n              style={{\r\n                marginBottom: 12,\r\n                color: \"#9333EA\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Ocurrió un error al cargar las clases\r\n            </Text>\r\n            <Image\r\n              source={require(\"../../assets/errorImagen.png\")}\r\n              style={{\r\n                width: 180,\r\n                height: 180,\r\n                marginBottom: 20,\r\n                borderRadius: 90,\r\n                opacity: 0.85,\r\n              }}\r\n              resizeMode=\"contain\"\r\n            />\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={() => {\r\n                setIsLoading(true);\r\n                setError(false);\r\n                getClases();\r\n              }}\r\n              style={{ marginTop: 8 }}\r\n            >\r\n              Reintentar\r\n            </Button>\r\n          </View>\r\n        ) : (\r\n          <>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                gap: 8,\r\n                marginBottom: 12,\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              {!user?.is_teacher ? (\r\n                <Text> </Text>\r\n              ) : (\r\n                materia.tipo === \"taller\" && (\r\n                  <>\r\n                    <Button\r\n                      mode={\r\n                        grupoSeleccionado === null ? \"contained\" : \"outlined\"\r\n                      }\r\n                      onPress={() => setGrupoSeleccionado(null)}\r\n                    >\r\n                      Todos los grupos\r\n                    </Button>\r\n                    {[1, 2].map((id) => (\r\n                      <Button\r\n                        key={id}\r\n                        mode={\r\n                          grupoSeleccionado === id ? \"contained\" : \"outlined\"\r\n                        }\r\n                        onPress={() => setGrupoSeleccionado(id)}\r\n                      >\r\n                        G {id}\r\n                      </Button>\r\n                    ))}\r\n                  </>\r\n                )\r\n              )}\r\n              <Button\r\n                mode={\r\n                  cuatrimestreSeleccionado === null ? \"contained\" : \"outlined\"\r\n                }\r\n                onPress={() => setCuatrimestreSeleccionado(null)}\r\n              >\r\n                Todos los cuatris\r\n              </Button>\r\n              {[1, 2].map((c) => (\r\n                <Button\r\n                  key={c}\r\n                  mode={\r\n                    cuatrimestreSeleccionado === c ? \"contained\" : \"outlined\"\r\n                  }\r\n                  onPress={() => setCuatrimestreSeleccionado(c)}\r\n                >\r\n                  C {c}\r\n                </Button>\r\n              ))}\r\n            </View>\r\n\r\n            {/* <View style={{ flexDirection: \"row\", gap: 8, marginBottom: 16 }}>\r\n              <Button\r\n                mode={\r\n                  cuatrimestreSeleccionado === null ? \"contained\" : \"outlined\"\r\n                }\r\n                onPress={() => setCuatrimestreSeleccionado(null)}\r\n              >\r\n                Todos los cuatris\r\n              </Button>\r\n              {[1, 2].map((c) => (\r\n                <Button\r\n                  key={c}\r\n                  mode={\r\n                    cuatrimestreSeleccionado === c ? \"contained\" : \"outlined\"\r\n                  }\r\n                  onPress={() => setCuatrimestreSeleccionado(c)}\r\n                >\r\n                  Cuatri {c}\r\n                </Button>\r\n              ))}\r\n            </View> */}\r\n\r\n            <ScrollView\r\n              contentContainerStyle={{\r\n                paddingBottom: user?.is_teacher ? 90 : 32,\r\n                paddingHorizontal: 6,\r\n                gap: 10,\r\n              }}\r\n              showsVerticalScrollIndicator={false}\r\n            >\r\n              {clasesFiltradas.length === 0 ? (\r\n                <View>\r\n                  <Ionicons\r\n                    name=\"information-circle-outline\"\r\n                    size={48}\r\n                    color=\"#A78BFA\"\r\n                  />\r\n                  <Text\r\n                    style={{\r\n                      color: \"#6B7280\",\r\n                      marginTop: 12,\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    No hay clases registradas aún.\r\n                  </Text>\r\n                </View>\r\n              ) : (\r\n                getRows(clasesFiltradas, numColumns).map((row, rowIndex) => (\r\n                  <View\r\n                    key={rowIndex}\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: numColumns > 1 ? \"center\" : \"flex-start\",\r\n                      marginBottom: 10,\r\n                      gap: 10,\r\n                    }}\r\n                  >\r\n                    {row.map((item) => {\r\n                      const asistenciaDeEstaClase = asistencia.find(\r\n                        (asistencia) => asistencia.id === item.id\r\n                      );\r\n                      return (\r\n                        <View\r\n                          key={item.id}\r\n                          style={{\r\n                            flex: 1,\r\n                            maxWidth: `${100 / numColumns}%`,\r\n                          }}\r\n                        >\r\n                          <View>\r\n                            <ClaseCard\r\n                              clase={item}\r\n                              asistencia={asistenciaDeEstaClase}\r\n                            />\r\n                          </View>\r\n                        </View>\r\n                      );\r\n                    })}\r\n                    {row.length < numColumns &&\r\n                      Array.from({ length: numColumns - row.length }).map(\r\n                        (_, idx) => (\r\n                          <View\r\n                            key={`empty-${idx}`}\r\n                            style={{\r\n                              flex: 1,\r\n                              maxWidth: `${100 / numColumns}%`,\r\n                              minHeight: 120,\r\n                            }}\r\n                          />\r\n                        )\r\n                      )}\r\n                  </View>\r\n                ))\r\n              )}\r\n            </ScrollView>\r\n          </>\r\n        )}\r\n      </View>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  backButton: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingLeft: 0,\r\n  },\r\n  backButtonText: {\r\n    color: \"#4B5563\",\r\n    fontSize: 14,\r\n    marginLeft: 4,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    gap: 6,\r\n  },\r\n\r\n  subjectTitle: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  subjectSchedule: {\r\n    color: \"#6B7280\",\r\n    marginTop: 4,\r\n    marginBottom: 4,\r\n  },\r\n\r\n  sectionHeader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginVertical: 8,\r\n  },\r\n  addButton: {\r\n    borderRadius: 8,\r\n    marginVertical: 10,\r\n  },\r\n  addButtonContent: {\r\n    flexDirection: \"row\",\r\n  },\r\n  headerRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 8,\r\n  },\r\n});\r\n","import { urlBase } from \"../utils/url\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\n\r\nexport async function clasesMateria(\r\n  aulaId: number,\r\n  token: string | null\r\n): Promise<ClaseType[]> {\r\n  const response = await fetch(`${urlBase}/clases/aulas/${aulaId}/clases`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport Materias from \"../screens/MisAulas\";\r\nimport DetalleMateria from \"../screens/DetailsAulas\";\r\nimport { MateriasStackParamList } from \"../types/route\";\r\n\r\nconst Stack = createNativeStackNavigator<MateriasStackParamList>();\r\n\r\nexport default function MateriasStack() {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen\r\n        name=\"Materias\"\r\n        component={Materias}\r\n        options={{ title: \"adminAulas | Mis Materias\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"DetalleMateria\"\r\n        component={DetalleMateria}\r\n        options={{ title: \"adminAulas | Detalle de Materia\" }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import {\r\n  NavigationContainer,\r\n  DefaultTheme as NavigationDefaultTheme,\r\n  DarkTheme as NavigationDarkTheme,\r\n} from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport { AuthProvider, useAuth } from \"../context/authContent\";\r\nimport HomeScreen from \"../screens/home-screen\";\r\nimport LoginScreen from \"../screens/login-screen\";\r\nimport Profile from \"../screens/profile\";\r\nimport { Pressable, View } from \"react-native\";\r\nimport CustomDrawerContent from \"./CustomDrawerContent\";\r\nimport Alarcoin from \"../screens/Epetcoin\";\r\nimport ChangePassword from \"../screens/changePassword\";\r\nimport MateriasStack from \"./materiasStack\";\r\nimport { DrawerParamList, RootStack } from \"../types/route\";\r\nimport { AppDataProvider } from \"../context/appDataContext\";\r\nimport { Avatar, useTheme } from \"react-native-paper\";\r\nimport { useThemeContext } from \"../context/themeContext\";\r\nimport { getInitials } from \"../utils/initials\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst Stack = createNativeStackNavigator<RootStack>();\r\nconst Drawer = createDrawerNavigator<DrawerParamList>();\r\n\r\nfunction DrawerNavigator() {\r\n  const { colors } = useTheme();\r\n  const { user } = useAuth();\r\n  const memoizedUser = useMemo(() => user, [user]);\r\n\r\n  return (\r\n    <Drawer.Navigator\r\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\r\n      screenOptions={({ navigation }) => ({\r\n        headerStyle: {\r\n          backgroundColor: colors.elevation.level2,\r\n        },\r\n        headerTintColor: colors.primary,\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n\r\n        headerRight: () => (\r\n          <View style={{ padding: 2 }}>\r\n            <Pressable onPress={() => navigation.navigate(\"Perfil\")} style={{}}>\r\n              <Avatar.Text\r\n                label={getInitials(\r\n                  memoizedUser?.nombre,\r\n                  memoizedUser?.apellido\r\n                )}\r\n                size={40}\r\n                style={{\r\n                  backgroundColor: colors.primary,\r\n                  width: 40,\r\n                  height: 40,\r\n                  marginRight: 10,\r\n                }}\r\n              />\r\n            </Pressable>\r\n          </View>\r\n        ),\r\n      })}\r\n    >\r\n      <Drawer.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{ title: \"adminAulas | Dashboard\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"MateriasStack\"\r\n        component={MateriasStack}\r\n        options={{ title: \"adminAulas | Mis Materias\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Perfil\"\r\n        component={Profile}\r\n        options={{ title: \"adminAulas | Mi Perfil\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Alarcoin\"\r\n        component={Alarcoin}\r\n        options={{ title: \"adminAulas | Mis Alarcoin\" }}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nconst StackNavigation = () => {\r\n  const { user } = useAuth();\r\n  const { theme } = useThemeContext();\r\n\r\n  // Integrar con React Navigation\r\n  const navigationTheme = theme.dark\r\n    ? {\r\n        ...NavigationDarkTheme,\r\n        colors: {\r\n          ...NavigationDarkTheme.colors,\r\n          ...theme.colors,\r\n        },\r\n      }\r\n    : {\r\n        ...NavigationDefaultTheme,\r\n        colors: {\r\n          ...NavigationDefaultTheme.colors,\r\n          ...theme.colors,\r\n        },\r\n      };\r\n\r\n  return (\r\n    <NavigationContainer theme={navigationTheme}>\r\n      <Stack.Navigator>\r\n        {!user ? (\r\n          <Stack.Screen\r\n            name=\"Login\"\r\n            component={LoginScreen}\r\n            options={{ headerShown: false }}\r\n          />\r\n        ) : user.cambiarContrasena ? (\r\n          <Stack.Screen\r\n            name=\"CambiarContra\"\r\n            component={ChangePassword}\r\n            options={{\r\n              title: \"adminAulas | Cambiar Contraseña\",\r\n              headerShown: false,\r\n            }}\r\n          />\r\n        ) : (\r\n          <Stack.Screen\r\n            name=\"Main\"\r\n            component={DrawerNavigator}\r\n            options={{ headerShown: false }}\r\n          />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default function Router() {\r\n  return (\r\n    <AuthProvider>\r\n      <AppDataProvider>\r\n        <StackNavigation />\r\n      </AppDataProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n","// src/screens/SplashScreen.tsx\r\nimport React, { useEffect } from \"react\";\r\nimport { StyleSheet, Animated } from \"react-native\";\r\nimport { useTheme, Text } from \"react-native-paper\";\r\nimport { PrimaryColor } from \"../utils/colors\";\r\n\r\nconst SplashScreen = ({ onFinish }: { onFinish: () => void }) => {\r\n  const { colors } = useTheme();\r\n  const opacity = new Animated.Value(0);\r\n\r\n  useEffect(() => {\r\n    Animated.timing(opacity, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start(() => {\r\n      setTimeout(() => {\r\n        Animated.timing(opacity, {\r\n          toValue: 0.5,\r\n          duration: 500,\r\n          useNativeDriver: true,\r\n        }).start(() => {\r\n          onFinish();\r\n        });\r\n      }, 1000);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[styles.container, { opacity }, { backgroundColor: PrimaryColor }]}\r\n    >\r\n      <Text variant=\"titleLarge\" style={styles.title}>\r\n        AdminAulas 🚀\r\n      </Text>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default SplashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","// import Router from \"./src/navigations/router\";\n// import { PaperProvider } from \"react-native-paper\";\n// import { ThemeProvider, useThemeContext } from \"./src/context/themeContext\";\n// import { StatusBar } from \"expo-status-bar\";\n// import { useFonts } from \"expo-font\";\n// import { MaterialCommunityIcons } from \"@expo/vector-icons\";\n// import { useCallback } from \"react\";\n\n// export default function App() {\n//   const [fontsLoaded] = useFonts({\n//     ...MaterialCommunityIcons.font,\n//   });\n\n//   const onLayoutRootView = useCallback(async () => {\n//     if (fontsLoaded) {\n\n//     }\n//   }, [fontsLoaded]);\n\n//   if (!fontsLoaded) return null;\n//   return (\n//     <ThemeProvider>\n//       <AppWithTheme />\n//     </ThemeProvider>\n//   );\n// }\n\n// function AppWithTheme() {\n//   const { theme, isDarkMode } = useThemeContext();\n//   return (\n//     <PaperProvider theme={theme}>\n//       <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n//       <Router />\n//     </PaperProvider>\n//   );\n// }\nimport Router from \"./src/navigations/router\";\nimport { PaperProvider } from \"react-native-paper\";\nimport { ThemeProvider, useThemeContext } from \"./src/context/themeContext\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useFonts } from \"expo-font\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Splash from \"./src/screens/splashScreen\"; // 👈\n\nSplashScreen.preventAutoHideAsync(); // 👈\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    ...MaterialCommunityIcons.font,\n  });\n\n  const [showSplash, setShowSplash] = useState(true);\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      // podés validar token acá si querés\n    }\n  }, [fontsLoaded]);\n\n  useEffect(() => {\n    if (fontsLoaded) onLayoutRootView();\n  }, [fontsLoaded]);\n\n  const handleSplashFinish = async () => {\n    setShowSplash(false);\n    await SplashScreen.hideAsync(); // 👈 Oculta el splash nativo\n  };\n\n  if (!fontsLoaded) return null;\n\n  return (\n    <ThemeProvider>\n      {showSplash ? <Splash onFinish={handleSplashFinish} /> : <AppWithTheme />}\n    </ThemeProvider>\n  );\n}\n\nfunction AppWithTheme() {\n  const { theme, isDarkMode } = useThemeContext();\n  return (\n    <PaperProvider theme={theme}>\n      <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n      <Router />\n    </PaperProvider>\n  );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [404], () => (__webpack_require__(1754)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["saveUser","async","AsyncStorage","setItem","JSON","stringify","user","error","console","saveToStorage","key","value","getFromStorage","getItem","saveAula","aulas","log","getAulaStorage","aula","parse","saveClases","materiaId","data","getClasesStorage","saveTransaccionCoinProfe","json","saveTransaccionCoinAlumno","AuthContext","createContext","setUser","token","setToken","logout","loading","AuthProvider","children","useState","setLoading","useEffect","users","getUser","loadUser","_jsx","Provider","newUser","removeItem","removeFromStorage","clear","useAuth","useContext","Layout","colors","useTheme","LinearGradient","primary","background","start","x","y","end","style","styles","gradient","SafeAreaView","safeArea","KeyboardAvoidingView","flex","behavior","keyboardVerticalOffset","StatusBar","currentHeight","ScrollView","contentContainerStyle","scrollContainer","keyboardShouldPersistTaps","View","innerContainer","StyleSheet","create","paddingTop","flexGrow","padding","urlBase","getHistorialProfesor","response","fetch","headers","Authorization","ok","errorData","Error","detail","getHistorialAlumno","AppDataContext","undefined","AppDataProvider","setAulas","alumnosMap","setAlumnosMap","isLoading","setIsLoading","transaccioncoins","setTransaccionCoins","alarcoinsError","setAlarcoinsError","epetCoin","setEpetcoin","transaccionCoinProfe","alarcoinsData","nuevoMap","Object","assign","keys","forEach","id","epetcoin","alumnos","alumno","cantidad","reduce","acc","item","suma","calcularCantidadEpetcoins","epetcoins","actualizarCantidadEpetcoins","transaccionCoinAlumno","loadEpetcoin","cachedCoin","getEpetCoinToStorage","getEpetcoin","coin","saveEpetCoin","status","loadDataAlumno","cachedAulas","aulasData","method","getMisAulas","tokenParam","aulasProcesadas","map","alumnoIds","loadDataProfe","cachedAulumnosMap","alumnosArray","getAlumnosStorage","getalumnosAulas","alumnosMapTemp","aulasSinAlumnos","nombre","ano","division","especialidad","profesor_id","cantidad_clases","tipo","saveAlumnos","values","loadData","effectiveToken","is_teacher","loadAlarcoins","forceRefresh","local","getTransaccionCoinProfe","getTransaccionCoinAlumno","e","useAppData","context","PrimaryColor","ResumenMiniCard","title","icon","color","Card","card","mode","_jsxs","Content","cardContent","Avatar","size","Ionicons","name","backgroundColor","marginLeft","Text","variant","fontWeight","width","maxWidth","minWidth","marginBottom","elevation","borderRadius","alignSelf","flexDirection","alignItems","AlumnosList","List","length","left","props","MaterialCommunityIcons","right","isExpanded","titleStyle","accordionTitle","accordion","idx","description","email","label","toUpperCase","avatar","itemTitle","descriptionStyle","itemDescription","listItem","Divider","overflow","fontSize","paddingVertical","paddingHorizontal","marginRight","HomeScreen","useWindowDimensions","isSmallScreen","alarcoins","cargando","totalClasesDictadas","total","saludo","fecha","getSaludoFecha","now","Date","hora","getHours","toLocaleDateString","day","month","year","ActivityIndicator","_Fragment","header","headerSmall","marginTop","cardsContainer","justifyContent","gap","flexWrap","alignContent","alumnosListContainer","LoginSchema","Yup","shape","required","password","min","LoginScreen","useNavigation","handleLogin","setSubmitting","setError","resetForm","body","loginUser","access_token","container","Formik","initialValues","validationSchema","onSubmit","setErrors","msg","handleChange","handleBlur","handleSubmit","errors","touched","isSubmitting","TextInput","input","placeholder","onChangeText","onBlur","keyboardType","autoCapitalize","secureTextEntry","Button","onPress","backdrop","buttonText","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","textAlign","borderColor","borderWidth","updateUser","apellido","newPassword","confirmPassword","oneOf","minHeight","letterSpacing","subheader","opacity","avatarContainer","marginVertical","cardheader","paddingRight","cardTitle","cardSubtitle","editButton","form","buttonGroup","saveButton","cancelButton","logoutButton","Profile","editable","setEditable","setNombre","setApellido","setEmail","setPassword","setConfirmPassword","handleEdit","handleCancel","onSurfaceVariant","surface","Title","subtitle","subtitleStyle","outlineVariant","rest","_objectWithoutPropertiesLoose","_excluded","Alert","alert","updatedUser","message","handleSave","enableReinitialize","surfaceDisabled","Icon","autoComplete","textContentType","importantForAutofill","outline","labelStyle","onPrimary","contentStyle","getInitials","trim","profile","margin","role","AvatarCard","isalarcoins","desdeProfe","lightTheme","MD3LightTheme","text","secondary","accent","asistenciaBuena","asistenciaMedia","asistenciaMala","darkTheme","MD3DarkTheme","ThemeContext","isDarkMode","toggleTheme","theme","ThemeProvider","systemColorScheme","useColorScheme","useSystemTheme","setUseSystemTheme","setIsDarkMode","stored","loadTheme","listener","Appearance","addChangeListener","colorScheme","remove","newValue","useThemeContext","CustomDrawerContent","drawerItems","screen","DrawerContentScrollView","Drawer","nav","index","DrawerItem","navigation","navigate","bottom","switchRow","themeItem","Switch","onValueChange","Feather","SelectMateria","historial","onSeleccionar","visible","setVisible","selected","setSelected","closeMenu","handleSelect","Menu","onDismiss","anchor","openMenu","buttonContent","button","labelWithIcon","onSurface","iconLeft","labelTextWrapper","iconRight","innerLabel","Item","leadingIcon","aula_id","HelperText","type","AlarcoinModal","selectedAula","tab","setTab","setCantidad","concepto","setConcepto","setTipo","materiaSeleccionada","setMateriaSeleccionada","visibleSnack","setVisibleSnack","mensaje","setMensaje","historialPorAula","useMemo","Array","isArray","find","a","filter","Portal","Snackbar","duration","action","Modal","SegmentedButtons","buttons","prev","String","Math","max","Number","RadioButton","Group","transaccionCoin","alumno_id","detalle","moneda_id","crearTransaccion","every","totalAlarcoins","entry","LoadError","hasError","reLoad","errorMessage","Image","source","require","resizeMode","MateriasCard","materia","porcentaje","is_alumno","alarcoin","getColorFromPorcentaje","infoLeft","scheduleRow","infoRight","classCount","marginHorizontal","ResponsiveGrid","items","renderItem","getKey","numColumns","refreshing","onRefresh","ListEmptyComponent","ListFooterComponent","computedColumns","FlatList","keyExtractor","toString","paddingBottom","columnWrapperStyle","CrearEpetcoinForm","onCreated","sugerido","crearEpetcoin","disabled","Alarcoin","selectedAlumno","setSelectedAlumno","setSelectedAula","handleOpenModal","dataList","Pressable","pressed","nombre_moneda","handleCloseModal","ChangePassword","apiError","setApiError","matches","cambiarContrasena","Materias","numColums","asistencias","setAsistencias","getAsistencias","getAsistenciasPorClase","saveAsistencias","getAsistenciasStorage","fetchAsistencias","asistenciaAula","porcentaje_asistencia","asistenciaAulaClases","asistenciasA","handlerNavigation","asistencia","params","scheduleText","ModalAsistencia","onClose","clase","filtroAlumno","setFiltroAlumno","asistenciasEditadas","setAsistenciasEditadas","isMobile","columns","Boolean","grupo_id","clase_id","AsistenciasClase","todosPresentes","presente","alumnosFiltrados","texto","toLowerCase","includes","modalContainer","headerTitle","tema","scroll","grid","asistenciaExistente","asistenciaEditada","valuePresente","valueJustificado","justificado","cardWrapper","alumnoCard","nombreAlumno","parseInt","radioRowFixed","radioItemPressable","radioLabelMobile","radioLabel","radioLabelText","handleJustificacionChange","buttonRow","payload","editada","setClaseAsistencia","maxHeight","radioRow","radioItemFixed","flexShrink","ClaseCard","modalVisible","setModalVisible","getColorFromAsistencia","headerRow","iconButtons","iconMargin","attendanceButton","modalBackdrop","modalCloseButton","modalCloseText","DetallesMaterias","route","useRoute","clases","setClases","grupoSeleccionado","setGrupoSeleccionado","cuatrimestreSeleccionado","setCuatrimestreSeleccionado","getClases","forzarBackend","efectiveToken","aulaId","clasesMateria","clasesFiltradas","test","cuatrimestre","isSmallDevice","sectionHeader","handleGoBack","goBack","compact","backButton","backButtonText","display","subjectTitle","numberOfLines","ellipsizeMode","addButton","handleAddClass","addButtonContent","c","showsVerticalScrollIndicator","getRows","rows","i","push","slice","row","rowIndex","asistenciaDeEstaClase","from","_","paddingLeft","subjectSchedule","Stack","createNativeStackNavigator","MateriasStack","Navigator","screenOptions","headerShown","Screen","component","options","DetalleMateria","createDrawerNavigator","DrawerNavigator","memoizedUser","drawerContent","headerStyle","level2","headerTintColor","headerTitleStyle","headerRight","StackNavigation","navigationTheme","dark","NavigationDarkTheme","NavigationDefaultTheme","NavigationContainer","Router","SplashScreen","onFinish","Animated","Value","timing","toValue","useNativeDriver","setTimeout","AppWithTheme","PaperProvider","registerRootComponent","fontsLoaded","useFonts","font","showSplash","setShowSplash","onLayoutRootView","useCallback","Splash","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}