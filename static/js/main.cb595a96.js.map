{"version":3,"file":"static/js/main.cb595a96.js","mappings":"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","sources":["src/utils/storage.ts","src/context/authContent.tsx","src/layout/layout.tsx","src/utils/url.ts","src/context/appDataContext.tsx","src/api/aulas.ts","src/api/alarcoin.ts","src/utils/colors.ts","src/components/ResumenMiniCard.tsx","src/components/AlumnosList.tsx","src/screens/home-screen.tsx","src/utils/getSaludoFecha.ts","src/screens/login-screen.tsx","src/api/login.ts","src/screens/profile.tsx","src/utils/initials.ts","src/components/avatarCard.tsx","src/utils/theme.ts","src/context/themeContext.tsx","src/navigations/CustomDrawerContent.tsx","src/components/DropDonw.tsx","src/components/AlarcoinModal.tsx","src/components/LoadError.tsx","src/components/materiaCard.tsx","src/screens/alarcoin.tsx","src/screens/changePassword.tsx","src/api/updateUser.ts","src/screens/mis-materias.tsx","src/api/asistenciasClases.ts","src/components/ModalAsistencias.tsx","src/api/setClaseAsistencia.ts","src/components/claseCard.tsx","src/screens/DetailsMaterias.tsx","src/api/clasesMateria.ts","src/navigations/materiasStack.tsx","src/navigations/router.tsx","src/screens/splashScreen.tsx","App.tsx","index.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { User as UsuarioType } from \"../types/UserType\";\r\nimport { MateriasSimpleType as Aula } from \"../types/AulaType\";\r\n\r\nexport const saveUser = async (user: UsuarioType) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"user\", JSON.stringify(user));\r\n  } catch (error) {\r\n    console.error(\"Error guardando el usuario:\", error);\r\n  }\r\n};\r\n\r\nexport const getUser = async (): Promise<UsuarioType | null> => {\r\n  try {\r\n    const user = await AsyncStorage.getItem(\"user\");\r\n    if (user !== null) {\r\n      return JSON.parse(user);\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error(\"Error obteniendo el usuario:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveToStorage = async (key: string, value: string) => {\r\n  try {\r\n    await AsyncStorage.setItem(key, value);\r\n  } catch (error) {\r\n    console.error(\"Error guardando en storage:\", error);\r\n  }\r\n};\r\n\r\nexport const getFromStorage = async (key: string): Promise<string | null> => {\r\n  try {\r\n    return await AsyncStorage.getItem(key);\r\n  } catch (error) {\r\n    console.error(\"Error obteniendo de storage:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const removeFromStorage = async (key: string) => {\r\n  try {\r\n    await AsyncStorage.removeItem(key);\r\n  } catch (error) {\r\n    console.error(\"Error eliminando de storage:\", error);\r\n  }\r\n};\r\n\r\nexport const saveAula = async (aulas: Aula[]) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"aulas\", JSON.stringify(aulas));\r\n  } catch (error) {\r\n    console.log(\"error al guardar materias\", error);\r\n  }\r\n};\r\n\r\nexport const getAulaStorage = async (): Promise<Aula[] | null> => {\r\n  try {\r\n    const aula = await AsyncStorage.getItem(\"aulas\");\r\n    if (aula != null) return JSON.parse(aula) as Aula[];\r\n    return null;\r\n  } catch (error) {\r\n    console.log(\"no hay aulas\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveAlumnos = async (alumnos: UsuarioType[]) => {\r\n  try {\r\n    const json = JSON.stringify(alumnos);\r\n    await AsyncStorage.setItem(\"alumnos\", json);\r\n  } catch (error) {\r\n    console.error(\"Error al guardar alumnos:\", error);\r\n  }\r\n};\r\n\r\nexport const getAlumnosStorage = async (): Promise<Record<\r\n  number,\r\n  UsuarioType\r\n> | null> => {\r\n  try {\r\n    const data = await AsyncStorage.getItem(\"alumnos\");\r\n    if (!data) return null;\r\n\r\n    const alumnosArray: UsuarioType[] = JSON.parse(data);\r\n    const alumnosMap: Record<number, UsuarioType> = {};\r\n\r\n    alumnosArray.forEach((alumno) => {\r\n      alumnosMap[alumno.id] = alumno;\r\n    });\r\n\r\n    return alumnosMap;\r\n  } catch (error) {\r\n    console.error(\"Error al leer alumnos desde storage:\", error);\r\n    return null;\r\n  }\r\n};\r\n","// AuthContext.tsx\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { User } from \"../types/UserType\";\r\nimport { getUser, getFromStorage, removeFromStorage } from \"../utils/storage\";\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  setUser: (user: User | null) => void;\r\n  token: string | null;\r\n  setToken: (token: string | null) => void;\r\n  logout: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  setUser: () => {},\r\n  token: null,\r\n  setToken: () => {},\r\n  logout: () => {},\r\n  loading: true,\r\n});\r\n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const users = await getUser();\r\n      const token = await getFromStorage(\"token\");\r\n      if (users) setUser(users);\r\n      if (token) setToken(token);\r\n      setLoading(false);\r\n    };\r\n    loadUser();\r\n  }, []);\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await removeFromStorage(\"token\");\r\n      await removeFromStorage(\"user\");\r\n      await removeFromStorage(\"aulas\");\r\n    } catch (error) {\r\n      console.log(\"error al borrar items\", error);\r\n    }\r\n\r\n    setUser(null);\r\n    setToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ user, setUser, loading, token, setToken, logout }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n","import { ReactNode } from \"react\";\r\nimport {\r\n  Platform,\r\n  StyleSheet,\r\n  View,\r\n  ScrollView,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { useTheme } from \"react-native-paper\";\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const Layout = ({ children }: LayoutProps) => {\r\n  const { colors } = useTheme();\r\n  return (\r\n    <LinearGradient\r\n      colors={[colors.primary, colors.background]}\r\n      start={{ x: 0.6, y: 1.0 }}\r\n      end={{ x: 0.5, y: 0.0 }}\r\n      style={styles.gradient}\r\n    >\r\n      <SafeAreaView style={styles.safeArea}>\r\n        <KeyboardAvoidingView\r\n          style={styles.flex}\r\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n          keyboardVerticalOffset={\r\n            Platform.OS === \"ios\" ? 0 : StatusBar.currentHeight || 0\r\n          }\r\n        >\r\n          <ScrollView\r\n            contentContainerStyle={styles.scrollContainer}\r\n            keyboardShouldPersistTaps=\"handled\"\r\n          >\r\n            <View style={styles.innerContainer}>{children}</View>\r\n          </ScrollView>\r\n        </KeyboardAvoidingView>\r\n      </SafeAreaView>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  gradient: {\r\n    flex: 1,\r\n  },\r\n  safeArea: {\r\n    flex: 1,\r\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n});\r\n","export const urlBase = \"https://adminaulas.onrender.com\";\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useAuth } from \"./authContent\";\r\nimport { User as AlumnoType } from \"../types/UserType\";\r\nimport { MateriasSimpleType, MateriasType } from \"../types/AulaType\";\r\nimport { getalumnosAulas, getMisAulas } from \"../api/aulas\";\r\nimport {\r\n  getAlumnosStorage,\r\n  getAulaStorage,\r\n  getFromStorage,\r\n  saveAlumnos,\r\n  saveAula,\r\n} from \"../utils/storage\";\r\nimport { Alarcoin } from \"../types/AlarcoinType\";\r\nimport { getHistorialProfesor, getAlarcoinsAlumno } from \"../api/alarcoin\";\r\n\r\ninterface AppDataContextType {\r\n  aulas: MateriasSimpleType[];\r\n  alumnosMap: Record<number, AlumnoType>;\r\n  isLoading: boolean;\r\n  loadData: (token: string) => void;\r\n  alarcoins: Alarcoin[] | null;\r\n  loadAlarcoins: () => void;\r\n  alarcoinsError: boolean;\r\n}\r\n\r\ntype AulaConAlumnos = {\r\n  id: number;\r\n  nombre: string;\r\n  ano: number;\r\n  division: number;\r\n  especialidad: string;\r\n  profesor_id: number;\r\n  cantidad_clases: number;\r\n  alumnos: AlumnoType[];\r\n};\r\n\r\nconst AppDataContext = createContext<AppDataContextType | undefined>(undefined);\r\n\r\nexport const AppDataProvider = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => {\r\n  const { token, user } = useAuth();\r\n  const [aulas, setAulas] = useState<MateriasSimpleType[]>([]);\r\n  const [alumnosMap, setAlumnosMap] = useState<Record<number, AlumnoType>>({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [alarcoins, setAlarcoins] = useState<Alarcoin[] | null>(null);\r\n  const [alarcoinsError, setAlarcoinsError] = useState(false);\r\n\r\n  const calcularCantidadAlarcoins = (alarcoins: any[]) => {\r\n    return alarcoins.reduce((acc, item) => {\r\n      return acc + (item.suma ? item.cantidad : -item.cantidad);\r\n    }, 0);\r\n  };\r\n  const alarcoinProfe = async (data) => {\r\n    const actualizarCantidadAlarcoins = (alarcoinsData: AulaConAlumnos[]) => {\r\n      // const nuevoMap = { ...alumnosMap };\r\n      const nuevoMap: Record<number, AlumnoType> = { ...alumnosMap };\r\n\r\n      Object.keys(nuevoMap).forEach((id) => {\r\n        nuevoMap[+id] = {\r\n          ...nuevoMap[+id],\r\n          alarcoin: 0, // 👈 limpiar antes de asignar\r\n        };\r\n      });\r\n\r\n      alarcoinsData.forEach((aula) => {\r\n        aula.alumnos.forEach((alumno) => {\r\n          const cantidad = calcularCantidadAlarcoins(alumno?.alarcoins);\r\n          if (nuevoMap[alumno.id]) {\r\n            nuevoMap[alumno.id].alarcoin =\r\n              (nuevoMap[alumno.id].alarcoin || 0) + cantidad;\r\n          }\r\n        });\r\n      });\r\n\r\n      setAlumnosMap(nuevoMap);\r\n    };\r\n    actualizarCantidadAlarcoins(data);\r\n    setAlarcoins(data);\r\n  };\r\n  const alarcoinAlumno = async (data) => {\r\n    setAlarcoins(data);\r\n  };\r\n\r\n  const loadAlarcoins = async () => {\r\n    let efectiveToken = token;\r\n    if (!token) {\r\n      efectiveToken = await getFromStorage(\"token\");\r\n    }\r\n\r\n    setAlarcoinsError(false);\r\n    try {\r\n      let data;\r\n      if (user?.is_teacher) {\r\n        data = await getHistorialProfesor(efectiveToken); // llama a /historial\r\n        alarcoinProfe(data);\r\n      } else {\r\n        data = await getAlarcoinsAlumno(efectiveToken); // llama a /me\r\n        alarcoinAlumno(data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error cargando alarcoins:\", error);\r\n      setAlarcoinsError(true);\r\n    }\r\n  };\r\n\r\n  const loadDataAlumno = async (tokenParam: string) => {\r\n    try {\r\n      const cachedAulas = await getAulaStorage();\r\n      if (cachedAulas) {\r\n        setAulas(cachedAulas);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const aulasData: MateriasType[] = await getMisAulas(tokenParam);\r\n      const aulasProcesadas = aulasData.map((aula) => ({\r\n        ...aula,\r\n        alumnos: [user], // el alumno actual\r\n        alumnoIds: [user.id], // agregás este campo a mano para respetar el tipo MateriasSimpleType\r\n      }));\r\n\r\n      setAulas(aulasProcesadas);\r\n      await saveAula(aulasProcesadas);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const loadDataProfe = async (tokenParam: string) => {\r\n    try {\r\n      const cachedAulas = await getAulaStorage();\r\n      const cachedAulumnosMap = await getAlumnosStorage();\r\n\r\n      if (cachedAulas && cachedAulumnosMap) {\r\n        setAulas(cachedAulas);\r\n        setAlumnosMap(cachedAulumnosMap);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const aulasData: AulaConAlumnos[] = await getalumnosAulas(tokenParam);\r\n      const alumnosMapTemp: Record<number, AlumnoType> = {};\r\n      const aulasSinAlumnos = aulasData.map((aula) => {\r\n        aula.alumnos.forEach((alumno) => {\r\n          alumnosMapTemp[alumno.id] = alumno;\r\n        });\r\n        return {\r\n          id: aula.id,\r\n          nombre: aula.nombre,\r\n          ano: aula.ano,\r\n          division: aula.division,\r\n          especialidad: aula.especialidad,\r\n          profesor_id: aula.profesor_id,\r\n          cantidad_clases: aula.cantidad_clases,\r\n          alumnoIds: aula.alumnos.map((alumno) => alumno.id),\r\n        };\r\n      });\r\n      setAulas(aulasSinAlumnos);\r\n      setAlumnosMap(alumnosMapTemp);\r\n      await saveAula(aulasSinAlumnos);\r\n\r\n      await saveAlumnos(Object.values(alumnosMapTemp));\r\n    } catch (error) {\r\n      console.error(\"Error cargando datos desde appData:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadData = async (tokenParam?: string) => {\r\n    const effectiveToken = tokenParam || token;\r\n    if (!effectiveToken) return;\r\n\r\n    if (user?.is_teacher) {\r\n      await loadDataProfe(effectiveToken);\r\n    } else {\r\n      await loadDataAlumno(effectiveToken);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [token]);\r\n\r\n  return (\r\n    <AppDataContext.Provider\r\n      value={{\r\n        aulas,\r\n        alumnosMap,\r\n        isLoading,\r\n        loadData,\r\n        alarcoins,\r\n        loadAlarcoins,\r\n        alarcoinsError,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppDataContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppData = () => {\r\n  const context = useContext(AppDataContext);\r\n  if (!context)\r\n    throw new Error(\"useAppData debe usarse dentro de AppDataProvider\");\r\n  return context;\r\n};\r\n","import { urlBase } from \"../utils/url\";\r\nimport { MateriasAlumnosType, MateriasType } from \"../types/AulaType\";\r\n\r\nexport async function getalumnosAulas(\r\n  token: string | null\r\n): Promise<MateriasAlumnosType[]> {\r\n  const response = await fetch(`${urlBase}/aulas/mis-aulas-con-alumnos`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function getMisAulas(token: string): Promise<MateriasType[]> {\r\n  const response = await fetch(`${urlBase}/aulas/mis-aulas`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import {\r\n  Alarcoin,\r\n  AlarcoinAlumnoType,\r\n  AlarcoinAulaAlumnoType,\r\n  AlarcoinCreateType,\r\n} from \"../types/AlarcoinType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\n// Crear alarcoin\r\nexport async function crearAlarcoin(\r\n  token: string | null,\r\n  data: AlarcoinCreateType\r\n): Promise<Alarcoin> {\r\n  const response = await fetch(`${urlBase}/alarcoins/`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al asignar alarcoin\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\n// Actualizar alarcoin\r\nexport async function actualizarAlarcoin(\r\n  token: string,\r\n  id: number,\r\n  data: {\r\n    aula_id: number;\r\n    alumno_id: number;\r\n    detalle: string;\r\n    suma: boolean;\r\n  }\r\n): Promise<Alarcoin> {\r\n  const response = await fetch(`${urlBase}/alarcoins/${id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al actualizar alarcoin\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\n// Obtener alarcoins del alumno actual\r\nexport async function getAlarcoinsAlumno(\r\n  token: string | null\r\n): Promise<AlarcoinAulaAlumnoType[]> {\r\n  const response = await fetch(`${urlBase}/alarcoins/me`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al obtener mis alarcoins\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\n// Obtener historial del profesor\r\nexport async function getHistorialProfesor(\r\n  token: string | null\r\n): Promise<AlarcoinAlumnoType[]> {\r\n  const response = await fetch(`${urlBase}/alarcoins/historial`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al obtener historial\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","export const PrimaryColor = \"#b14aca\";\r\n","import { Card, Avatar, Text } from \"react-native-paper\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\r\ntype Props = {\r\n  title: string;\r\n  value: number;\r\n  icon: string;\r\n  color: string;\r\n};\r\n\r\nconst ResumenMiniCard = ({ title, value, icon, color = \"#6200ee\" }: Props) => {\r\n  return (\r\n    <Card style={styles.card} mode=\"contained\">\r\n      <Card.Content style={styles.cardContent}>\r\n        <Avatar.Icon\r\n          icon={({ color, size }) => (\r\n            <Ionicons name={icon} color={color} size={size} />\r\n          )}\r\n          style={{ backgroundColor: color }}\r\n        />\r\n        <View style={{ marginLeft: 12 }}>\r\n          <Text variant=\"labelLarge\" style={{ color: \"#777\" }}>\r\n            {title}\r\n          </Text>\r\n          <Text variant=\"titleMedium\" style={{ fontWeight: \"bold\" }}>\r\n            {value}\r\n          </Text>\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ResumenMiniCard;\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n    minWidth: 350,\r\n    marginBottom: 12,\r\n    elevation: 12,\r\n    borderRadius: 12,\r\n    alignSelf: \"center\",\r\n  },\r\n  cardContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { StyleSheet, View } from \"react-native\";\r\nimport { Card, List, Avatar, Divider } from \"react-native-paper\";\r\nimport { User } from \"../types/UserType\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\n// Fix para iconos en web\r\n\r\ninterface Props {\r\n  alumnos: User[];\r\n}\r\nconst AlumnosList = ({ alumnos }: Props) => {\r\n  return (\r\n    <Card style={styles.card}>\r\n      <List.Accordion\r\n        title={`Alumnos (${alumnos.length})`}\r\n        left={(props) => (\r\n          <List.Icon\r\n            {...props}\r\n            icon={({ size, color }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"account-group-outline\"\r\n                size={size}\r\n                color={color}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n        right={(props) => (\r\n          <MaterialCommunityIcons\r\n            name={props.isExpanded ? \"chevron-up\" : \"chevron-down\"}\r\n            size={24}\r\n            color=\"#fff\"\r\n          />\r\n        )}\r\n        titleStyle={styles.accordionTitle}\r\n        style={styles.accordion}\r\n      >\r\n        {alumnos.length === 0 ? (\r\n          <List.Item\r\n            title=\"No hay alumnos\"\r\n            left={(props) => (\r\n              <List.Icon\r\n                {...props}\r\n                icon={({ size, color }) => (\r\n                  <MaterialCommunityIcons\r\n                    name=\"alert-circle-outline\"\r\n                    size={size}\r\n                    color={color}\r\n                  />\r\n                )}\r\n              />\r\n            )}\r\n            titleStyle={{ color: \"#888\" }}\r\n          />\r\n        ) : (\r\n          alumnos.map((alumno, idx) => (\r\n            <View key={alumno.id}>\r\n              <List.Item\r\n                title={alumno.nombre}\r\n                description={alumno.email}\r\n                left={() => (\r\n                  <Avatar.Text\r\n                    size={36}\r\n                    label={alumno.nombre ? alumno.nombre[0].toUpperCase() : \"A\"}\r\n                    style={styles.avatar}\r\n                    color=\"#fff\"\r\n                  />\r\n                )}\r\n                titleStyle={styles.itemTitle}\r\n                descriptionStyle={styles.itemDescription}\r\n                style={styles.listItem}\r\n              />\r\n              {idx < alumnos.length - 1 && <Divider />}\r\n            </View>\r\n          ))\r\n        )}\r\n      </List.Accordion>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AlumnosList;\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    width: \"100%\",\r\n\r\n    maxWidth: 600,\r\n    marginBottom: 12,\r\n    elevation: 12,\r\n    borderRadius: 16,\r\n    overflow: \"hidden\",\r\n  },\r\n  accordion: {},\r\n  accordionTitle: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n  },\r\n  listItem: {\r\n    backgroundColor: \"#fff\",\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 8,\r\n  },\r\n  itemTitle: {\r\n    color: \"#C93A4A\",\r\n    fontWeight: \"600\",\r\n    fontSize: 16,\r\n  },\r\n  itemDescription: {\r\n    color: \"#888\",\r\n    fontSize: 13,\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#C93A4A\",\r\n    marginRight: 8,\r\n  },\r\n});\r\n","import { StyleSheet, View, useWindowDimensions } from \"react-native\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { ActivityIndicator, Text } from \"react-native-paper\";\r\nimport { PrimaryColor } from \"../utils/colors\";\r\nimport { getSaludoFecha } from \"../utils/getSaludoFecha\";\r\nimport ResumenMiniCard from \"../components/ResumenMiniCard\";\r\nimport AlumnosList from \"../components/AlumnosList\";\r\n\r\nconst HomeScreen = () => {\r\n  const { width } = useWindowDimensions();\r\n  const isSmallScreen = width < 400;\r\n\r\n  const { user, loading } = useAuth();\r\n  const { aulas, alumnosMap, isLoading, alarcoins } = useAppData();\r\n  const cargando = isLoading && loading;\r\n\r\n  const totalClasesDictadas = aulas.reduce((total, aula) => {\r\n    return total + (aula.cantidad_clases || 0);\r\n  }, 0);\r\n  const { saludo, fecha } = getSaludoFecha();\r\n\r\n  return (\r\n    <Layout>\r\n      {cargando ? (\r\n        <ActivityIndicator size={\"large\"} color={PrimaryColor} />\r\n      ) : (\r\n        <>\r\n          <View style={[styles.header, isSmallScreen && styles.headerSmall]}>\r\n            <View>\r\n              <Text variant=\"titleMedium\">{`${saludo}, ${user?.nombre}`}</Text>\r\n              <Text variant=\"labelMedium\">\r\n                {user?.is_teacher ? \"Profesor\" : \"Alumno\"}\r\n              </Text>\r\n            </View>\r\n            <View style={isSmallScreen && { marginTop: 8 }}>\r\n              <Text variant=\"bodySmall\">{fecha}</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.cardsContainer}>\r\n            <ResumenMiniCard\r\n              title=\"Aulas\"\r\n              value={aulas.length}\r\n              icon=\"school\"\r\n              color={PrimaryColor}\r\n            />\r\n            <ResumenMiniCard\r\n              title=\"Clases\"\r\n              value={totalClasesDictadas}\r\n              icon=\"calendar\"\r\n              color=\"#C93A9F\"\r\n            />\r\n            {/* <ResumenMiniCard\r\n              title=\"Alarcoins\"\r\n              value={totalClasesDictadas}\r\n              icon=\"star\"\r\n              color=\"#FFD700\"\r\n            /> */}\r\n            {user?.is_teacher && (\r\n              <AlumnosList alumnos={Object.values(alumnosMap)} />\r\n            )}\r\n          </View>\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n    marginBottom: 16,\r\n    gap: 10,\r\n  },\r\n  headerSmall: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    gap: 4,\r\n  },\r\n  cardsContainer: {\r\n    flexWrap: \"wrap\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-between\",\r\n    gap: 16,\r\n    marginBottom: 24,\r\n  },\r\n  alumnosListContainer: {\r\n    marginTop: 16,\r\n  },\r\n});\r\n","export const getSaludoFecha = (): { saludo: string; fecha: string } => {\r\n  const now = new Date();\r\n  const hora = now.getHours();\r\n\r\n  let saludo;\r\n  // Determinar saludo\r\n  if (hora >= 6 && hora < 12) {\r\n    saludo = \"Buenos días\";\r\n  } else if (hora >= 12 && hora < 19) {\r\n    saludo = \"Buenas tardes\";\r\n  } else {\r\n    saludo = \"Buenas noches\";\r\n  }\r\n\r\n  // Formatear fecha\r\n  const opcionesFecha: Intl.DateTimeFormatOptions = {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n  };\r\n\r\n  const fecha = now.toLocaleDateString(\"es-ES\", opcionesFecha);\r\n\r\n  return {\r\n    saludo,\r\n    fecha, // ejemplo: \"20 de mayo de 2025\"\r\n  };\r\n};\r\n","// screens/Login/LoginScreen.tsx\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { loginUser } from \"../api/login\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport { saveToStorage, saveUser } from \"../utils/storage\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { Button } from \"react-native-paper\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Email inválido\").required(\"Requerido\"),\r\n  password: Yup.string().min(6, \"Mínimo 6 caracteres\").required(\"Requerido\"),\r\n});\r\n\r\nexport default function LoginScreen() {\r\n  const navigation = useNavigation();\r\n  const { loading, setUser, setToken } = useAuth();\r\n  const { loadData } = useAppData();\r\n  const handleLogin = async (\r\n    values: { email: string; password: string },\r\n    setSubmitting: (isSubmitting: boolean) => void,\r\n    setError: (msg: string) => void,\r\n    resetForm: () => void\r\n  ) => {\r\n    try {\r\n      const response = await loginUser(values);\r\n      resetForm();\r\n      setUser(response.user);\r\n      setToken(response.access_token);\r\n      await saveUser(response.user);\r\n      await saveToStorage(\"token\", response.access_token);\r\n      loadData(response.access_token);\r\n      navigation.navigate(\"Main\");\r\n    } catch (error: any) {\r\n      setError(\"Credenciales inválidas\");\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {loading ? (\r\n        <Text>Cargando ...</Text>\r\n      ) : (\r\n        <View style={styles.container}>\r\n          <View style={styles.card}>\r\n            <Text style={styles.title}>Iniciar sesión</Text>\r\n\r\n            <Formik\r\n              initialValues={{ email: \"\", password: \"\" }}\r\n              validationSchema={LoginSchema}\r\n              onSubmit={(values, { setSubmitting, setErrors, resetForm }) =>\r\n                handleLogin(\r\n                  values,\r\n                  setSubmitting,\r\n                  (msg) => setErrors({ password: msg }),\r\n                  resetForm\r\n                )\r\n              }\r\n            >\r\n              {({\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                values,\r\n                errors,\r\n                touched,\r\n                isSubmitting,\r\n              }) => (\r\n                <>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Email\"\r\n                    onChangeText={handleChange(\"email\")}\r\n                    onBlur={handleBlur(\"email\")}\r\n                    value={values.email}\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                  />\r\n                  {touched.email && errors.email && (\r\n                    <Text style={styles.error}>{errors.email}</Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Contraseña\"\r\n                    onChangeText={handleChange(\"password\")}\r\n                    onBlur={handleBlur(\"password\")}\r\n                    value={values.password}\r\n                    secureTextEntry\r\n                  />\r\n                  {touched.password && errors.password && (\r\n                    <Text style={styles.error}>{errors.password}</Text>\r\n                  )}\r\n\r\n                  <Button onPress={handleSubmit}>\r\n                    {isSubmitting ? (\r\n                      <ActivityIndicator color=\"#fff\" />\r\n                    ) : (\r\n                      <Text style={styles.buttonText}>Ingresar</Text>\r\n                    )}\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Formik>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  card: {\r\n    width: \"85%\",\r\n    padding: 24,\r\n    borderRadius: 12,\r\n    backgroundColor: \"#fefefe80\",\r\n    elevation: 6, // Android shadow\r\n    shadowColor: \"#000\", // iOS shadow\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    maxWidth: 400,\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    height: 48,\r\n    borderColor: \"#ccc\",\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    paddingHorizontal: 12,\r\n    marginTop: 12,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    fontSize: 12,\r\n    marginTop: 4,\r\n    marginLeft: 4,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#007AFF\",\r\n    paddingVertical: 12,\r\n    borderRadius: 8,\r\n    marginTop: 20,\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"600\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n","import { User } from \"../types/UserType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport interface LoginData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface LoginResponse {\r\n  access_token: string;\r\n  user: User;\r\n}\r\n\r\nexport async function loginUser(data: LoginData): Promise<LoginResponse> {\r\n  const response = await fetch(`${urlBase}/users/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { Layout } from \"../layout/layout\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Alert,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\nimport {\r\n  Text,\r\n  Card,\r\n  TextInput,\r\n  Button,\r\n  useTheme,\r\n  Divider,\r\n} from \"react-native-paper\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useAuth } from \"../context/authContent\";\r\n\r\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required(\"El nombre es obligatorio\"),\r\n  email: Yup.string()\r\n    .email(\"Correo inválido\")\r\n    .required(\"El correo es obligatorio\"),\r\n  currentPassword: Yup.string().required(\"Campo obligatorio\"),\r\n  newPassword: Yup.string().min(6, \"Debe tener al menos 6 caracteres\"),\r\n});\r\n\r\nconst Profile = () => {\r\n  const { user } = useAuth();\r\n  const [editable, setEditable] = useState(false);\r\n  const [nombre, setNombre] = useState(user?.nombre);\r\n  const [apellido, setApellido] = useState(user?.apellido);\r\n  const [email] = useState(user?.email);\r\n  const { colors } = useTheme();\r\n  const { width } = useWindowDimensions();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleEdit = () => setEditable(true);\r\n\r\n  const handleCancel = () => {\r\n    setEditable(false);\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (password && password !== confirmPassword) {\r\n      Alert.alert(\"Error\", \"Las contraseñas no coinciden.\");\r\n      return;\r\n    }\r\n    setEditable(false);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <ScrollView contentContainerStyle={[styles.container, ,]}>\r\n        <Text\r\n          variant=\"titleLarge\"\r\n          style={[styles.header, { color: colors.primary }]}\r\n        >\r\n          Perfil\r\n        </Text>\r\n        <Text\r\n          variant=\"bodyMedium\"\r\n          style={[styles.subheader, { color: colors.onSurfaceVariant }]}\r\n        >\r\n          Administra tu información personal\r\n        </Text>\r\n\r\n        <Card style={[styles.card, { backgroundColor: colors.surface }]}>\r\n          <View style={styles.cardheader}>\r\n            <Card.Title\r\n              title=\"Información Personal\"\r\n              subtitle=\"Actualiza tu información de cuenta\"\r\n              titleStyle={[styles.cardTitle, { color: colors.primary }]}\r\n              subtitleStyle={[\r\n                styles.cardSubtitle,\r\n                { color: colors.onSurfaceVariant },\r\n              ]}\r\n            />\r\n          </View>\r\n          <Divider\r\n            style={{ marginBottom: 8, backgroundColor: colors.outlineVariant }}\r\n          />\r\n          <Card.Content>\r\n            <Formik\r\n              initialValues={{\r\n                name: nombre || \"\",\r\n                apellido: apellido || \"\",\r\n                email: email || \"\",\r\n                newPassword: \"\",\r\n                confirmPassword: \"\",\r\n              }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(values) => {\r\n                handleSave();\r\n              }}\r\n              enableReinitialize\r\n            >\r\n              {({\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                values,\r\n                errors,\r\n                touched,\r\n              }) => (\r\n                <View style={styles.form}>\r\n                  <TextInput\r\n                    label=\"Nombre\"\r\n                    value={nombre}\r\n                    onChangeText={setNombre}\r\n                    editable={editable}\r\n                    mode=\"flat\"\r\n                    style={[\r\n                      styles.input,\r\n                      {\r\n                        backgroundColor: editable\r\n                          ? colors.background\r\n                          : colors.surfaceDisabled,\r\n                      },\r\n                    ]}\r\n                    error={!!errors.name && touched.name}\r\n                    onBlur={handleBlur(\"name\")}\r\n                    left={\r\n                      <TextInput.Icon\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons\r\n                            name=\"person-outline\"\r\n                            color={color}\r\n                            size={size}\r\n                          />\r\n                        )}\r\n                      />\r\n                    }\r\n                  />\r\n                  {editable && errors.name && touched.name && (\r\n                    <Text style={[styles.error, { color: colors.error }]}>\r\n                      {errors.name}\r\n                    </Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    label=\"Apellido\"\r\n                    value={apellido}\r\n                    onChangeText={setApellido}\r\n                    editable={editable}\r\n                    mode=\"flat\"\r\n                    style={[\r\n                      styles.input,\r\n                      {\r\n                        backgroundColor: editable\r\n                          ? colors.background\r\n                          : colors.surfaceDisabled,\r\n                      },\r\n                    ]}\r\n                    error={!!errors.apellido && touched.apellido}\r\n                    onBlur={handleBlur(\"apellido\")}\r\n                    left={\r\n                      <TextInput.Icon\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons\r\n                            name=\"person-outline\"\r\n                            color={color}\r\n                            size={size}\r\n                          />\r\n                        )}\r\n                      />\r\n                    }\r\n                  />\r\n                  {editable && errors.apellido && touched.apellido && (\r\n                    <Text style={[styles.error, { color: colors.error }]}>\r\n                      {errors.apellido}\r\n                    </Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    editable={false}\r\n                    mode=\"flat\"\r\n                    style={[\r\n                      styles.input,\r\n                      { backgroundColor: colors.surfaceDisabled },\r\n                    ]}\r\n                    left={\r\n                      <TextInput.Icon\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons\r\n                            name=\"mail-outline\"\r\n                            color={color}\r\n                            size={size}\r\n                          />\r\n                        )}\r\n                      />\r\n                    }\r\n                  />\r\n\r\n                  {editable && (\r\n                    <>\r\n                      <TextInput\r\n                        label=\"Nueva clave\"\r\n                        secureTextEntry\r\n                        textContentType=\"oneTimeCode\"\r\n                        value={password}\r\n                        onChangeText={setPassword}\r\n                        placeholder=\"********\"\r\n                        mode=\"flat\"\r\n                        style={[\r\n                          styles.input,\r\n                          { backgroundColor: colors.background },\r\n                        ]}\r\n                        error={!!errors.newPassword && touched.newPassword}\r\n                        onBlur={handleBlur(\"newPassword\")}\r\n                        left={\r\n                          <TextInput.Icon\r\n                            icon={({ color, size }) => (\r\n                              <Ionicons\r\n                                name=\"lock-closed-outline\"\r\n                                color={color}\r\n                                size={size}\r\n                              />\r\n                            )}\r\n                          />\r\n                        }\r\n                      />\r\n                      {errors.newPassword && touched.newPassword && (\r\n                        <Text style={[styles.error, { color: colors.error }]}>\r\n                          {errors.newPassword}\r\n                        </Text>\r\n                      )}\r\n\r\n                      <TextInput\r\n                        label=\"Repetir clave\"\r\n                        secureTextEntry\r\n                        value={confirmPassword}\r\n                        onChangeText={setConfirmPassword}\r\n                        placeholder=\"********\"\r\n                        mode=\"flat\"\r\n                        style={[styles.input, ,]}\r\n                        left={\r\n                          <TextInput.Icon\r\n                            icon={({ color, size }) => (\r\n                              <Ionicons\r\n                                name=\"lock-closed-outline\"\r\n                                color={color}\r\n                                size={size}\r\n                              />\r\n                            )}\r\n                          />\r\n                        }\r\n                      />\r\n\r\n                      <View style={styles.buttonGroup}>\r\n                        <Button\r\n                          mode=\"outlined\"\r\n                          style={[\r\n                            styles.cancelButton,\r\n                            { borderColor: colors.outline },\r\n                            width < 400 && { flex: 1 },\r\n                          ]}\r\n                          onPress={handleCancel}\r\n                          labelStyle={{ color: colors.primary }}\r\n                        >\r\n                          Cancelar\r\n                        </Button>\r\n                        <Button\r\n                          mode=\"contained\"\r\n                          style={[\r\n                            styles.saveButton,\r\n                            { backgroundColor: colors.primary },\r\n                            width < 400 && { flex: 1 },\r\n                          ]}\r\n                          onPress={handleSubmit as any}\r\n                          labelStyle={{ color: colors.onPrimary }}\r\n                        >\r\n                          Guardar\r\n                        </Button>\r\n                      </View>\r\n                    </>\r\n                  )}\r\n\r\n                  {!editable && (\r\n                    <Button\r\n                      style={[\r\n                        styles.editButton,\r\n                        { backgroundColor: colors.primary },\r\n                        width < 400 && { width: \"100%\", alignSelf: \"center\" },\r\n                      ]}\r\n                      mode=\"contained\"\r\n                      icon=\"pencil\"\r\n                      onPress={handleEdit}\r\n                      labelStyle={{ color: colors.onPrimary, fontSize: 16 }}\r\n                      contentStyle={{ paddingVertical: 8 }}\r\n                    >\r\n                      Editar\r\n                    </Button>\r\n                  )}\r\n                </View>\r\n              )}\r\n            </Formik>\r\n          </Card.Content>\r\n        </Card>\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexGrow: 1,\r\n    padding: 15,\r\n    alignItems: \"center\",\r\n    minHeight: \"100%\",\r\n  },\r\n  header: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 28,\r\n    marginTop: 16,\r\n    marginBottom: 4,\r\n    alignSelf: \"flex-start\",\r\n    letterSpacing: 0.5,\r\n  },\r\n  subheader: {\r\n    marginBottom: 16,\r\n    alignSelf: \"flex-start\",\r\n    fontSize: 16,\r\n    opacity: 0.85,\r\n  },\r\n  avatarContainer: {\r\n    alignItems: \"center\",\r\n    marginVertical: 16,\r\n    width: \"100%\",\r\n  },\r\n  cardheader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingRight: 8,\r\n    paddingTop: 8,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  cardSubtitle: {\r\n    fontSize: 14,\r\n  },\r\n  editButton: {\r\n    marginTop: 16,\r\n    borderRadius: 20,\r\n    minWidth: 120,\r\n    elevation: 0,\r\n    alignSelf: \"center\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    alignSelf: \"center\",\r\n    marginTop: 16,\r\n    paddingHorizontal: 0,\r\n    borderRadius: 16,\r\n    elevation: 2,\r\n  },\r\n  form: {\r\n    gap: 8,\r\n    marginTop: 8,\r\n    width: \"100%\",\r\n  },\r\n  input: {\r\n    marginBottom: 4,\r\n  },\r\n  error: {\r\n    fontSize: 12,\r\n    marginBottom: 4,\r\n    marginLeft: 4,\r\n  },\r\n  buttonGroup: {\r\n    marginTop: 16,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    gap: 8,\r\n  },\r\n  saveButton: {\r\n    marginLeft: 8,\r\n    borderRadius: 20,\r\n    minWidth: 100,\r\n  },\r\n  cancelButton: {\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 20,\r\n    minWidth: 100,\r\n  },\r\n  logoutButton: {\r\n    marginTop: 32,\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    alignSelf: \"center\",\r\n    borderRadius: 20,\r\n    borderWidth: 1,\r\n    borderColor: \"#e53935\",\r\n    color: \"#e53935\",\r\n  },\r\n});\r\n\r\nexport default Profile;\r\n","export const getInitials = (nombre?: string, apellido?: string) => {\r\n  const n = nombre?.trim()?.[0]?.toUpperCase() ?? \"\";\r\n  const a = apellido?.trim()?.[0]?.toUpperCase() ?? \"\";\r\n  return `${n}${a}`;\r\n};\r\n","import { View, StyleSheet } from \"react-native\";\r\nimport { Avatar, Text } from \"react-native-paper\";\r\nimport { User } from \"../types/UserType\";\r\nimport { useTheme } from \"@react-navigation/native\";\r\nimport { getInitials } from \"../utils/initials\";\r\n\r\ninterface Props {\r\n  isalarcoins: boolean;\r\n  alarcoins: number;\r\n  user: User;\r\n  loading: boolean;\r\n}\r\n\r\nconst AvatarCard = ({\r\n  alarcoins,\r\n  isalarcoins = false,\r\n  user,\r\n  loading,\r\n}: Props) => {\r\n  const { colors } = useTheme();\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.profile,\r\n        isalarcoins && {\r\n          backgroundColor: colors.background,\r\n          borderRadius: 12,\r\n          padding: 16,\r\n          elevation: 2, // o shadow para iOS\r\n          shadowColor: \"#000\",\r\n          shadowOffset: { width: 0, height: 1 },\r\n          shadowOpacity: 0.2,\r\n          shadowRadius: 1.41,\r\n        },\r\n      ]}\r\n    >\r\n      <Avatar.Text\r\n        label={getInitials(user?.nombre, user?.apellido)}\r\n        size={64}\r\n        style={styles.avatar}\r\n      />\r\n      <Text variant=\"titleLarge\" style={styles.name}>\r\n        {loading ? \"Cargando\" : `${user?.nombre} ${user?.apellido}`}\r\n      </Text>\r\n      {!isalarcoins && (\r\n        <Text variant=\"bodySmall\" style={styles.role}>\r\n          {loading ? \"cargando\" : user?.is_teacher ? \"Profesor\" : \"Alumno\"}\r\n        </Text>\r\n      )}\r\n\r\n      {isalarcoins && (\r\n        <View>\r\n          <Text variant=\"bodyMedium\">Tus Alarcoins</Text>\r\n          <Text variant=\"bodyMedium\" style={{ textAlign: \"center\" }}>\r\n            {alarcoins}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  profile: {\r\n    alignItems: \"center\",\r\n    marginBottom: 16,\r\n    maxWidth: 350,\r\n    margin: 10,\r\n    width: \"100%\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#c001f5\",\r\n  },\r\n  name: {\r\n    marginTop: 8,\r\n    fontWeight: \"bold\",\r\n  },\r\n  role: {\r\n    fontSize: 14,\r\n    color: \"#6b7280\",\r\n  },\r\n});\r\n\r\nexport default AvatarCard;\r\n","import { MD3LightTheme, MD3DarkTheme, MD3Theme } from \"react-native-paper\";\r\n\r\nexport const lightTheme: MD3Theme = {\r\n  ...MD3LightTheme,\r\n  colors: {\r\n    ...MD3LightTheme.colors,\r\n    primary: \"#d83dff\",\r\n    background: \"#d1a3ff\",\r\n    surface: \"#d1a3ff\",\r\n    text: \"#2b2b2b\",\r\n    secondary: \"#4ab19f\",\r\n    accent: \"#f2c94c\",\r\n    asistenciaBuena: \"#10b981\",\r\n    asistenciaMedia: \"#ffb93f\",\r\n    asistenciaMala: \"#ef4444\",\r\n  },\r\n};\r\n\r\nexport const darkTheme: MD3Theme = {\r\n  ...MD3DarkTheme,\r\n  colors: {\r\n    ...MD3DarkTheme.colors,\r\n    primary: \"#b14aca\",\r\n    background: \"#302f2f\",\r\n    surface: \"#1e1e1e\",\r\n    text: \"#ffffff\",\r\n    secondary: \"#4ab19f\",\r\n    accent: \"#f2c94c\",\r\n    asistenciaBuena: \"#097551\",\r\n    asistenciaMedia: \"#f59e0b\",\r\n    asistenciaMala: \"#e21313\",\r\n  },\r\n};\r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { Appearance } from \"react-native\";\r\nimport { lightTheme, darkTheme } from \"../utils/theme\";\r\nimport { useColorScheme } from \"react-native\";\r\nimport { getFromStorage, saveToStorage } from \"../utils/storage\";\r\n\r\nconst ThemeContext = createContext({\r\n  isDarkMode: false,\r\n  toggleTheme: () => {},\r\n  theme: lightTheme,\r\n});\r\n\r\nexport const ThemeProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const systemColorScheme = useColorScheme(); // 'light' | 'dark' | null\r\n  const [useSystemTheme, setUseSystemTheme] = useState(true);\r\n  const [isDarkMode, setIsDarkMode] = useState(systemColorScheme === \"dark\");\r\n\r\n  useEffect(() => {\r\n    const loadTheme = async () => {\r\n      const stored = await getFromStorage(\"theme\");\r\n      if (stored === \"light\" || stored === \"dark\") {\r\n        setUseSystemTheme(false);\r\n        setIsDarkMode(stored === \"dark\");\r\n      } else {\r\n        setUseSystemTheme(true);\r\n        setIsDarkMode(systemColorScheme === \"dark\");\r\n      }\r\n    };\r\n    loadTheme();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (useSystemTheme && systemColorScheme) {\r\n      setIsDarkMode(systemColorScheme === \"dark\");\r\n    }\r\n  }, [systemColorScheme, useSystemTheme]);\r\n\r\n  useEffect(() => {\r\n    const listener = Appearance.addChangeListener(({ colorScheme }) => {\r\n      setIsDarkMode(colorScheme === \"dark\");\r\n    });\r\n    return () => listener.remove();\r\n  }, []);\r\n\r\n  const toggleTheme = async () => {\r\n    const newValue = !isDarkMode;\r\n    setIsDarkMode(newValue);\r\n    setUseSystemTheme(false);\r\n    await saveToStorage(\"theme\", newValue ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const theme = isDarkMode ? darkTheme : lightTheme;\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme, theme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useThemeContext = () => useContext(ThemeContext);\r\n","// CustomDrawerContent.tsx\r\nimport React from \"react\";\r\nimport { DrawerContentScrollView, DrawerItem } from \"@react-navigation/drawer\";\r\nimport { Drawer, Switch } from \"react-native-paper\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\r\nimport AvatarCard from \"../components/avatarCard\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { CommonActions, useNavigation } from \"@react-navigation/native\";\r\nimport { useThemeContext } from \"../context/themeContext\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport { RootStack } from \"../types/route\";\r\n\r\nexport default function CustomDrawerContent(props: any) {\r\n  const { isDarkMode, toggleTheme } = useThemeContext();\r\n  const { user, loading, logout } = useAuth();\r\n\r\n  const drawerItems = [\r\n    {\r\n      icon: \"grid-outline\",\r\n      label: \"Dashboard\",\r\n      screen: \"Home\",\r\n    },\r\n    {\r\n      icon: \"person-outline\",\r\n      label: \"Perfil\",\r\n      screen: \"Perfil\",\r\n    },\r\n    {\r\n      icon: \"book-outline\",\r\n      label: \"Mis Aulas\",\r\n      screen: \"MateriasStack\",\r\n    },\r\n    {\r\n      icon: \"logo-bitcoin\",\r\n      label: user\r\n        ? user.is_teacher\r\n          ? \"Alarcoins\"\r\n          : \"Mis Alarcoins\"\r\n        : \"Alarcoins\",\r\n      screen: \"Alarcoin\",\r\n    },\r\n  ];\r\n\r\n  const navigation = useNavigation<NativeStackNavigationProp<RootStack>>();\r\n  return (\r\n    <DrawerContentScrollView {...props} contentContainerStyle={{ flex: 1 }}>\r\n      <View style={styles.container}>\r\n        {/* Perfil */}\r\n        <AvatarCard user={user} loading={loading} isalarcoins={false} />\r\n        {/* Navegación */}\r\n        <Drawer.Section style={styles.nav}>\r\n          {drawerItems.map((item, index) => (\r\n            <DrawerItem\r\n              key={index}\r\n              icon={({ color, size }) => (\r\n                <Ionicons name={item.icon as any} color={color} size={size} />\r\n              )}\r\n              label={item.label}\r\n              onPress={() => props.navigation.navigate(item.screen as any)}\r\n            />\r\n          ))}\r\n        </Drawer.Section>\r\n\r\n        {/* Cerrar sesión */}\r\n        <Drawer.Section style={styles.bottom}>\r\n          <DrawerItem\r\n            icon={({ color, size }) => (\r\n              <Ionicons\r\n                name={isDarkMode ? \"moon\" : \"sunny\"}\r\n                color={color}\r\n                size={size}\r\n              />\r\n            )}\r\n            label={isDarkMode ? \"Modo oscuro\" : \"Modo claro\"}\r\n            onPress={toggleTheme}\r\n            style={styles.themeItem}\r\n            // agregamos el Switch como accesorio a la derecha\r\n            right={(): React.ReactNode => (\r\n              <Switch value={isDarkMode} onValueChange={toggleTheme} />\r\n            )}\r\n          />\r\n\r\n          <DrawerItem\r\n            icon={({ color, size }) => (\r\n              <Feather name=\"log-out\" color={color} size={size} />\r\n            )}\r\n            label=\"Cerrar sesión\"\r\n            onPress={() => {\r\n              logout();\r\n              navigation.dispatch(\r\n                CommonActions.reset({\r\n                  index: 0,\r\n                  routes: [{ name: \"Login\" }],\r\n                })\r\n              );\r\n            }}\r\n          />\r\n        </Drawer.Section>\r\n      </View>\r\n    </DrawerContentScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 24,\r\n  },\r\n  nav: {\r\n    marginTop: 16,\r\n  },\r\n  bottom: {\r\n    marginTop: \"auto\",\r\n    padding: 5,\r\n  },\r\n  switchRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 8,\r\n  },\r\n  themeItem: {\r\n    paddingRight: 8,\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { Button, Menu, Divider, HelperText } from \"react-native-paper\";\r\n\r\ninterface Props {\r\n  historial: { aula_id: number; nombre: string }[];\r\n  onSeleccionar: (id: number | null) => void;\r\n  error?: boolean;\r\n}\r\n\r\nexport const SelectMateria = ({ historial, onSeleccionar, error }: Props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [selected, setSelected] = useState<{\r\n    label: string;\r\n    id: number | null;\r\n  }>({\r\n    label: \"Elegir materia\",\r\n    id: null,\r\n  });\r\n\r\n  const openMenu = () => setVisible(true);\r\n  const closeMenu = () => setVisible(false);\r\n\r\n  const handleSelect = (nombre: string, id: number | null) => {\r\n    setSelected({ label: nombre, id });\r\n    closeMenu();\r\n    onSeleccionar(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // reiniciar selección si historial cambia\r\n    setSelected({ label: \"Elegir materia\", id: 0 });\r\n  }, [historial]);\r\n\r\n  return (\r\n    <View>\r\n      <Menu\r\n        visible={visible}\r\n        onDismiss={closeMenu}\r\n        anchor={\r\n          <Button\r\n            mode={error ? \"contained-tonal\" : \"outlined\"}\r\n            onPress={openMenu}\r\n            icon=\"chevron-down\"\r\n            contentStyle={{\r\n              flexDirection: \"row-reverse\", // Ícono a la derecha\r\n              justifyContent: \"space-between\",\r\n            }}\r\n            style={{\r\n              borderColor: error ? \"#B00020\" : undefined,\r\n            }}\r\n          >\r\n            {selected.label}\r\n          </Button>\r\n        }\r\n      >\r\n        <Menu.Item\r\n          key=\"default-item\"\r\n          onPress={() => handleSelect(\"Elegir materia\", null)}\r\n          title=\"Elegir materia\"\r\n        />\r\n        <Divider />\r\n        {historial.map((item) => (\r\n          <Menu.Item\r\n            key={item.aula_id}\r\n            onPress={() => handleSelect(item.nombre, item.aula_id)}\r\n            title={item.nombre}\r\n          />\r\n        ))}\r\n      </Menu>\r\n\r\n      {error && (\r\n        <HelperText type=\"error\" visible={error}>\r\n          Debes seleccionar una materia.\r\n        </HelperText>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n","import { useMemo, useState } from \"react\";\r\nimport { View, ScrollView, Alert } from \"react-native\";\r\nimport {\r\n  Modal,\r\n  Portal,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  RadioButton,\r\n  useTheme,\r\n  SegmentedButtons,\r\n  Card,\r\n  Divider,\r\n  Snackbar,\r\n} from \"react-native-paper\";\r\nimport { User } from \"../types/UserType\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport {\r\n  Alarcoin,\r\n  AlarcoinAulaAlumnoType,\r\n  AlarcoinCreateType,\r\n  AlarcoinHistorialType,\r\n} from \"../types/AlarcoinType\";\r\nimport { SelectMateria } from \"./DropDonw\";\r\nimport { crearAlarcoin } from \"../api/alarcoin\";\r\nimport { useAuth } from \"../context/authContent\";\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  onDismiss: () => void;\r\n  user: User | null;\r\n  is_teacher: boolean | undefined;\r\n  selectedAula?: AlarcoinAulaAlumnoType;\r\n}\r\n\r\nconst AlarcoinModal = ({\r\n  visible,\r\n  onDismiss,\r\n  user,\r\n  is_teacher,\r\n  selectedAula,\r\n}: Props) => {\r\n  if (!user) return null;\r\n  const { colors } = useTheme();\r\n  const [tab, setTab] = useState(is_teacher ? \"asignar\" : \"historial\");\r\n  const [cantidad, setCantidad] = useState(\"0\");\r\n  const [concepto, setConcepto] = useState(\"\");\r\n  const [tipo, setTipo] = useState<string>(\"1\");\r\n  const [materiaSeleccionada, setMateriaSeleccionada] = useState<number | null>(\r\n    null\r\n  );\r\n  const [visibleSnack, setVisibleSnack] = useState(false);\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  const { alarcoins, loadAlarcoins } = useAppData();\r\n  const { token } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const historialPorAula = useMemo(() => {\r\n    if (!user) return [];\r\n\r\n    if (is_teacher) {\r\n      // PROFESOR: busca en todas las aulas\r\n      return alarcoins\r\n        .map((aula) => {\r\n          const alumno = aula.alumnos.find((a) => a.id === user.id);\r\n          if (alumno) {\r\n            return {\r\n              aula_id: aula.aula_id,\r\n              nombre: aula.nombre,\r\n              alarcoins: alumno.alarcoins || [],\r\n            };\r\n          }\r\n          return null;\r\n        })\r\n        .filter(\r\n          (\r\n            aula\r\n          ): aula is {\r\n            aula_id: number;\r\n            nombre: string;\r\n            alarcoins: AlarcoinHistorialType[];\r\n          } => aula !== null\r\n        );\r\n    } else if (selectedAula) {\r\n      return [\r\n        {\r\n          aula_id: selectedAula.id,\r\n          nombre: selectedAula.nombre,\r\n          alarcoins: selectedAula.alarcoins,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return [];\r\n  }, [alarcoins, user, is_teacher, selectedAula]);\r\n\r\n  const handleGuardar = async () => {\r\n    if (!materiaSeleccionada || materiaSeleccionada === 0) {\r\n      setMensaje(\"Debes seleccionar una materia válida.\");\r\n      setVisibleSnack(true);\r\n      return;\r\n    }\r\n\r\n    if (!concepto.trim()) {\r\n      Alert.alert(\"Atención\", \"Debes ingresar un concepto.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    const alarcoin: AlarcoinCreateType = {\r\n      aula_id: materiaSeleccionada,\r\n      alumno_id: user.id,\r\n      detalle: concepto,\r\n      suma: Number(tipo),\r\n      cantidad: Number(cantidad),\r\n    };\r\n    try {\r\n      await crearAlarcoin(token, alarcoin);\r\n      setCantidad(\"0\");\r\n      setConcepto(\"\");\r\n      setTipo(\"true\");\r\n      setMateriaSeleccionada(null);\r\n      onDismiss();\r\n      loadAlarcoins();\r\n      setMensaje(\"Alarcoin guardado correctamente.\");\r\n      setVisibleSnack(true);\r\n    } catch (error) {\r\n      setMensaje(\"error al guardar\");\r\n      setVisibleSnack(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <Snackbar\r\n        visible={visibleSnack && mensaje !== \"\"}\r\n        duration={1000}\r\n        onDismiss={() => {\r\n          setVisibleSnack(false);\r\n          setMensaje(\"\");\r\n        }}\r\n        action={{\r\n          label: \"Dale\",\r\n          onPress: () => setVisibleSnack(false),\r\n        }}\r\n      >\r\n        {mensaje}\r\n      </Snackbar>\r\n      <Modal\r\n        visible={visible}\r\n        onDismiss={onDismiss}\r\n        contentContainerStyle={{\r\n          backgroundColor: colors.surface,\r\n          padding: 10,\r\n          margin: 10,\r\n          borderRadius: 12,\r\n          width: \"90%\",\r\n          maxWidth: 500,\r\n          justifyContent: \"flex-start\",\r\n          alignSelf: \"center\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            flexWrap: \"nowrap\",\r\n            overflow: \"hidden\",\r\n            marginBottom: 8,\r\n          }}\r\n        >\r\n          <SegmentedButtons\r\n            value={tab}\r\n            onValueChange={setTab}\r\n            buttons={[\r\n              { value: \"historial\", label: \"Historial\" },\r\n              ...(is_teacher ? [{ value: \"asignar\", label: \"Asignar\" }] : []),\r\n            ]}\r\n            style={{\r\n              flex: 1,\r\n              minWidth: 0,\r\n              maxWidth: \"100%\",\r\n              borderRadius: 12,\r\n              overflow: \"hidden\",\r\n            }}\r\n            contentStyle={{\r\n              flexDirection: \"row\",\r\n              flexWrap: \"nowrap\",\r\n              minWidth: 0,\r\n              maxWidth: \"100%\",\r\n            }}\r\n          />\r\n        </View>\r\n        {tab === \"asignar\" && is_teacher && (\r\n          <Card mode=\"contained\" style={{ marginTop: 10, padding: 5 }}>\r\n            <Text variant=\"titleMedium\" style={{ marginBottom: 5 }}>\r\n              {`Gestionar Alarcoins de: ${user.nombre} ${user.apellido}`}\r\n            </Text>\r\n\r\n            <SelectMateria\r\n              historial={historialPorAula}\r\n              onSeleccionar={setMateriaSeleccionada}\r\n            />\r\n\r\n            <Divider style={{ marginVertical: 16 }} />\r\n\r\n            <Text variant=\"labelLarge\" style={{ marginBottom: 4 }}>\r\n              Cantidad\r\n            </Text>\r\n            <View\r\n              style={{ flexDirection: \"row\", alignItems: \"center\", gap: 8 }}\r\n            >\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={() =>\r\n                  setCantidad((prev) => String(Math.max(0, Number(prev) - 1)))\r\n                }\r\n              >\r\n                -\r\n              </Button>\r\n\r\n              <TextInput\r\n                value={cantidad}\r\n                onChangeText={setCantidad}\r\n                keyboardType=\"numeric\"\r\n                mode=\"outlined\"\r\n                style={{ flex: 1 }}\r\n              />\r\n\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={() => setCantidad((prev) => String(Number(prev) + 1))}\r\n              >\r\n                +\r\n              </Button>\r\n            </View>\r\n\r\n            <TextInput\r\n              label=\"Concepto\"\r\n              mode=\"outlined\"\r\n              value={concepto}\r\n              onChangeText={setConcepto}\r\n              style={{ marginTop: 16 }}\r\n            />\r\n\r\n            <Text variant=\"labelLarge\" style={{ marginTop: 16 }}>\r\n              Tipo de operación\r\n            </Text>\r\n            <RadioButton.Group\r\n              onValueChange={(value) => setTipo(value)}\r\n              value={tipo}\r\n            >\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                <RadioButton.Item label=\"Sumar\" value=\"1\" />\r\n                <RadioButton.Item label=\"Restar\" value=\"0\" />\r\n              </View>\r\n            </RadioButton.Group>\r\n\r\n            <Divider style={{ marginVertical: 16 }} />\r\n\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}>\r\n              <Button mode=\"contained\" onPress={handleGuardar}>\r\n                {loading ? \"Guardando...\" : \"Guardar\"}\r\n              </Button>\r\n            </View>\r\n          </Card>\r\n        )}\r\n        {tab === \"historial\" && (\r\n          <View style={{ marginTop: 12 }}>\r\n            <Text variant=\"titleMedium\" style={{ marginBottom: 8 }}>\r\n              Historial de Alarcoins\r\n            </Text>\r\n            {historialPorAula.every((item) => item.alarcoins.length === 0) ? (\r\n              <Text style={{ marginTop: 8 }}>No hay historial aún</Text>\r\n            ) : (\r\n              <ScrollView>\r\n                {historialPorAula\r\n                  .filter((aula) => aula.alarcoins.length > 0)\r\n                  .map((aula) => {\r\n                    // Calcular el total de alarcoins para el aula\r\n                    const totalAlarcoins = aula.alarcoins.reduce(\r\n                      (acc, entry) =>\r\n                        acc +\r\n                        (entry.suma > 0 ? entry.cantidad : -entry.cantidad),\r\n                      0\r\n                    );\r\n                    return (\r\n                      <Card key={aula.aula_id} style={{ marginBottom: 16 }}>\r\n                        <Card.Title\r\n                          title={\r\n                            <View\r\n                              style={{\r\n                                flexDirection: \"row\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                            >\r\n                              <Text>{aula.nombre}</Text>\r\n                              <Text\r\n                                style={{\r\n                                  marginLeft: 8,\r\n                                  fontWeight: \"bold\",\r\n                                  color: totalAlarcoins >= 0 ? \"green\" : \"red\",\r\n                                }}\r\n                              >\r\n                                {`(${totalAlarcoins})`}\r\n                              </Text>\r\n                            </View>\r\n                          }\r\n                        />\r\n                        <Card.Content>\r\n                          {aula.alarcoins.map((entry, index) => (\r\n                            <View key={index}>\r\n                              <View\r\n                                style={{\r\n                                  flexDirection: \"row\",\r\n                                  justifyContent: \"space-between\",\r\n                                  marginVertical: 4,\r\n                                }}\r\n                              >\r\n                                <Text>\r\n                                  {new Date(entry.fecha).toLocaleDateString()}\r\n                                </Text>\r\n                                <Text>{entry.detalle}</Text>\r\n                                <Text\r\n                                  style={{\r\n                                    color: entry.suma > 0 ? \"green\" : \"red\",\r\n                                  }}\r\n                                >\r\n                                  {entry.suma > 0\r\n                                    ? `+${entry.cantidad}`\r\n                                    : `-${entry.cantidad}`}\r\n                                </Text>\r\n                              </View>\r\n                              <Divider />\r\n                            </View>\r\n                          ))}\r\n                        </Card.Content>\r\n                      </Card>\r\n                    );\r\n                  })}\r\n              </ScrollView>\r\n            )}\r\n          </View>\r\n        )}\r\n      </Modal>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nexport default AlarcoinModal;\r\n\r\n//implementar a futuro\r\n\r\n// import React, { useMemo, useState } from \"react\";\r\n// import { Modal, Portal, Card, Text, Button, Divider } from \"react-native-paper\";\r\n// import { View, ScrollView, StyleSheet, Dimensions } from \"react-native\";\r\n// import { TabView, SceneMap, TabBar } from \"react-native-tab-view\";\r\n// import { User } from \"../types/UserType\";\r\n// import { AlarcoinAulaAlumnoType } from \"../types/AlarcoinType\";\r\n// import { useAppData } from \"../context/appDataContext\";\r\n\r\n// interface Props {\r\n//   visible: boolean;\r\n//   onDismiss: () => void;\r\n//   user: User | null;\r\n//   is_teacher: boolean | undefined;\r\n//   selectedAula?: AlarcoinAulaAlumnoType;\r\n// }\r\n\r\n// const AlarcoinModal: React.FC<Props> = ({\r\n//   visible,\r\n//   onDismiss,\r\n//   user,\r\n//   is_teacher,\r\n//   selectedAula,\r\n// }) => {\r\n//   const layout = Dimensions.get(\"window\");\r\n//   const [index, setIndex] = useState(0);\r\n\r\n//   const [routes] = useState([\r\n//     { key: \"historial\", title: \"Historial\" },\r\n//     ...(is_teacher ? [{ key: \"asignar\", title: \"Asignar\" }] : []),\r\n//   ]);\r\n\r\n//   const { alarcoins } = useAppData();\r\n\r\n//   const historial = useMemo(() => {\r\n//     if (!selectedAula || !user) return [];\r\n//     return alarcoins?.alarcoins ?? [];\r\n//   }, [selectedAula, user]);\r\n\r\n//   const renderHistorial = () => (\r\n//     <ScrollView contentContainerStyle={styles.scroll}>\r\n//       <Card>\r\n//         <Card.Title title={selectedAula?.nombre || \"Aula\"} />\r\n//         <Card.Content>\r\n//           {historial.length === 0 ? (\r\n//             <Text>No hay movimientos aún.</Text>\r\n//           ) : (\r\n//             historial.map((entry, index) => (\r\n//               <View key={index} style={styles.entry}>\r\n//                 <Text>{new Date(entry.fecha).toLocaleDateString()}</Text>\r\n//                 <Text>{entry.motivo}</Text>\r\n//                 <Text style={{ color: entry.cantidad > 0 ? \"green\" : \"red\" }}>\r\n//                   {entry.cantidad > 0 ? `+${entry.cantidad}` : entry.cantidad}\r\n//                 </Text>\r\n//                 <Divider style={{ marginVertical: 4 }} />\r\n//               </View>\r\n//             ))\r\n//           )}\r\n//         </Card.Content>\r\n//       </Card>\r\n//     </ScrollView>\r\n//   );\r\n\r\n//   const renderAsignar = () => (\r\n//     <View style={styles.asignar}>\r\n//       <Text style={{ marginBottom: 8 }}>\r\n//         Aquí podrías colocar el formulario de asignación:\r\n//       </Text>\r\n//       <Button mode=\"contained\" onPress={() => {}}>\r\n//         Asignar alarcoins\r\n//       </Button>\r\n//     </View>\r\n//   );\r\n\r\n//   const renderScene = SceneMap({\r\n//     historial: renderHistorial,\r\n//     asignar: renderAsignar,\r\n//   });\r\n\r\n//   return (\r\n//     <Portal>\r\n//       <Modal\r\n//         visible={visible}\r\n//         onDismiss={onDismiss}\r\n//         contentContainerStyle={styles.modal}\r\n//       >\r\n//         <TabView\r\n//           navigationState={{ index, routes }}\r\n//           renderScene={renderScene}\r\n//           onIndexChange={setIndex}\r\n//           initialLayout={{ width: layout.width }}\r\n//           renderTabBar={(props) => (\r\n//             <TabBar\r\n//               {...props}\r\n//               indicatorStyle={{ backgroundColor: \"white\" }}\r\n//               style={{ backgroundColor: \"#6200ee\" }}\r\n//             />\r\n//           )}\r\n//         />\r\n//       </Modal>\r\n//     </Portal>\r\n//   );\r\n// };\r\n\r\n// export default AlarcoinModal;\r\n\r\n// const styles = StyleSheet.create({\r\n//   modal: {\r\n//     margin: 16,\r\n//     backgroundColor: \"white\",\r\n//     borderRadius: 12,\r\n//     padding: 16,\r\n//     maxHeight: \"90%\",\r\n//   },\r\n//   scroll: {\r\n//     paddingBottom: 24,\r\n//   },\r\n//   entry: {\r\n//     marginVertical: 4,\r\n//   },\r\n//   asignar: {\r\n//     padding: 16,\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//   },\r\n// });\r\n","import React from \"react\";\r\nimport { View, Image } from \"react-native\";\r\nimport { ActivityIndicator, Text, Button } from \"react-native-paper\";\r\n\r\ntype Props = {\r\n  isLoading: boolean;\r\n  hasError: boolean;\r\n  reLoad: () => void;\r\n  children: React.ReactNode;\r\n  errorMessage?: string;\r\n};\r\n\r\nexport default function LoadError({\r\n  isLoading,\r\n  hasError,\r\n  reLoad,\r\n  children,\r\n  errorMessage = \"Ocurrió un error al cargar los datos\",\r\n}: Props) {\r\n  if (isLoading) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color=\"violet\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (hasError) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <Text\r\n          variant=\"titleLarge\"\r\n          style={{ marginBottom: 12, color: \"#9333EA\", textAlign: \"center\" }}\r\n        >\r\n          {errorMessage}\r\n        </Text>\r\n        <Image\r\n          source={require(\"../../assets/errorImagen.png\")}\r\n          style={{\r\n            width: 200,\r\n            height: 200,\r\n            marginBottom: 20,\r\n            borderRadius: 100,\r\n          }}\r\n          resizeMode=\"contain\"\r\n        />\r\n        <Button mode=\"contained\" onPress={reLoad}>\r\n          Reintentar\r\n        </Button>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return <>{children}</>;\r\n}\r\n","import { Card, Text, useTheme } from \"react-native-paper\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { MateriasSimpleType } from \"../types/AulaType\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\ntype Props = {\r\n  materia: MateriasSimpleType;\r\n  onPress?: (materia: MateriasSimpleType) => void;\r\n  porcentaje?: number;\r\n  is_alumno: boolean;\r\n  alarcoin?: number;\r\n};\r\n\r\nexport default function MateriasCard({\r\n  materia,\r\n  onPress,\r\n  porcentaje = 0,\r\n  is_alumno,\r\n  alarcoin,\r\n}: Props) {\r\n  const { colors } = useTheme();\r\n  const getColorFromPorcentaje = (porcentaje: number) => {\r\n    if (porcentaje === 0) return [\"transparent\", \"transparent\"];\r\n    if (porcentaje < 60) return [colors.background, colors.asistenciaMala]; // rojo\r\n    if (porcentaje < 79) return [colors.background, colors.asistenciaMedia]; // naranja\r\n\r\n    return [colors.background, colors.asistenciaBuena]; // verde\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      style={[styles.card]}\r\n      mode=\"outlined\"\r\n      onPress={onPress ? () => onPress(materia) : undefined}\r\n    >\r\n      <LinearGradient\r\n        colors={\r\n          is_alumno && !alarcoin\r\n            ? getColorFromPorcentaje(porcentaje)\r\n            : [\"#trnasparent\", \"transparent\"]\r\n        }\r\n        start={{ x: 0.4, y: 0.3 }}\r\n        end={{ x: 1, y: 1 }}\r\n        style={{ borderRadius: 8, padding: 10 }}\r\n      >\r\n        <Card.Content style={styles.cardContent}>\r\n          <View style={styles.infoLeft}>\r\n            <Text variant=\"titleMedium\">{materia.nombre}</Text>\r\n            <View style={styles.scheduleRow}>\r\n              <Text variant=\"bodySmall\">\r\n                {`${materia.ano}° ${materia.division}° - ${materia.especialidad}`}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.infoRight}>\r\n            <Text variant=\"labelSmall\">\r\n              {is_alumno && alarcoin == null\r\n                ? \"Asistencias\"\r\n                : alarcoin != null\r\n                ? \"Alarcoins\"\r\n                : \" Clases dictadas\"}\r\n            </Text>\r\n            <Text variant=\"titleMedium\" style={styles.classCount}>\r\n              {is_alumno && alarcoin == null\r\n                ? `${porcentaje}%`\r\n                : alarcoin != null\r\n                ? alarcoin\r\n                : materia.cantidad_clases}\r\n            </Text>\r\n          </View>\r\n        </Card.Content>\r\n      </LinearGradient>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    marginBottom: 16,\r\n    width: \"100%\",\r\n    marginHorizontal: 10,\r\n    maxWidth: 450,\r\n    borderRadius: 8,\r\n    elevation: 3,\r\n    alignSelf: \"center\",\r\n  },\r\n  cardContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  infoLeft: {\r\n    flex: 1,\r\n    gap: 4,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    gap: 6,\r\n  },\r\n\r\n  infoRight: {\r\n    alignItems: \"flex-end\",\r\n  },\r\n\r\n  classCount: {\r\n    marginTop: 2,\r\n    fontWeight: \"600\",\r\n  },\r\n});\r\n","import { Layout } from \"../layout/layout\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ScrollView, View, Pressable, useWindowDimensions } from \"react-native\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport AvatarCard from \"../components/avatarCard\";\r\nimport AlarcoinModal from \"../components/AlarcoinModal\";\r\nimport { User } from \"../types/UserType\";\r\nimport LoadError from \"../components/LoadError\";\r\nimport MateriasCard from \"../components/materiaCard\";\r\nimport { AlarcoinAulaAlumnoType } from \"../types/AlarcoinType\";\r\n\r\nconst Alarcoin = () => {\r\n  const { user } = useAuth();\r\n  const { alumnosMap, loadAlarcoins, alarcoins, alarcoinsError, aulas } =\r\n    useAppData();\r\n  const [selectedAlumno, setSelectedAlumno] = useState<User | null>(null);\r\n  const [selectedAula, setSelectedAula] = useState<\r\n    AlarcoinAulaAlumnoType | undefined\r\n  >();\r\n  const [visible, setVisible] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { width } = useWindowDimensions();\r\n\r\n  const fetchData = () => {\r\n    if (alarcoins) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    loadAlarcoins();\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const getNumColumns = () => {\r\n    if (width >= 1000) return 3;\r\n    if (width >= 600) return 2;\r\n    return 1;\r\n  };\r\n\r\n  const numColumns = getNumColumns();\r\n\r\n  const handleOpenModal = ({\r\n    item,\r\n  }: {\r\n    item: User | AlarcoinAulaAlumnoType;\r\n  }) => {\r\n    if (user?.is_teacher) {\r\n      setSelectedAlumno(item);\r\n    } else {\r\n      setSelectedAlumno(user);\r\n      setSelectedAula(item);\r\n    }\r\n    setVisible(true);\r\n  };\r\n\r\n  const renderItem = (item: any) => {\r\n    if (!user?.is_teacher) {\r\n      const materia = aulas.find((a) => a.id === item.aula_id);\r\n      if (!materia) return null;\r\n\r\n      const total = item.alarcoins.reduce(\r\n        (acc, a) => acc + (a.suma ? a.cantidad : -a.cantidad),\r\n        0\r\n      );\r\n\r\n      return (\r\n        <Pressable\r\n          key={item.aula_id}\r\n          style={({ pressed }) => [{ flex: 1, opacity: pressed ? 0.5 : 1 }]}\r\n          onPress={() => handleOpenModal({ item })}\r\n        >\r\n          <MateriasCard materia={materia} is_alumno={true} alarcoin={total} />\r\n        </Pressable>\r\n      );\r\n    } else {\r\n      return (\r\n        <Pressable\r\n          key={item.id}\r\n          style={({ pressed }) => [{ flex: 1, opacity: pressed ? 0.5 : 1 }]}\r\n          onPress={() => handleOpenModal({ item })}\r\n        >\r\n          <AvatarCard\r\n            user={item}\r\n            loading={false}\r\n            isalarcoins={true}\r\n            alarcoins={item.alarcoin}\r\n          />\r\n        </Pressable>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const dataList: User[] | AlarcoinAulaAlumnoType[] = user?.is_teacher\r\n    ? Object.values(alumnosMap)\r\n    : alarcoins ?? [];\r\n\r\n  // Agrupar los items en filas según numColumns\r\n  const rows = [];\r\n  for (let i = 0; i < dataList.length; i += numColumns) {\r\n    rows.push(dataList.slice(i, i + numColumns));\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <LoadError\r\n        isLoading={isLoading}\r\n        hasError={alarcoinsError}\r\n        errorMessage=\"Error al cargar los Alarcoins\"\r\n        reLoad={fetchData}\r\n      >\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            paddingBottom: 32,\r\n            gap: 12,\r\n            paddingHorizontal: 10,\r\n            marginHorizontal: 5,\r\n          }}\r\n        >\r\n          {rows.map((row, rowIndex) => (\r\n            <View\r\n              key={rowIndex}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: numColumns > 1 ? \"center\" : \"flex-start\",\r\n                marginBottom: 12,\r\n                gap: 12,\r\n              }}\r\n            >\r\n              {row.map((item) => (\r\n                <View\r\n                  key={user?.is_teacher ? item.id : item.aula_id}\r\n                  style={{ flex: 1 }}\r\n                >\r\n                  {renderItem(item)}\r\n                </View>\r\n              ))}\r\n              {/* Si la última fila no está completa, rellenar con Views vacíos */}\r\n              {row.length < numColumns &&\r\n                Array.from({ length: numColumns - row.length }).map(\r\n                  (_, idx) => <View key={`empty-${idx}`} style={{ flex: 1 }} />\r\n                )}\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n\r\n        <AlarcoinModal\r\n          visible={visible}\r\n          onDismiss={handleCloseModal}\r\n          user={selectedAlumno}\r\n          is_teacher={user?.is_teacher}\r\n          selectedAula={selectedAula}\r\n        />\r\n      </LoadError>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Alarcoin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport {\r\n  TextInput,\r\n  Button,\r\n  Text,\r\n  Card,\r\n  ActivityIndicator,\r\n} from \"react-native-paper\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport { updateUser } from \"../api/updateUser\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { saveUser, getFromStorage } from \"../utils/storage\";\r\n\r\nconst ChangePassword = () => {\r\n  const { user, setUser, token } = useAuth();\r\n  const navigator = useNavigation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [apiError, setApiError] = useState<string | null>(null);\r\n  const [validToken, setValidToken] = useState<String | null>(token);\r\n\r\n  useEffect(() => {\r\n    if (validToken) return;\r\n    const tokenToStorage = getFromStorage(\"token\");\r\n    setValidToken(tokenToStorage);\r\n  });\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    newPassword: Yup.string()\r\n      .min(6, \"La contraseña debe tener al menos 6 caracteres\")\r\n      .matches(\r\n        /[A-Z]/,\r\n        \"La contraseña debe contener al menos una letra mayúscula\"\r\n      )\r\n      .required(\"Campo obligatorio\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"newPassword\")], \"Las contraseñas no coinciden\")\r\n      .required(\"Campo obligatorio\"),\r\n  });\r\n\r\n  const handleSubmit = async (values: {\r\n    newPassword: string;\r\n    confirmPassword: string;\r\n  }) => {\r\n    setLoading(true);\r\n    setApiError(null);\r\n    try {\r\n      const updatedUser = await updateUser(\r\n        {\r\n          password: values.newPassword,\r\n          cambiarContrasena: false,\r\n        },\r\n        token // No se manda token si es el primer inicio\r\n      );\r\n\r\n      setUser({ ...updatedUser });\r\n      await saveUser(updatedUser);\r\n      navigator.navigate(\"Main\" as never);\r\n    } catch (error: any) {\r\n      setApiError(error.message || \"Error al cambiar la contraseña\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.container}>\r\n        <Card style={styles.card}>\r\n          <Card.Title\r\n            title=\"Cambia tu contraseña\"\r\n            subtitle=\"Por seguridad, debes actualizarla\"\r\n          />\r\n          <Card.Content>\r\n            <Formik\r\n              initialValues={{ newPassword: \"\", confirmPassword: \"\" }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {({\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                values,\r\n                errors,\r\n                touched,\r\n              }) => (\r\n                <View>\r\n                  <TextInput\r\n                    label=\"Nueva contraseña\"\r\n                    secureTextEntry\r\n                    value={values.newPassword}\r\n                    onChangeText={handleChange(\"newPassword\")}\r\n                    onBlur={handleBlur(\"newPassword\")}\r\n                    style={styles.input}\r\n                  />\r\n                  {touched.newPassword && errors.newPassword && (\r\n                    <Text style={styles.error}>{errors.newPassword}</Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    label=\"Repetir contraseña\"\r\n                    secureTextEntry\r\n                    value={values.confirmPassword}\r\n                    onChangeText={handleChange(\"confirmPassword\")}\r\n                    onBlur={handleBlur(\"confirmPassword\")}\r\n                    style={styles.input}\r\n                  />\r\n                  {touched.confirmPassword && errors.confirmPassword && (\r\n                    <Text style={styles.error}>{errors.confirmPassword}</Text>\r\n                  )}\r\n\r\n                  {apiError && <Text style={styles.error}>{apiError}</Text>}\r\n\r\n                  <Button\r\n                    mode=\"contained\"\r\n                    onPress={handleSubmit}\r\n                    style={styles.button}\r\n                    disabled={loading}\r\n                    loading={loading}\r\n                  >\r\n                    Guardar contraseña\r\n                  </Button>\r\n                </View>\r\n              )}\r\n            </Formik>\r\n          </Card.Content>\r\n        </Card>\r\n      </View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n    justifyContent: \"center\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n  },\r\n  input: {\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    marginBottom: 10,\r\n  },\r\n});\r\n","// services/userService.ts\r\nimport { User } from \"../types/UserType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport interface UpdateUserData {\r\n  password?: string;\r\n  name?: string;\r\n  email?: string;\r\n  cambiarContrasena: boolean;\r\n}\r\n\r\nexport async function updateUser(\r\n  data: UpdateUserData,\r\n  token: string | null\r\n): Promise<User> {\r\n  const response = await fetch(`${urlBase}/users/me`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al actualizar el usuario\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { Layout } from \"../layout/layout\";\r\nimport { ScrollView, StyleSheet, View } from \"react-native\";\r\nimport { Text } from \"react-native-paper\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport MateriasCard from \"../components/materiaCard\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport { RootStack } from \"../types/route\";\r\nimport { MateriasSimpleType } from \"../types/AulaType\";\r\nimport { useWindowDimensions } from \"react-native\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AsistenciaAlumnoType, AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { getAsistenciasPorClase } from \"../api/asistenciasClases\";\r\ntype Props = NativeStackNavigationProp<RootStack, \"MateriasStack\">;\r\n\r\nconst Materias = () => {\r\n  const { width } = useWindowDimensions();\r\n  const numColums = width >= 900 ? 2 : 1;\r\n  const { user, token } = useAuth();\r\n  const navigation = useNavigation<Props>();\r\n  const { aulas } = useAppData();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [asistencias, setAsistencias] = useState<AsistenciaAlumnoType[]>([]);\r\n  useEffect(() => {\r\n    const fetchAsistencias = async (token: string) => {\r\n      const data = await getAsistenciasPorClase(token);\r\n      setAsistencias(data);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    if (!user?.is_teacher) fetchAsistencias(token);\r\n  }, [isLoading]);\r\n\r\n  const handlerNavigation = (\r\n    item: MateriasSimpleType,\r\n    asistencia: AsistenciaType[]\r\n  ) => {\r\n    navigation.navigate(\"MateriasStack\", {\r\n      screen: \"DetalleMateria\",\r\n      params: { materia: item, asistencia: asistencia },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.header}>\r\n        <Text variant=\"titleLarge\" style={styles.title}>\r\n          Mis Materias\r\n        </Text>\r\n        <Text variant=\"bodyMedium\" style={styles.subtitle}>\r\n          {user?.is_teacher\r\n            ? \"Lista de materias que dictas\"\r\n            : \"Lista de materias que cursas\"}\r\n        </Text>\r\n      </View>\r\n\r\n      <ScrollView\r\n        contentContainerStyle={{\r\n          paddingBottom: 32,\r\n          gap: 12,\r\n          flexDirection: numColums > 1 ? \"row\" : \"column\",\r\n          flexWrap: numColums > 1 ? \"wrap\" : \"nowrap\",\r\n          justifyContent: numColums > 1 ? \"center\" : \"flex-start\",\r\n        }}\r\n      >\r\n        {aulas.map((item) => {\r\n          const asistenciaAula = asistencias.find((a) => a.aula_id === item.id);\r\n          const porcentaje = asistenciaAula?.porcentaje_asistencia;\r\n          const asistenciaAulaClases = asistencias.find(\r\n            (a) => a.aula_id === item.id\r\n          );\r\n          const asistenciasA = asistenciaAulaClases?.asistencias || [];\r\n          return (\r\n            <View\r\n              key={item.id}\r\n              style={[\r\n                styles.card,\r\n                numColums > 1 && { width: width / 2 - 24, marginHorizontal: 6 },\r\n              ]}\r\n            >\r\n              <MateriasCard\r\n                materia={item}\r\n                onPress={() => handlerNavigation(item, asistenciasA)}\r\n                porcentaje={porcentaje}\r\n                is_alumno={!user?.is_teacher}\r\n                alarcoin={undefined}\r\n              />\r\n            </View>\r\n          );\r\n        })}\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Materias;\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  header: {\r\n    marginBottom: 24,\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  subtitle: {\r\n    marginTop: 4,\r\n    color: \"#6b7280\",\r\n  },\r\n  card: {\r\n    marginBottom: 16,\r\n  },\r\n  cardContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  infoLeft: {\r\n    flex: 1,\r\n    gap: 4,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    gap: 6,\r\n  },\r\n  scheduleText: {\r\n    color: \"#6b7280\",\r\n  },\r\n  infoRight: {\r\n    alignItems: \"flex-end\",\r\n  },\r\n  label: {\r\n    color: \"#6b7280\",\r\n  },\r\n  classCount: {\r\n    marginTop: 2,\r\n    fontWeight: \"600\",\r\n  },\r\n});\r\n","import { AsistenciaAlumnoType, AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport async function AsistenciasClase(\r\n  clase_id: number,\r\n  token: string | null\r\n): Promise<AsistenciaType[]> {\r\n  const response = await fetch(\r\n    `${urlBase}/asistencias/asistencias-por-clase/${clase_id}`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function getAsistenciasPorClase(\r\n  token: string | null\r\n): Promise<AsistenciaAlumnoType[]> {\r\n  const response = await fetch(`${urlBase}/asistencias/mis-asistencias`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Pressable,\r\n  useWindowDimensions,\r\n  Alert,\r\n} from \"react-native\";\r\nimport {\r\n  Text,\r\n  Button,\r\n  RadioButton,\r\n  TextInput,\r\n  ActivityIndicator,\r\n  Portal,\r\n  Modal,\r\n  useTheme,\r\n  Card,\r\n} from \"react-native-paper\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { AsistenciasClase } from \"../api/asistenciasClases\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { setClaseAsistencia } from \"../api/setClaseAsistencia\";\r\n\r\ntype Props = {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  clase: ClaseType;\r\n};\r\n\r\ntype AsistenciaEdit = {\r\n  alumno_id: number;\r\n  presente: number;\r\n  justificado?: string;\r\n};\r\n\r\nexport default function ModalAsistencia({ visible, onClose, clase }: Props) {\r\n  const { token } = useAuth();\r\n  const { alumnosMap, aulas } = useAppData();\r\n  const [asistencias, setAsistencias] = useState<AsistenciaType[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [asistenciasEditadas, setAsistenciasEditadas] = useState<\r\n    AsistenciaEdit[]\r\n  >([]);\r\n  const { colors } = useTheme();\r\n  const { width } = useWindowDimensions();\r\n\r\n  const isMobile = width < 600;\r\n  const columns = width >= 1000 ? 3 : width >= 700 ? 2 : 1;\r\n\r\n  const aula = aulas.find((a) => a.id === clase.aula_id);\r\n  const alumnos =\r\n    aula?.alumnoIds.map((id) => alumnosMap[id]).filter(Boolean) ?? [];\r\n\r\n  useEffect(() => {\r\n    if (!visible) return;\r\n\r\n    setIsLoading(true);\r\n    const getAsistencias = async () => {\r\n      try {\r\n        const data = await AsistenciasClase(clase.id, token);\r\n        setAsistencias(data);\r\n        if (data.length === 0) {\r\n          const todosPresentes: AsistenciaEdit[] = alumnos.map((alumno) => ({\r\n            alumno_id: alumno.id,\r\n            presente: 1,\r\n          }));\r\n          setAsistenciasEditadas(todosPresentes);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al obtener asistencias:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    getAsistencias();\r\n    setAsistenciasEditadas([]);\r\n  }, [visible, clase.id]);\r\n\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      setAsistencias([]);\r\n      setAsistenciasEditadas([]);\r\n    }\r\n  }, [visible]);\r\n\r\n  const handleChange = (alumno_id: number, presente: number) => {\r\n    setAsistenciasEditadas((prev) => {\r\n      const existente = prev.find((a) => a.alumno_id === alumno_id);\r\n      if (existente) {\r\n        return prev.map((a) =>\r\n          a.alumno_id === alumno_id ? { ...a, presente } : a\r\n        );\r\n      } else {\r\n        return [...prev, { alumno_id, presente }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleJustificacionChange = (\r\n    alumno_id: number,\r\n    justificado: string\r\n  ) => {\r\n    setAsistenciasEditadas((prev) => {\r\n      const existente = prev.find((a) => a.alumno_id === alumno_id);\r\n      if (existente) {\r\n        return prev.map((a) =>\r\n          a.alumno_id === alumno_id ? { ...a, justificado } : a\r\n        );\r\n      } else {\r\n        return [...prev, { alumno_id, presente: 2, justificado }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleGuardar = async () => {\r\n    try {\r\n      if (asistenciasEditadas.length === 0) {\r\n        Alert.alert(\"Sin cambios\", \"No se detectaron asistencias editadas.\");\r\n        return;\r\n      }\r\n\r\n      const payload = alumnos.map((alumno) => {\r\n        const editada = asistenciasEditadas.find(\r\n          (a) => a.alumno_id === alumno.id\r\n        );\r\n\r\n        return {\r\n          alumno_id: alumno.id,\r\n          presente: editada?.presente ?? 1,\r\n          justificado: editada?.justificado ?? \"no\",\r\n        };\r\n      });\r\n\r\n      console.log(\"Payload a enviar:\", payload);\r\n      await setClaseAsistencia(clase.id, token, payload);\r\n\r\n      Alert.alert(\r\n        \"Guardado\",\r\n        \"Las asistencias fueron actualizadas correctamente.\"\r\n      );\r\n      setAsistenciasEditadas([]);\r\n      onClose();\r\n    } catch (error: any) {\r\n      console.error(\"Error al guardar asistencias:\", error);\r\n      Alert.alert(\"Error\", error.message || \"Ocurrió un error al guardar.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <Modal\r\n        visible={visible}\r\n        onDismiss={onClose}\r\n        contentContainerStyle={[\r\n          styles.modalContainer,\r\n          { backgroundColor: colors.background },\r\n        ]}\r\n      >\r\n        <Text variant=\"titleMedium\" style={styles.headerTitle}>\r\n          Asistencia - {clase.tema}\r\n        </Text>\r\n\r\n        {isLoading ? (\r\n          <ActivityIndicator style={{ marginVertical: 20 }} />\r\n        ) : (\r\n          <ScrollView contentContainerStyle={styles.scroll}>\r\n            <View style={[styles.grid, { gap: 12 }]}>\r\n              {alumnos.map((alumno) => {\r\n                const asistenciaExistente = asistencias.find(\r\n                  (a) => a.alumno_id === alumno.id\r\n                );\r\n                const asistenciaEditada = asistenciasEditadas.find(\r\n                  (a) => a.alumno_id === alumno.id\r\n                );\r\n                const valuePresente =\r\n                  asistenciaEditada?.presente?.toString() ??\r\n                  asistenciaExistente?.presente?.toString() ??\r\n                  \"\";\r\n\r\n                const valueJustificado =\r\n                  asistenciaEditada?.justificado ??\r\n                  asistenciaExistente?.justificado ??\r\n                  \"\";\r\n\r\n                return (\r\n                  <View\r\n                    key={alumno.id}\r\n                    style={[\r\n                      styles.cardWrapper,\r\n                      { width: `${100 / columns - 4}%` },\r\n                    ]}\r\n                  >\r\n                    <Card mode=\"outlined\" style={styles.alumnoCard}>\r\n                      <Card.Content style={{ gap: 4, padding: 5 }}>\r\n                        <Text style={styles.nombreAlumno}>\r\n                          {alumno.nombre} {alumno.apellido}\r\n                        </Text>\r\n\r\n                        <RadioButton.Group\r\n                          onValueChange={(value) =>\r\n                            handleChange(alumno.id, parseInt(value))\r\n                          }\r\n                          value={valuePresente}\r\n                        >\r\n                          <View style={styles.radioRowFixed}>\r\n                            <RadioButton.Item\r\n                              label={isMobile ? \"P\" : \"Presente\"}\r\n                              value=\"1\"\r\n                              style={styles.radioItemFixed}\r\n                              labelStyle={\r\n                                isMobile\r\n                                  ? styles.radioLabelMobile\r\n                                  : styles.radioLabel\r\n                              }\r\n                            />\r\n                            <RadioButton.Item\r\n                              label={isMobile ? \"A\" : \"Ausente\"}\r\n                              value=\"2\"\r\n                              style={styles.radioItemFixed}\r\n                              labelStyle={\r\n                                isMobile\r\n                                  ? styles.radioLabelMobile\r\n                                  : styles.radioLabel\r\n                              }\r\n                            />\r\n                            <RadioButton.Item\r\n                              label={isMobile ? \"T\" : \"Tarde\"}\r\n                              value=\"3\"\r\n                              style={styles.radioItemFixed}\r\n                              labelStyle={\r\n                                isMobile\r\n                                  ? styles.radioLabelMobile\r\n                                  : styles.radioLabel\r\n                              }\r\n                            />\r\n                            <RadioButton.Item\r\n                              label={isMobile ? \"NC\" : \"No corresponde\"}\r\n                              value=\"0\"\r\n                              style={styles.radioItemFixed}\r\n                              labelStyle={\r\n                                isMobile\r\n                                  ? styles.radioLabelMobile\r\n                                  : styles.radioLabel\r\n                              }\r\n                            />\r\n                          </View>\r\n                        </RadioButton.Group>\r\n\r\n                        {/* <RadioButton.Group\r\n                          onValueChange={(value) =>\r\n                            handleChange(alumno.id, parseInt(value))\r\n                          }\r\n                          value={valuePresente}\r\n                        >\r\n                          <View style={styles.radioRow}>\r\n                            <RadioButton.Item\r\n                              label={isMobile ? \"P\" : \"Presente\"}\r\n                              value=\"1\"\r\n                            />\r\n                            <RadioButton.Item\r\n                              label={isMobile ? \"A\" : \"Ausente\"}\r\n                              value=\"2\"\r\n                            />\r\n                            <RadioButton.Item\r\n                              label={isMobile ? \"T\" : \"Tarde\"}\r\n                              value=\"3\"\r\n                            />\r\n                            <RadioButton.Item\r\n                              label={isMobile ? \"NC\" : \"No corresponde\"}\r\n                              value=\"0\"\r\n                            />\r\n                          </View>\r\n                        </RadioButton.Group> */}\r\n\r\n                        <TextInput\r\n                          label=\"Justificación\"\r\n                          mode=\"outlined\"\r\n                          value={valueJustificado}\r\n                          onChangeText={(text) =>\r\n                            handleJustificacionChange(alumno.id, text)\r\n                          }\r\n                        />\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </View>\r\n                );\r\n              })}\r\n            </View>\r\n          </ScrollView>\r\n        )}\r\n\r\n        <View style={styles.buttonRow}>\r\n          <Button mode=\"text\" onPress={onClose}>\r\n            Cancelar\r\n          </Button>\r\n          <Button mode=\"contained\" onPress={handleGuardar}>\r\n            Guardar\r\n          </Button>\r\n        </View>\r\n      </Modal>\r\n    </Portal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContainer: {\r\n    margin: 10,\r\n    padding: 20,\r\n    borderRadius: 12,\r\n    maxHeight: \"95%\",\r\n  },\r\n  scroll: {\r\n    paddingVertical: 5,\r\n  },\r\n  headerTitle: {\r\n    marginBottom: 12,\r\n  },\r\n  grid: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  cardWrapper: {\r\n    marginBottom: 16,\r\n  },\r\n  alumnoCard: {\r\n    borderRadius: 12,\r\n  },\r\n  nombreAlumno: {\r\n    fontWeight: \"600\",\r\n    marginBottom: 4,\r\n  },\r\n  radioRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  buttonRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    marginTop: 20,\r\n    gap: 10,\r\n  },\r\n  radioRowFixed: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"nowrap\", // importante para evitar múltiples filas\r\n    gap: 0,\r\n  },\r\n\r\n  radioItemFixed: {\r\n    flex: 1,\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n\r\n  radioLabel: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  radioLabelMobile: {\r\n    fontSize: 12,\r\n  },\r\n});\r\n","import { AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport async function setClaseAsistencia(\r\n  clase_id: number,\r\n  token: string | null,\r\n  asistencias: Omit<AsistenciaType, \"id\">[]\r\n): Promise<void> {\r\n  console.log(asistencias);\r\n  const response = await fetch(`${urlBase}/asistencias/masiva/${clase_id}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(asistencias),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al guardar asistencias\");\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Card, Text, Button, useTheme } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { ClaseType, MateriasSimpleType } from \"../types/AulaType\";\r\nimport ModalAsistencia from \"./ModalAsistencias\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\n\r\ntype Props = {\r\n  clase: ClaseType;\r\n  asistencia: AsistenciaType;\r\n};\r\n\r\nexport default function ClaseCard({ clase, asistencia }: Props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const { user } = useAuth();\r\n  const { colors } = useTheme();\r\n  const getColorFromAsistencia = (asistencia: number) => {\r\n    if (asistencia === 1) return [colors.background, colors.asistenciaBuena];\r\n    if (asistencia === 2) return [colors.background, colors.asistenciaMala]; //rojo\r\n    if (asistencia === 3) return [colors.background, colors.asistenciaMedia]; // naranja\r\n    return [\"transparent\", \"transparent\"];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card style={[styles.card]}>\r\n        <LinearGradient\r\n          colors={\r\n            !user?.is_teacher\r\n              ? getColorFromAsistencia(asistencia?.presente)\r\n              : [\"#trnasparent\", \"transparent\"]\r\n          }\r\n          start={{ x: 0.4, y: 0.3 }}\r\n          end={{ x: 1, y: 1 }}\r\n          style={{ borderRadius: 8, padding: 10 }}\r\n        >\r\n          <Card.Content>\r\n            <View style={styles.headerRow}>\r\n              <Text variant=\"titleSmall\" style={styles.cardTitle}>\r\n                {clase.tema}\r\n              </Text>\r\n\r\n              <View style={styles.iconButtons}>\r\n                {user?.is_teacher ? (\r\n                  <>\r\n                    <Ionicons\r\n                      name=\"create-outline\"\r\n                      size={20}\r\n                      color=\"#9CA3AF\"\r\n                      style={styles.iconMargin}\r\n                    />\r\n                    <Ionicons name=\"trash-outline\" size={20} color=\"#9CA3AF\" />\r\n                  </>\r\n                ) : (\r\n                  <Text variant=\"bodyMedium\">\r\n                    {\" \"}\r\n                    {asistencia\r\n                      ? asistencia.presente === 1\r\n                        ? \"Presente\"\r\n                        : asistencia.presente === 2\r\n                        ? \"Ausente\"\r\n                        : \"Tarde\"\r\n                      : \"Sin asistencia\"}\r\n                  </Text>\r\n                )}\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.scheduleRow}>\r\n              <Ionicons\r\n                name=\"calendar-outline\"\r\n                size={13}\r\n                color=\"#9CA3AF\"\r\n                style={styles.iconMargin}\r\n              />\r\n              <Text variant=\"bodySmall\" style={styles.cardSubtitle}>\r\n                {clase.fecha.toString()}\r\n              </Text>\r\n            </View>\r\n\r\n            {user?.is_teacher && (\r\n              <Button\r\n                mode=\"outlined\"\r\n                icon=\"account-check-outline\"\r\n                style={styles.attendanceButton}\r\n                onPress={() => setModalVisible(true)}\r\n              >\r\n                Tomar asistencia\r\n              </Button>\r\n            )}\r\n          </Card.Content>\r\n        </LinearGradient>\r\n      </Card>\r\n\r\n      {/* Modal de asistencia */}\r\n      <ModalAsistencia\r\n        visible={modalVisible}\r\n        onClose={() => setModalVisible(false)}\r\n        clase={clase}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 400,\r\n    borderRadius: 8,\r\n    elevation: 2,\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 15,\r\n    marginBottom: 10,\r\n  },\r\n  headerRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconButtons: {\r\n    flexDirection: \"row\",\r\n  },\r\n  iconMargin: {\r\n    marginRight: 8,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n  },\r\n  cardTitle: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: 4,\r\n  },\r\n  cardSubtitle: {\r\n    color: \"#6B7280\",\r\n  },\r\n  attendanceButton: {\r\n    marginTop: 10,\r\n  },\r\n  modalBackdrop: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.4)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modalContainer: {\r\n    width: \"85%\",\r\n    padding: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    elevation: 5,\r\n  },\r\n  modalCloseButton: {\r\n    marginTop: 20,\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  modalCloseText: {\r\n    color: \"#2563EB\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","import { View, StyleSheet, Image, ScrollView } from \"react-native\";\r\nimport { Text, Button, ActivityIndicator, useTheme } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useNavigation, useRoute, RouteProp } from \"@react-navigation/native\";\r\nimport { MateriasStackParamList } from \"../types/route\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { clasesMateria } from \"../api/clasesMateria\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\nimport ClaseCard from \"../components/claseCard\";\r\nimport { useWindowDimensions } from \"react-native\";\r\nimport { getFromStorage } from \"../utils/storage\";\r\nimport { Layout } from \"../layout/layout\";\r\ntype Props = RouteProp<MateriasStackParamList, \"DetalleMateria\">;\r\n\r\nexport default function DetallesMaterias() {\r\n  const { width } = useWindowDimensions();\r\n  const route = useRoute<Props>();\r\n  const { materia, asistencia } = route.params;\r\n  const navigation = useNavigation();\r\n  const { token, user } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [clases, setClases] = useState<ClaseType[]>([]);\r\n  const [error, setError] = useState(false);\r\n  const { colors } = useTheme();\r\n\r\n  const getClases = async () => {\r\n    let efectiveToken = token;\r\n    if (!token) {\r\n      efectiveToken = await getFromStorage(\"token\");\r\n    }\r\n    try {\r\n      const data = await clasesMateria(materia.id, efectiveToken);\r\n      setClases(data);\r\n    } catch (error) {\r\n      console.log(\"error al obtener las clases\", error);\r\n      setError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const clasesFiltradas = user?.is_teacher\r\n    ? clases\r\n    : clases.filter((clase) => !/^clases\\s+\\d+/i.test(clase.tema));\r\n\r\n  const numColumns = width >= 1024 ? 3 : width >= 600 ? 2 : 1;\r\n  const isSmallDevice = width < 600;\r\n  useEffect(() => {\r\n    getClases();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isLoading]);\r\n\r\n  const handleGoBack = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  const handleAddClass = () => {\r\n    // lógica para agregar clase\r\n  };\r\n\r\n  // Agrupa las clases en filas según numColumns\r\n  const getRows = (data: ClaseType[], columns: number) => {\r\n    const rows = [];\r\n    for (let i = 0; i < data.length; i += columns) {\r\n      rows.push(data.slice(i, i + columns));\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.container}>\r\n        <View\r\n          style={[\r\n            styles.sectionHeader,\r\n            isSmallDevice && {\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\",\r\n              gap: 8,\r\n            },\r\n          ]}\r\n        >\r\n          <View\r\n            style={[\r\n              styles.headerRow,\r\n              isSmallDevice && { flexDirection: \"row\", alignItems: \"center\" },\r\n            ]}\r\n          >\r\n            <Button\r\n              onPress={handleGoBack}\r\n              mode=\"text\"\r\n              compact\r\n              icon={({ size, color }) => (\r\n                <Ionicons name=\"arrow-back\" size={16} color={colors.primary} />\r\n              )}\r\n              contentStyle={styles.backButton}\r\n              labelStyle={[\r\n                styles.backButtonText,\r\n                isSmallDevice && { display: \"none\" },\r\n              ]}\r\n            >\r\n              {!isSmallDevice && \"Volver\"}\r\n            </Button>\r\n            <Text\r\n              variant={isSmallDevice ? \"titleSmall\" : \"titleMedium\"}\r\n              style={[\r\n                styles.subjectTitle,\r\n                {\r\n                  flexShrink: 1,\r\n                  flexWrap: \"wrap\",\r\n                  maxWidth: isSmallDevice ? \"90%\" : \"100%\",\r\n                },\r\n              ]}\r\n              numberOfLines={1}\r\n              ellipsizeMode=\"tail\"\r\n            >\r\n              {materia.nombre}\r\n            </Text>\r\n          </View>\r\n\r\n          <View>\r\n            <View style={styles.scheduleRow}>\r\n              <Ionicons name=\"clipboard\" size={14} color=\"#6B7280\" />\r\n              <Text variant=\"bodySmall\" style={styles.subjectSchedule}>\r\n                {`${materia.ano}° ${materia.division}° - ${materia.especialidad}`}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n\r\n          {user?.is_teacher && (\r\n            <View>\r\n              <Button\r\n                icon=\"plus\"\r\n                mode=\"contained\"\r\n                onPress={handleAddClass}\r\n                contentStyle={styles.addButtonContent}\r\n                style={styles.addButton}\r\n              >\r\n                Agregar Clase\r\n              </Button>\r\n            </View>\r\n          )}\r\n        </View>\r\n\r\n        {isLoading ? (\r\n          <ActivityIndicator size={\"large\"} color=\"violet\" />\r\n        ) : error ? (\r\n          <View\r\n            style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}\r\n          >\r\n            <Text\r\n              variant=\"titleLarge\"\r\n              style={{\r\n                marginBottom: 12,\r\n                color: \"#9333EA\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Ocurrió un error al cargar las clases\r\n            </Text>\r\n            <Image\r\n              source={require(\"../../assets/errorImagen.png\")}\r\n              style={{\r\n                width: 180,\r\n                height: 180,\r\n                marginBottom: 20,\r\n                borderRadius: 90,\r\n                opacity: 0.85,\r\n              }}\r\n              resizeMode=\"contain\"\r\n            />\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={() => {\r\n                setIsLoading(true);\r\n                setError(false);\r\n                getClases();\r\n              }}\r\n              style={{ marginTop: 8 }}\r\n            >\r\n              Reintentar\r\n            </Button>\r\n          </View>\r\n        ) : (\r\n          <>\r\n            <ScrollView\r\n              contentContainerStyle={{\r\n                paddingBottom: user?.is_teacher ? 90 : 32,\r\n                paddingHorizontal: 6,\r\n                gap: 10,\r\n              }}\r\n              showsVerticalScrollIndicator={false}\r\n            >\r\n              {clasesFiltradas.length === 0 ? (\r\n                <View style={styles.centered}>\r\n                  <Ionicons\r\n                    name=\"information-circle-outline\"\r\n                    size={48}\r\n                    color=\"#A78BFA\"\r\n                  />\r\n                  <Text\r\n                    style={{\r\n                      color: \"#6B7280\",\r\n                      marginTop: 12,\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    No hay clases registradas aún.\r\n                  </Text>\r\n                </View>\r\n              ) : (\r\n                getRows(clasesFiltradas, numColumns).map((row, rowIndex) => (\r\n                  <View\r\n                    key={rowIndex}\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: numColumns > 1 ? \"center\" : \"flex-start\",\r\n                      marginBottom: 10,\r\n                      gap: 10,\r\n                    }}\r\n                  >\r\n                    {row.map((item) => {\r\n                      const asistenciaDeEstaClase = asistencia.find(\r\n                        (asistencia) => asistencia.id === item.id\r\n                      );\r\n                      return (\r\n                        <View\r\n                          key={item.id}\r\n                          style={{\r\n                            flex: 1,\r\n                            maxWidth: `${100 / numColumns}%`,\r\n                          }}\r\n                        >\r\n                          <View style={styles.cardShadow}>\r\n                            <ClaseCard\r\n                              clase={item}\r\n                              asistencia={asistenciaDeEstaClase}\r\n                            />\r\n                          </View>\r\n                        </View>\r\n                      );\r\n                    })}\r\n                    {row.length < numColumns &&\r\n                      Array.from({ length: numColumns - row.length }).map(\r\n                        (_, idx) => (\r\n                          <View\r\n                            key={`empty-${idx}`}\r\n                            style={{\r\n                              flex: 1,\r\n                              maxWidth: `${100 / numColumns}%`,\r\n                              minHeight: 120,\r\n                            }}\r\n                          />\r\n                        )\r\n                      )}\r\n                  </View>\r\n                ))\r\n              )}\r\n            </ScrollView>\r\n            {user?.is_teacher && (\r\n              <View style={styles.fabContainer}>\r\n                <Button\r\n                  icon=\"plus\"\r\n                  mode=\"contained\"\r\n                  onPress={handleAddClass}\r\n                  contentStyle={styles.addButtonContent}\r\n                  style={styles.addButton}\r\n                  labelStyle={{ fontWeight: \"bold\", fontSize: 16 }}\r\n                >\r\n                  Agregar Clase\r\n                </Button>\r\n              </View>\r\n            )}\r\n          </>\r\n        )}\r\n      </View>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  backButton: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingLeft: 0,\r\n  },\r\n  backButtonText: {\r\n    color: \"#4B5563\",\r\n    fontSize: 14,\r\n    marginLeft: 4,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    gap: 6,\r\n  },\r\n\r\n  subjectTitle: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  subjectSchedule: {\r\n    color: \"#6B7280\",\r\n    marginTop: 4,\r\n    marginBottom: 4,\r\n  },\r\n\r\n  sectionHeader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: 8,\r\n  },\r\n  addButton: {\r\n    borderRadius: 8,\r\n    marginVertical: 10,\r\n  },\r\n  addButtonContent: {\r\n    flexDirection: \"row\",\r\n  },\r\n  headerRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 8,\r\n  },\r\n});\r\n","import { urlBase } from \"../utils/url\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\n\r\nexport async function clasesMateria(\r\n  aulaId: number,\r\n  token: string | null\r\n): Promise<ClaseType> {\r\n  const response = await fetch(`${urlBase}/clases/aulas/${aulaId}/clases`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport Materias from \"../screens/mis-materias\";\r\nimport DetalleMateria from \"../screens/DetailsMaterias\";\r\nimport { MateriasStackParamList } from \"../types/route\";\r\n\r\nconst Stack = createNativeStackNavigator<MateriasStackParamList>();\r\n\r\nexport default function MateriasStack() {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen\r\n        name=\"Materias\"\r\n        component={Materias}\r\n        options={{ title: \"adminAulas | Mis Materias\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"DetalleMateria\"\r\n        component={DetalleMateria}\r\n        options={{ title: \"adminAulas | Detalle de Materia\" }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import {\r\n  NavigationContainer,\r\n  DefaultTheme as NavigationDefaultTheme,\r\n  DarkTheme as NavigationDarkTheme,\r\n} from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport { AuthProvider, useAuth } from \"../context/authContent\";\r\nimport HomeScreen from \"../screens/home-screen\";\r\nimport LoginScreen from \"../screens/login-screen\";\r\nimport Profile from \"../screens/profile\";\r\nimport { Pressable, View } from \"react-native\";\r\nimport CustomDrawerContent from \"./CustomDrawerContent\";\r\nimport Alarcoin from \"../screens/alarcoin\";\r\nimport ChangePassword from \"../screens/changePassword\";\r\nimport MateriasStack from \"./materiasStack\";\r\nimport { DrawerParamList, RootStack } from \"../types/route\";\r\nimport { AppDataProvider } from \"../context/appDataContext\";\r\nimport { Avatar, useTheme } from \"react-native-paper\";\r\nimport { useThemeContext } from \"../context/themeContext\";\r\nimport { getInitials } from \"../utils/initials\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst Stack = createNativeStackNavigator<RootStack>();\r\nconst Drawer = createDrawerNavigator<DrawerParamList>();\r\n\r\nfunction DrawerNavigator() {\r\n  const { colors } = useTheme();\r\n  const { user } = useAuth();\r\n  const memoizedUser = useMemo(() => user, [user]);\r\n\r\n  return (\r\n    <Drawer.Navigator\r\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\r\n      screenOptions={({ navigation }) => ({\r\n        headerStyle: {\r\n          backgroundColor: colors.elevation.level2,\r\n        },\r\n        headerTintColor: colors.primary,\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n\r\n        headerRight: () => (\r\n          <View style={{ padding: 2 }}>\r\n            <Pressable onPress={() => navigation.navigate(\"Perfil\")} style={{}}>\r\n              <Avatar.Text\r\n                label={getInitials(\r\n                  memoizedUser?.nombre,\r\n                  memoizedUser?.apellido\r\n                )}\r\n                size={40}\r\n                style={{\r\n                  backgroundColor: colors.primary,\r\n                  width: 40,\r\n                  height: 40,\r\n                  marginRight: 10,\r\n                }}\r\n              />\r\n            </Pressable>\r\n          </View>\r\n        ),\r\n      })}\r\n    >\r\n      <Drawer.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{ title: \"adminAulas | Dashboard\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"MateriasStack\"\r\n        component={MateriasStack}\r\n        options={{ title: \"adminAulas | Mis Materias\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Perfil\"\r\n        component={Profile}\r\n        options={{ title: \"adminAulas | Mi Perfil\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Alarcoin\"\r\n        component={Alarcoin}\r\n        options={{ title: \"adminAulas | Mis Alarcoin\" }}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nconst StackNavigation = () => {\r\n  const { user } = useAuth();\r\n  const { theme } = useThemeContext();\r\n\r\n  // Integrar con React Navigation\r\n  const navigationTheme = theme.dark\r\n    ? {\r\n        ...NavigationDarkTheme,\r\n        colors: {\r\n          ...NavigationDarkTheme.colors,\r\n          ...theme.colors,\r\n        },\r\n      }\r\n    : {\r\n        ...NavigationDefaultTheme,\r\n        colors: {\r\n          ...NavigationDefaultTheme.colors,\r\n          ...theme.colors,\r\n        },\r\n      };\r\n\r\n  return (\r\n    <NavigationContainer theme={navigationTheme}>\r\n      <Stack.Navigator>\r\n        {!user ? (\r\n          <Stack.Screen\r\n            name=\"Login\"\r\n            component={LoginScreen}\r\n            options={{ headerShown: false }}\r\n          />\r\n        ) : user.cambiarContrasena ? (\r\n          <Stack.Screen\r\n            name=\"CambiarContra\"\r\n            component={ChangePassword}\r\n            options={{\r\n              title: \"adminAulas | Cambiar Contraseña\",\r\n              headerShown: false,\r\n            }}\r\n          />\r\n        ) : (\r\n          <Stack.Screen\r\n            name=\"Main\"\r\n            component={DrawerNavigator}\r\n            options={{ headerShown: false }}\r\n          />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default function Router() {\r\n  return (\r\n    <AuthProvider>\r\n      <AppDataProvider>\r\n        <StackNavigation />\r\n      </AppDataProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n","// src/screens/SplashScreen.tsx\r\nimport React, { useEffect } from \"react\";\r\nimport { StyleSheet, Animated } from \"react-native\";\r\nimport { useTheme, Text } from \"react-native-paper\";\r\nimport { PrimaryColor } from \"../utils/colors\";\r\n\r\nconst SplashScreen = ({ onFinish }: { onFinish: () => void }) => {\r\n  const { colors } = useTheme();\r\n  const opacity = new Animated.Value(0);\r\n\r\n  useEffect(() => {\r\n    Animated.timing(opacity, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start(() => {\r\n      setTimeout(() => {\r\n        Animated.timing(opacity, {\r\n          toValue: 0.5,\r\n          duration: 500,\r\n          useNativeDriver: true,\r\n        }).start(() => {\r\n          onFinish();\r\n        });\r\n      }, 1000);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[styles.container, { opacity }, { backgroundColor: PrimaryColor }]}\r\n    >\r\n      <Text variant=\"titleLarge\" style={styles.title}>\r\n        AdminAulas 🚀\r\n      </Text>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default SplashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","// import Router from \"./src/navigations/router\";\n// import { PaperProvider } from \"react-native-paper\";\n// import { ThemeProvider, useThemeContext } from \"./src/context/themeContext\";\n// import { StatusBar } from \"expo-status-bar\";\n// import { useFonts } from \"expo-font\";\n// import { MaterialCommunityIcons } from \"@expo/vector-icons\";\n// import { useCallback } from \"react\";\n\n// export default function App() {\n//   const [fontsLoaded] = useFonts({\n//     ...MaterialCommunityIcons.font,\n//   });\n\n//   const onLayoutRootView = useCallback(async () => {\n//     if (fontsLoaded) {\n\n//     }\n//   }, [fontsLoaded]);\n\n//   if (!fontsLoaded) return null;\n//   return (\n//     <ThemeProvider>\n//       <AppWithTheme />\n//     </ThemeProvider>\n//   );\n// }\n\n// function AppWithTheme() {\n//   const { theme, isDarkMode } = useThemeContext();\n//   return (\n//     <PaperProvider theme={theme}>\n//       <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n//       <Router />\n//     </PaperProvider>\n//   );\n// }\nimport Router from \"./src/navigations/router\";\nimport { PaperProvider } from \"react-native-paper\";\nimport { ThemeProvider, useThemeContext } from \"./src/context/themeContext\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useFonts } from \"expo-font\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Splash from \"./src/screens/splashScreen\"; // 👈\n\nSplashScreen.preventAutoHideAsync(); // 👈\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    ...MaterialCommunityIcons.font,\n  });\n\n  const [showSplash, setShowSplash] = useState(true);\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      // podés validar token acá si querés\n    }\n  }, [fontsLoaded]);\n\n  useEffect(() => {\n    if (fontsLoaded) onLayoutRootView();\n  }, [fontsLoaded]);\n\n  const handleSplashFinish = async () => {\n    setShowSplash(false);\n    await SplashScreen.hideAsync(); // 👈 Oculta el splash nativo\n  };\n\n  if (!fontsLoaded) return null;\n\n  return (\n    <ThemeProvider>\n      {showSplash ? <Splash onFinish={handleSplashFinish} /> : <AppWithTheme />}\n    </ThemeProvider>\n  );\n}\n\nfunction AppWithTheme() {\n  const { theme, isDarkMode } = useThemeContext();\n  return (\n    <PaperProvider theme={theme}>\n      <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n      <Router />\n    </PaperProvider>\n  );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [404], () => (__webpack_require__(990)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["saveUser","async","AsyncStorage","setItem","JSON","stringify","user","error","console","saveToStorage","key","value","getFromStorage","getItem","removeFromStorage","removeItem","saveAula","aulas","log","getAulaStorage","aula","parse","AuthContext","createContext","setUser","token","setToken","logout","loading","AuthProvider","children","useState","setLoading","useEffect","users","getUser","loadUser","_jsx","Provider","useAuth","useContext","Layout","colors","useTheme","LinearGradient","primary","background","start","x","y","end","style","styles","gradient","SafeAreaView","safeArea","KeyboardAvoidingView","flex","behavior","keyboardVerticalOffset","StatusBar","currentHeight","ScrollView","contentContainerStyle","scrollContainer","keyboardShouldPersistTaps","View","innerContainer","StyleSheet","create","paddingTop","flexGrow","padding","urlBase","AppDataContext","undefined","AppDataProvider","setAulas","alumnosMap","setAlumnosMap","isLoading","setIsLoading","alarcoins","setAlarcoins","alarcoinsError","setAlarcoinsError","loadDataAlumno","cachedAulas","aulasData","response","fetch","method","headers","Authorization","ok","errorData","json","Error","detail","getMisAulas","tokenParam","aulasProcesadas","map","Object","assign","alumnos","alumnoIds","id","loadDataProfe","cachedAulumnosMap","data","alumnosArray","forEach","alumno","getAlumnosStorage","getalumnosAulas","alumnosMapTemp","aulasSinAlumnos","nombre","ano","division","especialidad","profesor_id","cantidad_clases","saveAlumnos","values","loadData","effectiveToken","is_teacher","loadAlarcoins","efectiveToken","getHistorialProfesor","alarcoinsData","nuevoMap","keys","alarcoin","cantidad","reduce","acc","item","suma","calcularCantidadAlarcoins","actualizarCantidadAlarcoins","alarcoinProfe","getAlarcoinsAlumno","alarcoinAlumno","useAppData","context","PrimaryColor","ResumenMiniCard","title","icon","color","Card","card","mode","_jsxs","Content","cardContent","Avatar","size","Ionicons","name","backgroundColor","marginLeft","Text","variant","fontWeight","width","maxWidth","minWidth","marginBottom","elevation","borderRadius","alignSelf","flexDirection","alignItems","AlumnosList","List","length","left","props","MaterialCommunityIcons","right","isExpanded","titleStyle","accordionTitle","accordion","idx","description","email","label","toUpperCase","avatar","itemTitle","descriptionStyle","itemDescription","listItem","Divider","overflow","fontSize","paddingVertical","paddingHorizontal","marginRight","HomeScreen","useWindowDimensions","isSmallScreen","cargando","totalClasesDictadas","total","saludo","fecha","getSaludoFecha","now","Date","hora","getHours","toLocaleDateString","day","month","year","ActivityIndicator","_Fragment","header","headerSmall","marginTop","cardsContainer","justifyContent","gap","flexWrap","alignContent","alumnosListContainer","LoginSchema","Yup","shape","required","password","min","LoginScreen","navigation","useNavigation","handleLogin","setSubmitting","setError","resetForm","body","loginUser","access_token","navigate","container","Formik","initialValues","validationSchema","onSubmit","setErrors","msg","handleChange","handleBlur","handleSubmit","errors","touched","isSubmitting","TextInput","input","placeholder","onChangeText","onBlur","keyboardType","autoCapitalize","secureTextEntry","Button","onPress","buttonText","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","textAlign","borderColor","borderWidth","button","currentPassword","newPassword","minHeight","letterSpacing","subheader","opacity","avatarContainer","marginVertical","cardheader","paddingRight","cardTitle","cardSubtitle","editButton","form","buttonGroup","saveButton","cancelButton","logoutButton","Profile","editable","setEditable","setNombre","apellido","setApellido","setPassword","confirmPassword","setConfirmPassword","handleEdit","handleCancel","onSurfaceVariant","surface","Title","subtitle","subtitleStyle","outlineVariant","Alert","alert","enableReinitialize","surfaceDisabled","Icon","textContentType","outline","labelStyle","onPrimary","contentStyle","getInitials","trim","profile","margin","role","AvatarCard","isalarcoins","lightTheme","MD3LightTheme","text","secondary","accent","asistenciaBuena","asistenciaMedia","asistenciaMala","darkTheme","MD3DarkTheme","ThemeContext","isDarkMode","toggleTheme","theme","ThemeProvider","systemColorScheme","useColorScheme","useSystemTheme","setUseSystemTheme","setIsDarkMode","stored","loadTheme","listener","Appearance","addChangeListener","colorScheme","remove","newValue","useThemeContext","CustomDrawerContent","drawerItems","screen","DrawerContentScrollView","Drawer","nav","index","DrawerItem","bottom","themeItem","Switch","onValueChange","Feather","dispatch","CommonActions","routes","switchRow","SelectMateria","historial","onSeleccionar","visible","setVisible","selected","setSelected","closeMenu","handleSelect","Menu","onDismiss","anchor","openMenu","Item","aula_id","HelperText","type","AlarcoinModal","selectedAula","tab","setTab","setCantidad","concepto","setConcepto","tipo","setTipo","materiaSeleccionada","setMateriaSeleccionada","visibleSnack","setVisibleSnack","mensaje","setMensaje","historialPorAula","useMemo","find","a","filter","Portal","Snackbar","duration","action","Modal","SegmentedButtons","buttons","prev","String","Math","max","Number","RadioButton","Group","alumno_id","detalle","crearAlarcoin","every","totalAlarcoins","entry","LoadError","hasError","reLoad","errorMessage","Image","source","require","resizeMode","MateriasCard","materia","porcentaje","is_alumno","getColorFromPorcentaje","infoLeft","scheduleRow","infoRight","classCount","marginHorizontal","Alarcoin","selectedAlumno","setSelectedAlumno","setSelectedAula","fetchData","numColumns","handleOpenModal","renderItem","Pressable","pressed","dataList","rows","i","push","slice","paddingBottom","row","rowIndex","Array","from","_","handleCloseModal","ChangePassword","navigator","apiError","setApiError","validToken","setValidToken","tokenToStorage","matches","oneOf","updatedUser","updateUser","cambiarContrasena","message","disabled","Materias","numColums","asistencias","setAsistencias","getAsistenciasPorClase","fetchAsistencias","asistenciaAula","porcentaje_asistencia","asistenciaAulaClases","asistenciasA","handlerNavigation","asistencia","params","scheduleText","ModalAsistencia","onClose","clase","asistenciasEditadas","setAsistenciasEditadas","isMobile","columns","Boolean","clase_id","AsistenciasClase","todosPresentes","presente","getAsistencias","modalContainer","headerTitle","tema","scroll","grid","asistenciaExistente","asistenciaEditada","valuePresente","toString","valueJustificado","justificado","cardWrapper","alumnoCard","nombreAlumno","parseInt","radioRowFixed","radioItemFixed","radioLabelMobile","radioLabel","handleJustificacionChange","buttonRow","payload","editada","setClaseAsistencia","maxHeight","radioRow","ClaseCard","modalVisible","setModalVisible","getColorFromAsistencia","headerRow","iconButtons","iconMargin","attendanceButton","modalBackdrop","modalCloseButton","modalCloseText","DetallesMaterias","route","useRoute","clases","setClases","getClases","aulaId","clasesMateria","clasesFiltradas","test","isSmallDevice","handleAddClass","sectionHeader","handleGoBack","goBack","compact","backButton","backButtonText","display","subjectTitle","flexShrink","numberOfLines","ellipsizeMode","subjectSchedule","addButtonContent","addButton","showsVerticalScrollIndicator","centered","getRows","asistenciaDeEstaClase","cardShadow","fabContainer","paddingLeft","Stack","createNativeStackNavigator","MateriasStack","Navigator","screenOptions","headerShown","Screen","component","options","DetalleMateria","createDrawerNavigator","DrawerNavigator","memoizedUser","drawerContent","headerStyle","level2","headerTintColor","headerTitleStyle","headerRight","StackNavigation","navigationTheme","dark","NavigationDarkTheme","NavigationDefaultTheme","NavigationContainer","Router","SplashScreen","onFinish","Animated","Value","timing","toValue","useNativeDriver","setTimeout","AppWithTheme","PaperProvider","registerRootComponent","fontsLoaded","useFonts","font","showSplash","setShowSplash","onLayoutRootView","useCallback","Splash","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}