{"version":3,"file":"static/js/main.e6ced901.js","mappings":"8GAUO,MAAMA,EAAWC,UACtB,UACQC,EAAAA,QAAaC,QAAQ,OAAQC,KAAKC,UAAUC,GACpD,CAAE,MAAOC,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,GAgBWE,EAAgBR,MAAOS,EAAaC,KAC/C,UACQT,EAAAA,QAAaC,QAAQO,EAAKC,EAClC,CAAE,MAAOJ,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,GAGWK,EAAiBX,UAC5B,IACE,aAAaC,EAAAA,QAAaW,QAAQH,EACpC,CAAE,MAAOH,GAEP,OADAC,QAAQD,MAAM,+BAAgCA,GACvC,IACT,GAGWO,EAAoBb,UAC/B,UACQC,EAAAA,QAAaa,WAAWL,EAChC,CAAE,MAAOH,GACPC,QAAQD,MAAM,+BAAgCA,EAChD,GAGWS,EAAWf,UACtB,UACQC,EAAAA,QAAaC,QAAQ,QAASC,KAAKC,UAAUY,GACrD,CAAE,MAAOV,GACPC,QAAQU,IAAI,4BAA6BX,EAC3C,GAGWY,EAAiBlB,UAC5B,IACE,MAAMmB,QAAalB,EAAAA,QAAaW,QAAQ,SACxC,OAAY,MAARO,EAAqBhB,KAAKiB,MAAMD,GAC7B,IACT,CAAE,MAAOb,GAEP,OADAC,QAAQU,IAAI,eAAgBX,GACrB,IACT,GA2CWe,EAAoBrB,UAG/B,IACE,MAAMsB,QAAaX,EAAe,mBAClC,OAAOW,EAAOnB,KAAKiB,MAAME,GAAQ,IACnC,CAAE,MAAOhB,GAEP,OADAC,QAAQD,MAAM,iCAAkCA,GACzC,IACT,GAaWiB,EAAqBvB,UAGhC,IACE,MAAMsB,QAAaX,EAAe,oBAClC,OAAOW,EAAOnB,KAAKiB,MAAME,GAAQ,IACnC,CAAE,MAAOhB,GAEP,OADAC,QAAQD,MAAM,qCAAsCA,GAC7C,IACT,GAuBWkB,EAAaxB,MACxByB,EACAC,KAEA,UACQzB,EAAAA,QAAaC,QAAS,UAASuB,IAAatB,KAAKC,UAAUsB,GACnE,CAAE,MAAOpB,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,GAGWqB,EAAmB3B,UAG9B,IACE,MAAM0B,QAAazB,EAAAA,QAAaW,QAAS,UAASa,KAClD,OAAOC,EAAOvB,KAAKiB,MAAMM,GAAQ,IACnC,CAAE,MAAOpB,GAEP,OADAC,QAAQD,MAAM,wBAAyBA,GAChC,IACT,G,cC/KF,MAAMsB,GAAcC,EAAAA,EAAAA,eAA+B,CACjDxB,KAAM,KACNyB,QAASA,OACTC,MAAO,KACPC,SAAUA,OACVC,OAAQA,OACRC,SAAS,IAGEC,EAAeA,EAAGC,eAC7B,MAAO/B,EAAMyB,IAAWO,EAAAA,EAAAA,UAAsB,OACvCH,EAASI,IAAcD,EAAAA,EAAAA,WAAS,IAChCN,EAAOC,IAAYK,EAAAA,EAAAA,UAAwB,OAElDE,EAAAA,EAAAA,YAAU,KACSvC,WACf,MAAMwC,ODZWxC,WACrB,IACE,MAAMK,QAAaJ,EAAAA,QAAaW,QAAQ,QACxC,OAAa,OAATP,EACKF,KAAKiB,MAAMf,GAEb,IACT,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAM,+BAAgCA,GACvC,IACT,GCEwBmC,GACdV,QAAcpB,EAAe,SAC/B6B,GAAOV,EAAQU,GACfT,GAAOC,EAASD,GACpBO,GAAW,EAAM,EAEnBI,EAAU,GACT,IAeH,OACEC,EAAAA,EAAAA,KAACf,EAAYgB,SAAQ,CACnBlC,MAAO,CAAEL,OAAMyB,UAASI,UAASH,QAAOC,WAAUC,OAfvCjC,UACb,UACQa,EAAkB,eAClBA,EAAkB,cAClBA,EAAkB,QAC1B,CAAE,MAAOP,GACPC,QAAQU,IAAI,wBAAyBX,EACvC,CAEAwB,EAAQ,MACRE,EAAS,KAAK,GAK+CI,SAE1DA,GACoB,EAIdS,EAAUA,KAAMC,EAAAA,EAAAA,YAAWlB,G,6FC5CjC,MAAMmB,EAASA,EAAGX,eACvB,MAAM,OAAEY,IAAWC,EAAAA,EAAAA,YACnB,OACEN,EAAAA,EAAAA,KAACO,EAAAA,eAAc,CACbF,OAAQ,CAACA,EAAOG,QAASH,EAAOI,YAChCC,MAAO,CAAEC,EAAG,GAAKC,EAAG,GACpBC,IAAK,CAAEF,EAAG,GAAKC,EAAG,GAClBE,MAAOC,EAAOC,SAASvB,UAEvBO,EAAAA,EAAAA,KAACiB,EAAAA,QAAY,CAACH,MAAOC,EAAOG,SAASzB,UACnCO,EAAAA,EAAAA,KAACmB,EAAAA,QAAoB,CACnBL,MAAOC,EAAOK,KACdC,SAA8C,SAC9CC,uBAC8BC,EAAAA,QAAUC,eAAiB,EACxD/B,UAEDO,EAAAA,EAAAA,KAACyB,EAAAA,QAAU,CACTC,sBAAuBX,EAAOY,gBAC9BC,0BAA0B,UAASnC,UAEnCO,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAOC,EAAOe,eAAerC,SAAEA,WAI5B,EAIfsB,EAASgB,EAAAA,QAAWC,OAAO,CAC/BhB,SAAU,CACRI,KAAM,GAERF,SAAU,CACRE,KAAM,EACNa,WAAkE,GAEpEb,KAAM,CACJA,KAAM,GAERO,gBAAiB,CACfO,SAAU,GAEZJ,eAAgB,CACdV,KAAM,EACNe,QAAS,MC9DAC,EAAU,kCCqCvB,MAAMC,GAAiBnD,EAAAA,EAAAA,oBAA8CoD,GAExDC,EAAkBA,EAC7B9C,eAIA,MAAM,MAAEL,EAAK,KAAE1B,GAASwC,KACjB7B,EAAOmE,IAAY9C,EAAAA,EAAAA,UAA+B,KAClD+C,EAAYC,IAAiBhD,EAAAA,EAAAA,UAAqC,CAAC,IACnEiD,EAAWC,IAAgBlD,EAAAA,EAAAA,WAAS,IACpCmD,EAAWC,IAAgBpD,EAAAA,EAAAA,UAEhC,OACKqD,EAAgBC,IAAqBtD,EAAAA,EAAAA,WAAS,GAS/CuD,EAAgB5F,UAElB6F,KAEA,MAAMC,EAAoCC,OAAAC,OAAA,GAAQZ,GAElDW,OAAOE,KAAKH,GAAUI,SAASC,IAC7BL,GAAUK,GAAGJ,OAAAC,OAAA,GACRF,GAAUK,GAAI,CACjBC,SAAU,GACX,IAGHP,EAAcK,SAAS/E,IACrBA,EAAKkF,QAAQH,SAASI,IACpB,MAAMC,EAtBqBf,IAC1BA,EAAUgB,QAAO,CAACC,EAAKC,IACrBD,GAAOC,EAAKC,KAAOD,EAAKH,UAAYG,EAAKH,WAC/C,GAmBoBK,CAA0BN,GAAQd,WAC/CM,EAASQ,EAAOH,MAClBL,EAASQ,EAAOH,IAAIC,UACjBN,EAASQ,EAAOH,IAAIC,UAAY,GAAKG,EAC1C,GACA,IAGJlB,EAAcS,EAAS,EAEzBe,CAA4BnF,GAC5B+D,EAAa/D,QJoBiB1B,WAChC,IACE,MAAMsB,EAAOnB,KAAKC,UAAUsB,SACtBlB,EAAc,kBAAmBc,EACzC,CAAE,MAAOhB,GACPC,QAAQD,MAAM,wCAAyCA,EACzD,GIzBQwG,CAAmBpF,EAAK,EAE1BqF,EAAiB/G,UACrByF,EAAa/D,QJsCkB1B,WACjC,IACE,MAAMsB,EAAOnB,KAAKC,UAAUsB,SACtBlB,EAAc,mBAAoBc,EAC1C,CAAE,MAAOhB,GACPC,QAAQD,MAAM,wCAAyCA,EACzD,GI3CQ0G,CAAoBtF,EAAK,EAuC3BuF,EAAiBjH,UACrB,IACE,MAAMkH,QAAoBhG,IAC1B,GAAIgG,EAGF,OAFA/B,EAAS+B,QACT3B,GAAa,GAIf,MAAM4B,QCtHLnH,eAA2B+B,GAChC,MAAMqF,QAAiBC,MAAO,GAAEtC,oBAA2B,CACzDuC,OAAQ,MACRC,QAAS,CACPC,cAAgB,UAASzF,OAI7B,IAAKqF,EAASK,GAAI,CAChB,MAAMC,QAAkBN,EAAS9F,OACjC,MAAM,IAAIqG,MAAMD,EAAUE,QAAU,6BACtC,CAEA,aAAaR,EAAS9F,MACxB,CDwG8CuG,CAAYC,GAC9CC,EAAkBZ,EAAUa,KAAK7G,GAAI4E,OAAAC,OAAA,GACtC7E,EAAK,CACRkF,QAAS,CAAChG,GACV4H,UAAW,CAAC5H,EAAK8F,QAGnBhB,EAAS4C,SACHhH,EAASgH,EACjB,CAAE,MAAOzH,GAAQ,GAGb4H,EAAgBlI,UACpB,IACE,MAAMkH,QAAoBhG,IACpBiH,OJtEqBnI,WAI/B,IACE,MAAM0B,QAAazB,EAAAA,QAAaW,QAAQ,WACxC,IAAKc,EAAM,OAAO,KAElB,MAAM0G,EAA8BjI,KAAKiB,MAAMM,GACzC0D,EAA0C,CAAC,EAMjD,OAJAgD,EAAalC,SAASI,IACpBlB,EAAWkB,EAAOH,IAAMG,CAAM,IAGzBlB,CACT,CAAE,MAAO9E,GAEP,OADAC,QAAQD,MAAM,uCAAwCA,GAC/C,IACT,GImDoC+H,GAEhC,GAAInB,GAAeiB,EAIjB,OAHAhD,EAAS+B,GACT7B,EAAc8C,QACd5C,GAAa,GAIf,MAAM4B,QChKLnH,eACL+B,GAEA,MAAMqF,QAAiBC,MAAO,GAAEtC,gCAAuC,CACrEuC,OAAQ,MACRC,QAAS,CACPC,cAAgB,UAASzF,OAI7B,IAAKqF,EAASK,GAAI,CAChB,MAAMC,QAAkBN,EAAS9F,OACjC,MAAM,IAAIqG,MAAMD,EAAUE,QAAU,6BACtC,CAEA,aAAaR,EAAS9F,MACxB,CDgJqDgH,CAC7CR,GAEIS,EAA6C,CAAC,EAC9CC,EAAkBrB,EAAUa,KAAK7G,IACrCA,EAAKkF,QAAQH,SAASI,IACpBiC,EAAejC,EAAOH,IAAMG,CAAM,IAE7B,CACLH,GAAIhF,EAAKgF,GACTsC,OAAQtH,EAAKsH,OACbC,IAAKvH,EAAKuH,IACVC,SAAUxH,EAAKwH,SACfC,aAAczH,EAAKyH,aACnBC,YAAa1H,EAAK0H,YAClBC,gBAAiB3H,EAAK2H,gBACtBb,UAAW9G,EAAKkF,QAAQ2B,KAAK1B,GAAWA,EAAOH,SAGnDhB,EAASqD,GACTnD,EAAckD,SACRxH,EAASyH,QJ7GMxI,WACzB,IACE,MAAMsB,EAAOnB,KAAKC,UAAUiG,SACtBpG,EAAAA,QAAaC,QAAQ,UAAWoB,EACxC,CAAE,MAAOhB,GACPC,QAAQD,MAAM,4BAA6BA,EAC7C,GIyGUyI,CAAYhD,OAAOiD,OAAOT,GAClC,CAAE,MAAOjI,GACPC,QAAQD,MAAM,sCAAuCA,EACvD,CAAC,QACCiF,GAAa,EACf,GAGI0D,EAAWjJ,UACf,MAAMkJ,EAAiBpB,GAAc/F,EAChCmH,IAED7I,GAAM8I,iBACFjB,EAAcgB,SAEdjC,EAAeiC,GACvB,EAOF,OAJA3G,EAAAA,EAAAA,YAAU,KACR0G,GAAU,GACT,CAAClH,KAGFY,EAAAA,EAAAA,KAACqC,EAAepC,SAAQ,CACtBlC,MAAO,CACLM,QACAoE,aACAE,YACA2D,WACAzD,YACA4D,cA3HgBpJ,UACpB,IAAIqJ,EAAgBtH,EACfA,IACHsH,QAAsB1I,EAAe,UAGvCgF,GAAkB,GAElB,IACE,IAAIjE,EACArB,GAAM8I,YACRzH,QE5BD1B,eACL+B,GAEA,MAAMqF,QAAiBC,MAAO,GAAEtC,wBAA+B,CAC7DwC,QAAS,CACPC,cAAgB,UAASzF,OAI7B,IAAKqF,EAASK,GAAI,CAChB,MAAMC,QAAkBN,EAAS9F,OACjC,MAAM,IAAIqG,MAAMD,EAAUE,QAAU,6BACtC,CAEA,aAAaR,EAAS9F,MACxB,CFaqBgI,CAAqBD,GAClCzD,EAAclE,KAEdA,QEjDD1B,eACL+B,GAEA,MAAMqF,QAAiBC,MAAO,GAAEtC,iBAAwB,CACtDwC,QAAS,CACPC,cAAgB,UAASzF,OAI7B,IAAKqF,EAASK,GAAI,CAChB,MAAMC,QAAkBN,EAAS9F,OACjC,MAAM,IAAIqG,MAAMD,EAAUE,QAAU,iCACtC,CAEA,aAAaR,EAAS9F,MACxB,CFkCqBC,CAAmB8H,GAChCtC,EAAerF,GAEnB,CAAE,MAAOpB,GACPC,QAAQD,MAAM,4BAA6BA,GAE3C,IACE,GAAID,GAAM8I,WAAY,CACpB,MAAMI,QAAcC,IAChBD,SAAa3D,EAAc2D,EACjC,KAAO,CACL,MAAMA,QAAcE,IAChBF,SAAaxC,EAAewC,EAClC,CACF,CAAE,MAAOG,GACPnJ,QAAQD,MAAM,0CAA2CoJ,EAC3D,CAEA/D,GAAkB,EACpB,GA2FID,kBACAtD,SAEDA,GACuB,EAIjBuH,EAAaA,KACxB,MAAMC,GAAU9G,EAAAA,EAAAA,YAAWkC,GAC3B,IAAK4E,EACH,MAAM,IAAIjC,MAAM,oDAClB,OAAOiC,CAAO,E,wBGtOT,MAAMC,EAAe,U,kCCU5B,MAuBA,EAvBwBC,EAAGC,QAAOrJ,QAAOsJ,OAAMC,QAAQ,cAEnDtH,EAAAA,EAAAA,KAACuH,EAAAA,QAAI,CAACzG,MAAOC,EAAOyG,KAAMC,KAAK,YAAWhI,UACxCiI,EAAAA,EAAAA,MAACH,EAAAA,QAAKI,QAAO,CAAC7G,MAAOC,EAAO6G,YAAYnI,SAAA,EACtCO,EAAAA,EAAAA,KAAC6H,EAAAA,QAAW,CACVR,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CAACC,KAAMX,EAAMC,MAAOA,EAAOQ,KAAMA,IAE5ChH,MAAO,CAAEmH,gBAAiBX,MAE5BI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAO,CAAEoH,WAAY,IAAKzI,SAAA,EAC9BO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,aAAatH,MAAO,CAAEwG,MAAO,QAAS7H,SACjD2H,KAEHpH,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,cAActH,MAAO,CAAEuH,WAAY,QAAS5I,SACvD1B,YAUPgD,EAASgB,EAAAA,QAAWC,OAAO,CAC/BwF,KAAM,CACJc,MAAO,OACPC,SAAU,IACVC,SAAU,IACVC,aAAc,GACdC,UAAW,GACXC,aAAc,GACdC,UAAW,UAEbhB,YAAa,CACXiB,cAAe,MACfC,WAAY,Y,+DCrChB,MAuEA,EAvEoBC,EAAGrF,cAEnB1D,EAAAA,EAAAA,KAACuH,EAAAA,QAAI,CAACzG,MAAOC,EAAOyG,KAAK/H,UACvBO,EAAAA,EAAAA,KAACgJ,EAAAA,QAAc,CACb5B,MAAQ,YAAW1D,EAAQuF,UAC3BC,KAAOC,IACLnJ,EAAAA,EAAAA,KAACgJ,EAAAA,QAAS5F,OAAAC,OAAA,GACJ8F,EAAK,CACT9B,KAAMA,EAAGS,OAAMR,YACbtH,EAAAA,EAAAA,KAACoJ,EAAAA,QAAsB,CACrBpB,KAAK,wBACLF,KAAMA,EACNR,MAAOA,OAKf+B,MAAQF,IACNnJ,EAAAA,EAAAA,KAACoJ,EAAAA,QAAsB,CACrBpB,KAAMmB,EAAMG,WAAa,aAAe,eACxCxB,KAAM,GACNR,MAAM,SAGViC,WAAYxI,EAAOyI,eACnB1I,MAAOC,EAAO0I,UAAUhK,SAEJ,IAAnBiE,EAAQuF,QACPjJ,EAAAA,EAAAA,KAACgJ,EAAAA,QAAS,CACR5B,MAAM,iBACN8B,KAAOC,IACLnJ,EAAAA,EAAAA,KAACgJ,EAAAA,QAAS5F,OAAAC,OAAA,GACJ8F,EAAK,CACT9B,KAAMA,EAAGS,OAAMR,YACbtH,EAAAA,EAAAA,KAACoJ,EAAAA,QAAsB,CACrBpB,KAAK,uBACLF,KAAMA,EACNR,MAAOA,OAKfiC,WAAY,CAAEjC,MAAO,UAGvB5D,EAAQ2B,KAAI,CAAC1B,EAAQ+F,KACnBhC,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAAApC,SAAA,EACHO,EAAAA,EAAAA,KAACgJ,EAAAA,QAAS,CACR5B,MAAOzD,EAAOmC,OACd6D,YAAahG,EAAOiG,MACpBV,KAAMA,KACJlJ,EAAAA,EAAAA,KAAC6H,EAAAA,QAAW,CACVC,KAAM,GACN+B,MAAOlG,EAAOmC,OAASnC,EAAOmC,OAAO,GAAGgE,cAAgB,IACxDhJ,MAAOC,EAAOgJ,OACdzC,MAAM,SAGViC,WAAYxI,EAAOiJ,UACnBC,iBAAkBlJ,EAAOmJ,gBACzBpJ,MAAOC,EAAOoJ,WAEfT,EAAMhG,EAAQuF,OAAS,IAAKjJ,EAAAA,EAAAA,KAACoK,EAAAA,QAAO,MAhB5BzG,EAAOH,UA2BxBzC,EAASgB,EAAAA,QAAWC,OAAO,CAC/BwF,KAAM,CACJc,MAAO,OAEPC,SAAU,IACVE,aAAc,GACdC,UAAW,GACXC,aAAc,GACd0B,SAAU,UAEZZ,UAAW,CAAC,EACZD,eAAgB,CACdlC,MAAO,OACPe,WAAY,OACZiC,SAAU,IAEZH,SAAU,CACRlC,gBAAiB,OACjBsC,gBAAiB,EACjBC,kBAAmB,GAErBR,UAAW,CACT1C,MAAO,UACPe,WAAY,MACZiC,SAAU,IAEZJ,gBAAiB,CACf5C,MAAO,OACPgD,SAAU,IAEZP,OAAQ,CACN9B,gBAAiB,UACjBwC,YAAa,KC9CjB,GA3DmBC,KACjB,MAAM,MAAEpC,IAAUqC,EAAAA,EAAAA,WACZC,EAAgBtC,EAAQ,KAExB,KAAE5K,EAAI,QAAE6B,GAAYW,KACpB,MAAE7B,EAAK,WAAEoE,EAAU,UAAEE,EAAS,UAAEE,GAAcmE,IAC9C6D,EAAWlI,GAAapD,EAExBuL,EAAsBzM,EAAMwF,QAAO,CAACkH,EAAOvM,IACxCuM,GAASvM,EAAK2H,iBAAmB,IACvC,IACG,OAAE6E,EAAM,MAAEC,GCrBYC,MAC5B,MAAMC,EAAM,IAAIC,KACVC,EAAOF,EAAIG,WAEjB,IAAIN,EAmBJ,OAhBEA,EADEK,GAAQ,GAAKA,EAAO,GACb,iBACAA,GAAQ,IAAMA,EAAO,GACrB,gBAEA,gBAYJ,CACLL,SACAC,MAJYE,EAAII,mBAAmB,QANa,CAChDC,IAAK,UACLC,MAAO,OACPC,KAAM,YAQP,EDLyBR,GAE1B,OACElL,EAAAA,EAAAA,KAACI,EAAM,CAAAX,SACJoL,GACC7K,EAAAA,EAAAA,KAAC2L,EAAAA,QAAiB,CAAC7D,KAAM,QAASR,MAAOJ,KAEzCQ,EAAAA,EAAAA,MAAAkE,EAAAA,SAAA,CAAAnM,SAAA,EACEiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAO,CAACC,GAAO8K,OAAQjB,GAAiB7J,GAAO+K,aAAarM,SAAA,EAChEiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAAApC,SAAA,EACHO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,cAAa3I,SAAG,GAAEuL,MAAWtN,GAAMoI,YACjD9F,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,cAAa3I,SACxB/B,GAAM8I,WAAa,WAAa,eAGrCxG,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAO8J,GAAiB,CAAEmB,UAAW,GAAItM,UAC7CO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,YAAW3I,SAAEwL,UAG/BvD,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAOiL,eAAevM,SAAA,EACjCO,EAAAA,EAAAA,KAACmH,EAAe,CACdC,MAAM,QACNrJ,MAAOM,EAAM4K,OACb5B,KAAK,SACLC,MAAOJ,KAETlH,EAAAA,EAAAA,KAACmH,EAAe,CACdC,MAAM,SACNrJ,MAAO+M,EACPzD,KAAK,WACLC,MAAM,YAQP5J,GAAM8I,aACLxG,EAAAA,EAAAA,KAAC+I,EAAW,CAACrF,QAASN,OAAOiD,OAAO5D,YAKrC,EAMP1B,GAASgB,EAAAA,QAAWC,OAAO,CAC/B6J,OAAQ,CACNhD,cAAe,MACfoD,eAAgB,gBAChBnD,WAAY,aACZL,aAAc,GACdyD,IAAK,IAEPJ,YAAa,CACXjD,cAAe,SACfC,WAAY,aACZoD,IAAK,GAEPF,eAAgB,CACdG,SAAU,OACVC,aAAc,SACdH,eAAgB,gBAChBC,IAAK,GACLzD,aAAc,IAEhB4D,qBAAsB,CACpBN,UAAW,M,uEExEf,MAAMO,GAAcC,GAAAA,SAAaC,MAAM,CACrC5C,MAAO2C,GAAAA,SAAa3C,MAAM,qBAAkB6C,SAAS,aACrDC,SAAUH,GAAAA,SAAaI,IAAI,EAAG,0BAAuBF,SAAS,eAGjD,SAASG,KACtB,MAAMC,GAAaC,EAAAA,EAAAA,kBACb,QAAEvN,EAAO,QAAEJ,EAAO,SAAEE,GAAaa,KACjC,SAAEoG,GAAaU,KACf,OAAE3G,IAAWC,EAAAA,EAAAA,YACbyM,EAAc1P,MAClBgJ,EACA2G,EACAC,EACAC,KAEA,IACE,MAAMzI,QCxBLpH,eAAyB0B,GAC9B,MAAM0F,QAAiBC,MAAO,GAAEtC,gBAAuB,CACrDuC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBuI,KAAM3P,KAAKC,UAAUsB,KAGvB,IAAK0F,EAASK,GAAI,CAChB,MAAMC,QAAkBN,EAAS9F,OACjC,MAAM,IAAIqG,MAAMD,EAAUE,QAAU,6BACtC,CAEA,aAAaR,EAAS9F,MACxB,CDS6ByO,CAAU/G,GACjC6G,IACA/N,EAAQsF,EAAS/G,MACjB2B,EAASoF,EAAS4I,oBACZjQ,EAASqH,EAAS/G,YAClBG,EAAc,QAAS4G,EAAS4I,cACtC/G,EAAS7B,EAAS4I,cAClBR,EAAWS,SAAS,OACtB,CAAE,MAAO3P,GACPsP,EAAS,4BACX,CAAC,QACCD,GAAc,EAChB,GAGF,OACEhN,EAAAA,EAAAA,KAACI,EAAM,CAAAX,SACJF,GACCS,EAAAA,EAAAA,KAACmI,GAAAA,QAAI,CAAA1I,SAAC,kBAENO,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAOC,GAAOwM,UAAU9N,UAC5BiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAOyG,KAAK/H,SAAA,EACvBO,EAAAA,EAAAA,KAACmI,GAAAA,QAAI,CAACrH,MAAOC,GAAOqG,MAAM3H,SAAC,uBAE3BO,EAAAA,EAAAA,KAACwN,GAAAA,OAAM,CACLC,cAAe,CAAE7D,MAAO,GAAI8C,SAAU,IACtCgB,iBAAkBpB,GAClBqB,SAAUA,CAACtH,GAAU2G,gBAAeY,YAAWV,eAC7CH,EACE1G,EACA2G,GACCa,GAAQD,EAAU,CAAElB,SAAUmB,KAC/BX,GAEHzN,SAEAA,EACCqO,eACAC,aACAC,eACA3H,SACA4H,SACAC,UACAC,mBAEAzG,EAAAA,EAAAA,MAAAkE,EAAAA,SAAA,CAAAnM,SAAA,EACEO,EAAAA,EAAAA,KAACoO,GAAAA,QAAS,CACRtN,MAAOC,GAAOsN,MACdC,YAAY,QACZC,aAAcT,EAAa,SAC3BU,OAAQT,EAAW,SACnBhQ,MAAOsI,EAAOuD,MACd6E,aAAa,gBACbC,eAAe,SAEhBR,EAAQtE,OAASqE,EAAOrE,QACvB5J,EAAAA,EAAAA,KAACmI,GAAAA,QAAI,CAACrH,MAAOC,GAAOpD,MAAM8B,SAAEwO,EAAOrE,SAGrC5J,EAAAA,EAAAA,KAACoO,GAAAA,QAAS,CACRtN,MAAOC,GAAOsN,MACdC,YAAY,gBACZC,aAAcT,EAAa,YAC3BU,OAAQT,EAAW,YACnBhQ,MAAOsI,EAAOqG,SACdiC,iBAAe,IAEhBT,EAAQxB,UAAYuB,EAAOvB,WAC1B1M,EAAAA,EAAAA,KAACmI,GAAAA,QAAI,CAACrH,MAAOC,GAAOpD,MAAM8B,SAAEwO,EAAOvB,YAGrC1M,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLC,QAASb,EACTlN,MAAO,CACLmH,gBAAiB5H,EAAOyO,SACxBvE,gBAAiB,EACjBwB,UAAW,IACXtM,SAED0O,GACCnO,EAAAA,EAAAA,KAAC2L,GAAAA,QAAiB,CAACrE,MAAM,UAEzBtH,EAAAA,EAAAA,KAACmI,GAAAA,QAAI,CAACrH,MAAOC,GAAOgO,WAAWtP,SAAC,0BAWtD,CAEA,MAAMsB,GAASgB,EAAAA,QAAWC,OAAO,CAC/BuL,UAAW,CACTnM,KAAM,EAEN6K,eAAgB,SAChBnD,WAAY,UAEdtB,KAAM,CACJc,MAAO,MACPnG,QAAS,GACTwG,aAAc,GACdV,gBAAiB,YACjBS,UAAW,EACXsG,YAAa,OACbC,aAAc,CAAE3G,MAAO,EAAG4G,OAAQ,GAClCC,cAAe,GACfC,aAAc,EACd7G,SAAU,KAEZnB,MAAO,CACLkD,SAAU,GACVjC,WAAY,OACZI,aAAc,GACd4G,UAAW,UAEbhB,MAAO,CACLa,OAAQ,GACRI,YAAa,OACbC,YAAa,EACb5G,aAAc,EACd6B,kBAAmB,GACnBuB,UAAW,GACX9D,gBAAiB,QAEnBtK,MAAO,CACL2J,MAAO,MACPgD,SAAU,GACVyB,UAAW,EACX7D,WAAY,GAEd6G,WAAY,CACVzH,MAAO,OACPe,WAAY,MACZiC,SAAU,M,0BExJd,MAAMoD,GAAmBnB,GAAAA,OAAW,CAClCvE,KAAMuE,GAAAA,SAAaE,SAAS,4BAC5B7C,MAAO2C,GAAAA,SACJ3C,MAAM,sBACN6C,SAAS,4BACZ+C,gBAAiBjD,GAAAA,SAAaE,SAAS,qBACvCgD,YAAalD,GAAAA,SAAaI,IAAI,EAAG,sCAgS7B5L,GAASgB,EAAAA,QAAWC,OAAO,CAC/BuL,UAAW,CACTrL,SAAU,EACVC,QAAS,GACT2G,WAAY,SACZ4G,UAAW,QAEb7D,OAAQ,CACNxD,WAAY,OACZiC,SAAU,GACVyB,UAAW,GACXtD,aAAc,EACdG,UAAW,aACX+G,cAAe,IAEjBC,UAAW,CACTnH,aAAc,GACdG,UAAW,aACX0B,SAAU,GACVuF,QAAS,KAEXC,gBAAiB,CACfhH,WAAY,SACZiH,eAAgB,GAChBzH,MAAO,QAET0H,WAAY,CACVnH,cAAe,MACfoD,eAAgB,gBAChBnD,WAAY,SACZmH,aAAc,EACdhO,WAAY,GAEdiO,UAAW,CACT5F,SAAU,GACVjC,WAAY,QAEd8H,aAAc,CACZ7F,SAAU,IAEZ8F,WAAY,CACVrE,UAAW,GACXpD,aAAc,GACdH,SAAU,IACVE,UAAW,EACXE,UAAW,UAEbpB,KAAM,CACJc,MAAO,OACPC,SAAU,IACVK,UAAW,SACXmD,UAAW,GACXvB,kBAAmB,EACnB7B,aAAc,GACdD,UAAW,GAEb2H,KAAM,CACJnE,IAAK,EACLH,UAAW,EACXzD,MAAO,QAET+F,MAAO,CACL5F,aAAc,GAEhB9K,MAAO,CACL2M,SAAU,GACV7B,aAAc,EACdP,WAAY,GAEdoI,YAAa,CACXvE,UAAW,GACXlD,cAAe,MACfoD,eAAgB,WAChBC,IAAK,GAEPqE,WAAY,CACVrI,WAAY,EACZS,aAAc,GACdH,SAAU,KAEZgI,aAAc,CACZlB,YAAa,OACb3G,aAAc,GACdH,SAAU,KAEZiI,aAAc,CACZ1E,UAAW,GACXzD,MAAO,OACPC,SAAU,IACVK,UAAW,SACXD,aAAc,GACd4G,YAAa,EACbD,YAAa,UACbhI,MAAO,aAIX,GA9XgBoJ,KACd,MAAM,KAAEhT,GAASwC,KACVyQ,EAAUC,IAAelR,EAAAA,EAAAA,WAAS,IAClCoG,EAAQ+K,IAAanR,EAAAA,EAAAA,UAAShC,GAAMoI,SACpCgL,EAAUC,IAAerR,EAAAA,EAAAA,UAAShC,GAAMoT,WACxClH,IAASlK,EAAAA,EAAAA,UAAShC,GAAMkM,QACzB,OAAEvJ,IAAWC,EAAAA,EAAAA,aACb,MAAEgI,IAAUqC,EAAAA,EAAAA,YAEX+B,EAAUsE,IAAetR,EAAAA,EAAAA,UAAS,KAClCuR,EAAiBC,IAAsBxR,EAAAA,EAAAA,UAAS,IAEjDyR,EAAaA,IAAMP,GAAY,GAE/BQ,EAAeA,KACnBR,GAAY,GACZI,EAAY,IACZE,EAAmB,GAAG,EAWxB,OACElR,EAAAA,EAAAA,KAACI,EAAM,CAAAX,UACLiI,EAAAA,EAAAA,MAACjG,EAAAA,QAAU,CAACC,sBAAuB,CAACX,GAAOwM,UAAU,GAAI9N,SAAA,EACvDO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CACHC,QAAQ,aACRtH,MAAO,CAACC,GAAO8K,OAAQ,CAAEvE,MAAOjH,EAAOG,UAAWf,SACnD,YAGDO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CACHC,QAAQ,aACRtH,MAAO,CAACC,GAAO6O,UAAW,CAAEtI,MAAOjH,EAAOgR,mBAAoB5R,SAC/D,2CAIDiI,EAAAA,EAAAA,MAACH,EAAAA,QAAI,CAACzG,MAAO,CAACC,GAAOyG,KAAM,CAAES,gBAAiB5H,EAAOiR,UAAW7R,SAAA,EAC9DO,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAOC,GAAOiP,WAAWvQ,UAC7BO,EAAAA,EAAAA,KAACuH,EAAAA,QAAKgK,MAAK,CACTnK,MAAM,0BACNoK,SAAS,wCACTjI,WAAY,CAACxI,GAAOmP,UAAW,CAAE5I,MAAOjH,EAAOG,UAC/CiR,cAAe,CACb1Q,GAAOoP,aACP,CAAE7I,MAAOjH,EAAOgR,wBAItBrR,EAAAA,EAAAA,KAACoK,EAAAA,QAAO,CACNtJ,MAAO,CAAE2H,aAAc,EAAGR,gBAAiB5H,EAAOqR,mBAEpD1R,EAAAA,EAAAA,KAACuH,EAAAA,QAAKI,QAAO,CAAAlI,UACXO,EAAAA,EAAAA,KAACwN,GAAAA,OAAM,CACLC,cAAe,CACbzF,KAAMlC,GAAU,GAChBgL,SAAUA,GAAY,GACtBlH,MAAOA,GAAS,GAChB6F,YAAa,GACbwB,gBAAiB,IAEnBvD,iBAAkBA,GAClBC,SAAWtH,IAhDjBqG,GAAYA,IAAauE,EAC3BU,GAAAA,QAAMC,MAAM,QAAS,oCAGvBhB,GAAY,EA6CY,EAEdiB,oBAAkB,EAAApS,SAEjBA,EACCqO,eACAC,aACAC,eACA3H,SACA4H,SACAC,cAEAxG,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAOsP,KAAK5Q,SAAA,EACvBO,EAAAA,EAAAA,KAACoO,GAAAA,QAAS,CACRvE,MAAM,SACN9L,MAAO+H,EACPyI,aAAcsC,EACdF,SAAUA,EACVlJ,KAAK,OACL3G,MAAO,CACLC,GAAOsN,MACP,CACEpG,gBAAiB0I,EACbtQ,EAAOI,WACPJ,EAAOyR,kBAGfnU,QAASsQ,EAAOjG,MAAQkG,EAAQlG,KAChCwG,OAAQT,EAAW,QACnB7E,MACElJ,EAAAA,EAAAA,KAACoO,GAAAA,QAAU2D,KAAI,CACb1K,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAK,iBACLV,MAAOA,EACPQ,KAAMA,QAMf6I,GAAY1C,EAAOjG,MAAQkG,EAAQlG,OAClChI,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACrH,MAAO,CAACC,GAAOpD,MAAO,CAAE2J,MAAOjH,EAAO1C,QAAS8B,SAClDwO,EAAOjG,QAIZhI,EAAAA,EAAAA,KAACoO,GAAAA,QAAS,CACRvE,MAAM,WACN9L,MAAO+S,EACPvC,aAAcwC,EACdJ,SAAUA,EACVlJ,KAAK,OACL3G,MAAO,CACLC,GAAOsN,MACP,CACEpG,gBAAiB0I,EACbtQ,EAAOI,WACPJ,EAAOyR,kBAGfnU,QAASsQ,EAAO6C,UAAY5C,EAAQ4C,SACpCtC,OAAQT,EAAW,YACnB7E,MACElJ,EAAAA,EAAAA,KAACoO,GAAAA,QAAU2D,KAAI,CACb1K,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAK,iBACLV,MAAOA,EACPQ,KAAMA,QAMf6I,GAAY1C,EAAO6C,UAAY5C,EAAQ4C,WACtC9Q,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACrH,MAAO,CAACC,GAAOpD,MAAO,CAAE2J,MAAOjH,EAAO1C,QAAS8B,SAClDwO,EAAO6C,YAIZ9Q,EAAAA,EAAAA,KAACoO,GAAAA,QAAS,CACRvE,MAAM,QACN9L,MAAO6L,EACP+G,UAAU,EACVlJ,KAAK,OACL3G,MAAO,CACLC,GAAOsN,MACP,CAAEpG,gBAAiB5H,EAAOyR,kBAE5B5I,MACElJ,EAAAA,EAAAA,KAACoO,GAAAA,QAAU2D,KAAI,CACb1K,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAK,eACLV,MAAOA,EACPQ,KAAMA,QAOf6I,IACCjJ,EAAAA,EAAAA,MAAAkE,EAAAA,SAAA,CAAAnM,SAAA,EACEO,EAAAA,EAAAA,KAACoO,GAAAA,QAAS,CACRvE,MAAM,cACN8E,iBAAe,EACfqD,gBAAgB,cAChBjU,MAAO2O,EACP6B,aAAcyC,EACd1C,YAAY,WACZ7G,KAAK,OACL3G,MAAO,CACLC,GAAOsN,MACP,CAAEpG,gBAAiB5H,EAAOI,aAE5B9C,QAASsQ,EAAOwB,aAAevB,EAAQuB,YACvCjB,OAAQT,EAAW,eACnB7E,MACElJ,EAAAA,EAAAA,KAACoO,GAAAA,QAAU2D,KAAI,CACb1K,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAK,sBACLV,MAAOA,EACPQ,KAAMA,QAMfmG,EAAOwB,aAAevB,EAAQuB,cAC7BzP,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACrH,MAAO,CAACC,GAAOpD,MAAO,CAAE2J,MAAOjH,EAAO1C,QAAS8B,SAClDwO,EAAOwB,eAIZzP,EAAAA,EAAAA,KAACoO,GAAAA,QAAS,CACRvE,MAAM,gBACN8E,iBAAe,EACf5Q,MAAOkT,EACP1C,aAAc2C,EACd5C,YAAY,WACZ7G,KAAK,OACL3G,MAAO,CAACC,GAAOsN,MAAM,GACrBnF,MACElJ,EAAAA,EAAAA,KAACoO,GAAAA,QAAU2D,KAAI,CACb1K,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAK,sBACLV,MAAOA,EACPQ,KAAMA,SAOhBJ,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAOuP,YAAY7Q,SAAA,EAC9BO,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLnH,KAAK,WACL3G,MAAO,CACLC,GAAOyP,aACP,CAAElB,YAAajP,EAAO4R,SACtB3J,EAAQ,KAAO,CAAElH,KAAM,IAEzByN,QAASuC,EACTc,WAAY,CAAE5K,MAAOjH,EAAOG,SAAUf,SACvC,cAGDO,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLnH,KAAK,YACL3G,MAAO,CACLC,GAAOwP,WACP,CAAEtI,gBAAiB5H,EAAOG,SAC1B8H,EAAQ,KAAO,CAAElH,KAAM,IAEzByN,QAASb,EACTkE,WAAY,CAAE5K,MAAOjH,EAAO8R,WAAY1S,SACzC,mBAOLkR,IACA3Q,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACL9N,MAAO,CACLC,GAAOqP,WACP,CAAEnI,gBAAiB5H,EAAOG,SAC1B8H,EAAQ,KAAO,CAAEA,MAAO,OAAQM,UAAW,WAE7CnB,KAAK,YACLJ,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CAACC,KAAK,SAASV,MAAOA,EAAOQ,KAAMA,IAE9C+G,QAASsC,EACTe,WAAY,CAAE5K,MAAOjH,EAAO8R,UAAW7H,SAAU,IACjD8H,aAAc,CAAE7H,gBAAiB,GAAI9K,SACtC,yBAUR,E,+CCzTN,MAAM4S,GAAcA,CAACvM,EAAiBgL,IAGnC,GAFEhL,GAAQwM,SAAS,IAAIxI,eAAiB,KACtCgH,GAAUwB,SAAS,IAAIxI,eAAiB,KC6D9C/I,GAASgB,EAAAA,QAAWC,OAAO,CAC/BuQ,QAAS,CACPzJ,WAAY,SACZL,aAAc,GACdF,SAAU,IACViK,OAAQ,GACRlK,MAAO,QAETyB,OAAQ,CACN9B,gBAAiB,WAEnBD,KAAM,CACJ+D,UAAW,EACX1D,WAAY,QAEdoK,KAAM,CACJnI,SAAU,GACVhD,MAAO,aAIX,GAvEmBoL,EACjB7P,YACA8P,eAAc,EACdjV,OACA6B,cAEA,MAAM,OAAEc,IAAWC,EAAAA,EAAAA,YAEnB,OACEoH,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CACHf,MAAO,CACLC,GAAOwR,QACPI,GAAe,CACb1K,gBAAiB5H,EAAOI,WACxBkI,aAAc,GACdxG,QAAS,GACTuG,UAAW,EACXsG,YAAa,OACbC,aAAc,CAAE3G,MAAO,EAAG4G,OAAQ,GAClCC,cAAe,GACfC,aAAc,OAEhB3P,SAAA,EAEFO,EAAAA,EAAAA,KAAC6H,EAAAA,QAAW,CACVgC,MAAOwI,GAAY3U,GAAMoI,OAAQpI,GAAMoT,UACvChJ,KAAM,GACNhH,MAAOC,GAAOgJ,UAEhB/J,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,aAAatH,MAAOC,GAAOiH,KAAKvI,SAC3CF,EAAU,WAAc,GAAE7B,GAAMoI,UAAUpI,GAAMoT,cAEjD6B,IACA3S,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,YAAYtH,MAAOC,GAAO0R,KAAKhT,SAC1CF,EAAU,WAAa7B,GAAM8I,WAAa,WAAa,WAI3DmM,IACCjL,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAAApC,SAAA,EACHO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,aAAY3I,SAAC,mBAC3BO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,aAAatH,MAAO,CAAEuO,UAAW,UAAW5P,SACvDoD,SAIF,E,oCCzDJ,MAAM+P,GAAoBxP,OAAAC,OAAA,GAC5BwP,GAAAA,cAAc,CACjBxS,OAAM+C,OAAAC,OAAA,GACDwP,GAAAA,cAAcxS,OAAO,CACxBG,QAAS,UACTC,WAAY,UACZ6Q,QAAS,UACTwB,KAAM,UACNC,UAAW,UACXC,OAAQ,UACRC,gBAAiB,UACjBC,gBAAiB,UACjBC,eAAgB,cAIPC,GAAmBhQ,OAAAC,OAAA,GAC3BgQ,GAAAA,aAAa,CAChBhT,OAAM+C,OAAAC,OAAA,GACDgQ,GAAAA,aAAahT,OAAO,CACvBG,QAAS,UACTC,WAAY,UACZ6Q,QAAS,UACTwB,KAAM,UACNC,UAAW,UACXC,OAAQ,UACRC,gBAAiB,UACjBC,gBAAiB,UACjBC,eAAgB,c,eCxBpB,MAAMG,IAAepU,EAAAA,EAAAA,eAAc,CACjCqU,YAAY,EACZC,YAAaA,OACbC,MAAOb,KAGIc,GAAgBA,EAAGjU,eAC9B,MAAMkU,GAAoBC,EAAAA,GAAAA,YACnBC,EAAgBC,IAAqBpU,EAAAA,EAAAA,WAAS,IAC9C6T,EAAYQ,IAAiBrU,EAAAA,EAAAA,UAA+B,SAAtBiU,IAE7C/T,EAAAA,EAAAA,YAAU,KACUvC,WAChB,MAAM2W,QAAehW,EAAe,SACrB,UAAXgW,GAAiC,SAAXA,GACxBF,GAAkB,GAClBC,EAAyB,SAAXC,KAEdF,GAAkB,GAClBC,EAAoC,SAAtBJ,GAChB,EAEFM,EAAW,GACV,KAEHrU,EAAAA,EAAAA,YAAU,KACJiU,GAAkBF,GACpBI,EAAoC,SAAtBJ,EAChB,GACC,CAACA,EAAmBE,KAEvBjU,EAAAA,EAAAA,YAAU,KACR,MAAMsU,EAAWC,GAAAA,QAAWC,mBAAkB,EAAGC,kBAC/CN,EAA8B,SAAhBM,EAAuB,IAEvC,MAAO,IAAMH,EAASI,QAAQ,GAC7B,IAEH,MAOMb,EAAQF,EAAaH,GAAYR,GAEvC,OACE5S,EAAAA,EAAAA,KAACsT,GAAarT,SAAQ,CAAClC,MAAO,CAAEwV,aAAYC,YAV1BnW,UAClB,MAAMkX,GAAYhB,EAClBQ,EAAcQ,GACdT,GAAkB,SACZjW,EAAc,QAAS0W,EAAW,OAAS,QAAQ,EAMAd,SAAQhU,SAC9DA,GACqB,EAIf+U,GAAkBA,KAAMrU,EAAAA,EAAAA,YAAWmT,IC/CjC,SAASmB,GAAoBtL,GAC1C,MAAM,WAAEoK,EAAU,YAAEC,GAAgBgB,MAC9B,KAAE9W,EAAI,QAAE6B,EAAO,OAAED,GAAWY,IAE5BwU,EAAc,CAClB,CACErN,KAAM,eACNwC,MAAO,YACP8K,OAAQ,QAEV,CACEtN,KAAM,iBACNwC,MAAO,SACP8K,OAAQ,UAEV,CACEtN,KAAM,eACNwC,MAAO,YACP8K,OAAQ,iBAEV,CACEtN,KAAM,eACNwC,MAAOnM,EACHA,EAAK8I,WACH,YACA,gBACF,YACJmO,OAAQ,aAIN9H,GAAaC,EAAAA,EAAAA,iBACnB,OACE9M,EAAAA,EAAAA,KAAC4U,EAAAA,wBAAuBxR,OAAAC,OAAA,GAAK8F,EAAK,CAAEzH,sBAAuB,CAAEN,KAAM,GAAI3B,UACrEiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAOwM,UAAU9N,SAAA,EAE5BO,EAAAA,EAAAA,KAAC0S,GAAU,CAAChV,KAAMA,EAAM6B,QAASA,EAASoT,aAAa,KAEvD3S,EAAAA,EAAAA,KAAC6U,GAAAA,QAAc,CAAC/T,MAAOC,GAAO+T,IAAIrV,SAC/BiV,EAAYrP,KAAI,CAACtB,EAAMgR,KACtB/U,EAAAA,EAAAA,KAACgV,EAAAA,WAAU,CAET3N,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CAACC,KAAMjE,EAAKsD,KAAaC,MAAOA,EAAOQ,KAAMA,IAExD+B,MAAO9F,EAAK8F,MACZgF,QAASA,IAAM1F,EAAM0D,WAAWS,SAASvJ,EAAK4Q,SALzCI,QAWXrN,EAAAA,EAAAA,MAACmN,GAAAA,QAAc,CAAC/T,MAAOC,GAAOkU,OAAOxV,SAAA,EACnCO,EAAAA,EAAAA,KAACgV,EAAAA,WAAU,CACT3N,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAMuL,EAAa,OAAS,QAC5BjM,MAAOA,EACPQ,KAAMA,IAGV+B,MAAO0J,EAAa,cAAgB,aACpC1E,QAAS2E,EACT1S,MAAOC,GAAOmU,UAEd7L,MAAOA,KACLrJ,EAAAA,EAAAA,KAACmV,GAAAA,QAAM,CAACpX,MAAOwV,EAAY6B,cAAe5B,OAI9CxT,EAAAA,EAAAA,KAACgV,EAAAA,WAAU,CACT3N,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAACqV,GAAAA,QAAO,CAACrN,KAAK,UAAUV,MAAOA,EAAOQ,KAAMA,IAE9C+B,MAAM,mBACNgF,QAASA,KACPvP,IACAuN,EAAWyI,SACTC,EAAAA,cAAAA,MAAoB,CAClBR,MAAO,EACPS,OAAQ,CAAC,CAAExN,KAAM,YAEpB,YAOf,CAEA,MAAMjH,GAASgB,EAAAA,QAAWC,OAAO,CAC/BuL,UAAW,CACTnM,KAAM,EACNa,WAAY,IAEd6S,IAAK,CACH/I,UAAW,IAEbkJ,OAAQ,CACNlJ,UAAW,OACX5J,QAAS,GAEXsT,UAAW,CACT5M,cAAe,MACfoD,eAAgB,gBAChBnD,WAAY,SACZL,aAAc,GAEhByM,UAAW,CACTjF,aAAc,K,iFC1GX,MAAMyF,GAAgBA,EAAGC,YAAWC,gBAAejY,YACxD,MAAOkY,EAASC,IAAcpW,EAAAA,EAAAA,WAAS,IAChCqW,EAAUC,IAAetW,EAAAA,EAAAA,UAG7B,CAAEmK,MAAO,iBAAkBrG,GAAI,QAE5B,OAAEnD,IAAWC,EAAAA,EAAAA,YAGb2V,EAAYA,IAAMH,GAAW,GAE7BI,EAAeA,CAACpQ,EAAgBtC,KACpCwS,EAAY,CAAEnM,MAAO/D,EAAQtC,OAC7ByS,IACAL,EAAcpS,EAAG,EAOnB,OAJA5D,EAAAA,EAAAA,YAAU,KACRoW,EAAY,CAAEnM,MAAO,iBAAkBrG,GAAI,MAAO,GACjD,CAACmS,KAGFjO,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAAApC,SAAA,EACHiI,EAAAA,EAAAA,MAACyO,GAAAA,QAAI,CACHN,QAASA,EACTO,UAAWH,EACXI,QACErW,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLnH,KAAM9J,EAAQ,kBAAoB,WAClCkR,QArBOyH,IAAMR,GAAW,GAsBxB1D,aAAcrR,GAAOwV,cACrBzV,MAAO,CAACC,GAAOyV,OAAQ7Y,GAAS,CAAE2R,YAAajP,EAAO1C,QAAS8B,UAE/DiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAO0V,cAAchX,SAAA,EAChCO,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAK,eACLF,KAAM,GACNR,MAAO3J,EAAQ0C,EAAO1C,MAAQ0C,EAAOqW,UACrC5V,MAAOC,GAAO4V,YAEhBjP,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAO6V,iBAAiBnX,SAAA,EACnCO,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAM6N,EAAU,aAAe,eAC/B/N,KAAM,GACNR,MAAO3J,EAAQ0C,EAAO1C,MAAQ0C,EAAOqW,UACrC5V,MAAOC,GAAO8V,aAEhB7W,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAAApC,UACHO,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLnH,KAAK,OACL3G,MAAOC,GAAO+V,WACdC,UAAQ,EACR7E,WAAY,CAAE5K,MAAOjH,EAAOqW,WAAYjX,SAEvCsW,EAASlM,kBAMrBpK,SAAA,EAEDO,EAAAA,EAAAA,KAACmW,GAAAA,QAAKa,KAAI,CAERnI,QAASA,IAAMqH,EAAa,iBAAkB,MAC9C9O,MAAM,iBACN6P,YAAaA,KACXjX,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CAACC,KAAK,kBAAkBF,KAAM,GAAIR,MAAOjH,EAAOG,WAJvD,iBAONR,EAAAA,EAAAA,KAACoK,EAAAA,QAAO,IACPuL,EAAUtQ,KAAKtB,IACd/D,EAAAA,EAAAA,KAACmW,GAAAA,QAAKa,KAAI,CAERnI,QAASA,IAAMqH,EAAanS,EAAK+B,OAAQ/B,EAAKmT,SAC9C9P,MAAOrD,EAAK+B,OACZmR,YAAaA,KACXjX,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAK,iBACLF,KAAM,GACNR,MAAOjH,EAAOG,WAPbuD,EAAKmT,cAcfvZ,IACCqC,EAAAA,EAAAA,KAACmX,GAAAA,QAAU,CAACC,KAAK,QAAQvB,QAASlY,EAAM8B,SAAC,qCAItC,EAILsB,GAASgB,EAAAA,QAAWC,OAAO,CAC/BuU,cAAe,CACb1N,cAAe,MACfoD,eAAgB,iBAElBuK,OAAQ,CACNjH,YAAa,GAEfkH,cAAe,CACb5N,cAAe,MACfC,WAAY,UAEd8N,iBAAkB,CAChB/N,cAAe,MACfC,WAAY,SACZoD,IAAK,GAEPyK,SAAU,CACRlM,YAAa,GAEfoM,UAAW,CACTpM,YAAa,GAEfqM,WAAY,CACVtM,kBAAmB,KC+NvB,GAtUsB6M,EACpBxB,UACAO,YACA1Y,OACA8I,aACA8Q,mBAEA,IAAK5Z,EAAM,OAAO,KAClB,MAAM,OAAE2C,IAAWC,EAAAA,EAAAA,aACZiX,EAAKC,IAAU9X,EAAAA,EAAAA,UAAS8G,EAAa,UAAY,cACjD5C,EAAU6T,IAAe/X,EAAAA,EAAAA,UAAS,MAClCgY,EAAUC,IAAejY,EAAAA,EAAAA,UAAS,KAClCkY,EAAMC,IAAWnY,EAAAA,EAAAA,UAAiB,MAClCoY,EAAqBC,IAA0BrY,EAAAA,EAAAA,UACpD,OAEKsY,EAAcC,IAAmBvY,EAAAA,EAAAA,WAAS,IAC1CwY,EAASC,IAAczY,EAAAA,EAAAA,UAAS,KACjC,UAAEmD,EAAS,cAAE4D,GAAkBO,KAC/B,MAAE5H,GAAUc,KACXX,EAASI,IAAcD,EAAAA,EAAAA,WAAS,GAEjC0Y,GAAmBC,EAAAA,EAAAA,UAAQ,IAC1B3a,EAED8I,EAEK3D,EACJwC,KAAK7G,IACJ,MAAMmF,EAASnF,EAAKkF,QAAQ4U,MAAMC,GAAMA,EAAE/U,KAAO9F,EAAK8F,KACtD,OAAIG,EACK,CACLuT,QAAS1Y,EAAK0Y,QACdpR,OAAQtH,EAAKsH,OACbjD,UAAWc,EAAOd,WAAa,IAG5B,IAAI,IAEZ2V,QAEGha,GAKY,OAATA,IAEA8Y,EACF,CACL,CACEJ,QAASI,EAAa9T,GACtBsC,OAAQwR,EAAaxR,OACrBjD,UAAWyU,EAAazU,YAKvB,GAnCW,IAoCjB,CAACA,EAAWnF,EAAM8I,EAAY8Q,IAyCjC,OACE5P,EAAAA,EAAAA,MAAC+Q,GAAAA,QAAM,CAAAhZ,SAAA,EACLO,EAAAA,EAAAA,KAAC0Y,GAAAA,QAAQ,CACP7C,QAASmC,GAA4B,KAAZE,EACzBS,SAAU,IACVvC,UAAWA,KACT6B,GAAgB,GAChBE,EAAW,GAAG,EAEhBS,OAAQ,CACN/O,MAAO,OACPgF,QAASA,IAAMoJ,GAAgB,IAC/BxY,SAEDyY,KAEHxQ,EAAAA,EAAAA,MAACmR,GAAAA,QAAK,CACJhD,QAASA,EACTO,UAAWA,EACX1U,sBAAuB,CACrBuG,gBAAiB5H,EAAOiR,QACxBnP,QAAS,GACTqQ,OAAQ,GACR7J,aAAc,GACdL,MAAO,MACPC,SAAU,IACV0D,eAAgB,aAChBrD,UAAW,UACXnJ,SAAA,EAEFO,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CACHf,MAAO,CACL+H,cAAe,MACfoD,eAAgB,SAChBnD,WAAY,SACZR,MAAO,OACP6D,SAAU,SACV9B,SAAU,SACV5B,aAAc,GACdhJ,UAEFO,EAAAA,EAAAA,KAAC8Y,GAAAA,QAAgB,CACf/a,MAAOwZ,EACPnC,cAAeoC,EACfuB,QAAS,CACP,CAAEhb,MAAO,YAAa8L,MAAO,gBACzBrD,EAAa,CAAC,CAAEzI,MAAO,UAAW8L,MAAO,YAAe,IAE9D/I,MAAO,CACLM,KAAM,EACNoH,SAAU,EACVD,SAAU,OACVI,aAAc,GACd0B,SAAU,UAEZ+H,aAAc,CACZvJ,cAAe,MACfsD,SAAU,SACV3D,SAAU,EACVD,SAAU,YAIP,YAARgP,GAAqB/Q,IACpBkB,EAAAA,EAAAA,MAACH,EAAAA,QAAI,CAACE,KAAK,YAAY3G,MAAO,CAAEiL,UAAW,GAAI5J,QAAS,GAAI1C,SAAA,EAC1DO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,cAActH,MAAO,CAAE2H,aAAc,GAAIhJ,SACnD,2BAA0B/B,EAAKoI,UAAUpI,EAAKoT,cAGlD9Q,EAAAA,EAAAA,KAAC0V,GAAa,CACZC,UAAWyC,EACXxC,cAAemC,KAGjB/X,EAAAA,EAAAA,KAACoK,EAAAA,QAAO,CAACtJ,MAAO,CAAEiP,eAAgB,OAElC/P,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,aAAatH,MAAO,CAAE2H,aAAc,GAAIhJ,SAAC,cAGvDiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CACHf,MAAO,CAAE+H,cAAe,MAAOC,WAAY,SAAUoD,IAAK,GAAIzM,SAAA,EAE9DO,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLnH,KAAK,WACLoH,QAASA,IACP4I,GAAauB,GAASC,OAAOC,KAAKC,IAAI,EAAGC,OAAOJ,GAAQ,MACzDvZ,SACF,OAIDO,EAAAA,EAAAA,KAACoO,GAAAA,QAAS,CACRrQ,MAAO6F,EACP2K,aAAckJ,EACdhJ,aAAa,UACbhH,KAAK,WACL3G,MAAO,CAAEM,KAAM,MAGjBpB,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLnH,KAAK,WACLoH,QAASA,IAAM4I,GAAauB,GAASC,OAAOG,OAAOJ,GAAQ,KAAIvZ,SAChE,UAKHO,EAAAA,EAAAA,KAACoO,GAAAA,QAAS,CACRvE,MAAM,WACNpC,KAAK,WACL1J,MAAO2Z,EACPnJ,aAAcoJ,EACd7W,MAAO,CAAEiL,UAAW,OAGtB/L,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,aAAatH,MAAO,CAAEiL,UAAW,IAAKtM,SAAC,0BAGrDO,EAAAA,EAAAA,KAACqZ,GAAAA,QAAYC,MAAK,CAChBlE,cAAgBrX,GAAU8Z,EAAQ9Z,GAClCA,MAAO6Z,EAAKnY,UAEZiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CACHf,MAAO,CACL+H,cAAe,MACfoD,eAAgB,YAChBxM,SAAA,EAEFO,EAAAA,EAAAA,KAACqZ,GAAAA,QAAYrC,KAAI,CAACnN,MAAM,QAAQ9L,MAAM,OACtCiC,EAAAA,EAAAA,KAACqZ,GAAAA,QAAYrC,KAAI,CAACnN,MAAM,SAAS9L,MAAM,YAI3CiC,EAAAA,EAAAA,KAACoK,EAAAA,QAAO,CAACtJ,MAAO,CAAEiP,eAAgB,OAElC/P,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAO,CAAE+H,cAAe,MAAOoD,eAAgB,YAAaxM,UAChEO,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CAACnH,KAAK,YAAYoH,QA/KfxR,UACpB,IAAKya,GAA+C,IAAxBA,EAG1B,OAFAK,EAAW,iDACXF,GAAgB,GAIlB,IAAKP,EAASpF,OAEZ,YADAX,GAAAA,QAAMC,MAAM,cAAY,+BAI1BjS,GAAW,GAEX,MAAM8D,EAA+B,CACnCyT,QAASY,EACTyB,UAAW7b,EAAK8F,GAChBgW,QAAS9B,EACT1T,KAAMoV,OAAOxB,GACbhU,SAAUwV,OAAOxV,IAEnB,Uf5GGvG,eACL+B,EACAL,GAEA,MAAM0F,QAAiBC,MAAO,GAAEtC,eAAsB,CACpDuC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAgB,UAASzF,KAE3B+N,KAAM3P,KAAKC,UAAUsB,KAGvB,IAAK0F,EAASK,GAAI,CAChB,MAAMC,QAAkBN,EAAS9F,OACjC,MAAM,IAAIqG,MAAMD,EAAUE,QAAU,4BACtC,CAEA,aAAaR,EAAS9F,MACxB,Ce0FY8a,CAAcra,EAAOqE,GAC3BgU,EAAY,KACZE,EAAY,IACZE,EAAQ,QACRE,EAAuB,MACvB3B,IACA3P,IACA0R,EAAW,oCACXF,GAAgB,EAClB,CAAE,MAAOta,GACPwa,EAAW,oBACXF,GAAgB,EAClB,CAAC,QACCtY,GAAW,EACb,GA2I0DF,SAC7CF,EAAU,eAAiB,iBAK3B,cAARgY,IACC7P,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAO,CAAEiL,UAAW,IAAKtM,SAAA,EAC7BO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,cAActH,MAAO,CAAE2H,aAAc,GAAIhJ,SAAC,2BAGvD2Y,EAAiBsB,OAAO3V,GAAmC,IAA1BA,EAAKlB,UAAUoG,UAC/CjJ,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACrH,MAAO,CAAEiL,UAAW,GAAItM,SAAC,6BAE/BO,EAAAA,EAAAA,KAACyB,EAAAA,QAAU,CAAAhC,SACR2Y,EACEI,QAAQha,GAASA,EAAKqE,UAAUoG,OAAS,IACzC5D,KAAK7G,IAEJ,MAAMmb,EAAiBnb,EAAKqE,UAAUgB,QACpC,CAACC,EAAK8V,IACJ9V,GACC8V,EAAM5V,KAAO,EAAI4V,EAAMhW,UAAYgW,EAAMhW,WAC5C,GAEF,OACE8D,EAAAA,EAAAA,MAACH,EAAAA,QAAI,CAAoBzG,MAAO,CAAE2H,aAAc,IAAKhJ,SAAA,EACnDO,EAAAA,EAAAA,KAACuH,EAAAA,QAAKgK,MAAK,CACTnK,OACEM,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAEHf,MAAO,CACL+H,cAAe,MACfC,WAAY,UACZrJ,SAAA,EAEFO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAAA1I,SAAEjB,EAAKsH,UACZ9F,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CACHrH,MAAO,CACLoH,WAAY,EACZG,WAAY,OACZf,MAAOqS,GAAkB,EAAI,QAAU,OACvCla,SAEA,IAAGka,SAdFnb,EAAK0Y,YAmBhBlX,EAAAA,EAAAA,KAACuH,EAAAA,QAAKI,QAAO,CAAAlI,SACVjB,EAAKqE,UAAUwC,KAAKuU,IACnBlS,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAAApC,SAAA,EACHiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAEHf,MAAO,CACL+H,cAAe,MACfoD,eAAgB,gBAChB8D,eAAgB,GAChBtQ,SAAA,EAEFO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAAA1I,SACF,IAAI2L,KAAKwO,EAAM3O,OAAOM,wBAEzBvL,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAAA1I,SAAEma,EAAMJ,WACbxZ,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CACHrH,MAAO,CACLwG,MAAOsS,EAAM5V,KAAO,EAAI,QAAU,OAClCvE,SAEDma,EAAM5V,KAAO,EACT,IAAG4V,EAAMhW,WACT,IAAGgW,EAAMhW,eAlBXgW,EAAMpW,KAqBbxD,EAAAA,EAAAA,KAACoK,EAAAA,QAAO,MAvBCwP,EAAMpW,UAzBZhF,EAAK0Y,QAoDT,cAQhB,E,eCzVE,SAAS2C,IAAU,UAChClX,EAAS,SACTmX,EAAQ,OACRC,EAAM,SACNta,EAAQ,aACRua,EAAe,4CAEf,OAAIrX,GAEA3C,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAM,EAAG6K,eAAgB,SAAUnD,WAAY,UAAWrJ,UACvEO,EAAAA,EAAAA,KAAC2L,EAAAA,QAAiB,CAAC7D,KAAK,QAAQR,MAAM,aAKxCwS,GAEApS,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAM,EAAG6K,eAAgB,SAAUnD,WAAY,UAAWrJ,SAAA,EACvEO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CACHC,QAAQ,aACRtH,MAAO,CAAE2H,aAAc,GAAInB,MAAO,UAAW+H,UAAW,UAAW5P,SAElEua,KAEHha,EAAAA,EAAAA,KAACia,GAAAA,QAAK,CACJC,OAAQC,EAAQ,MAChBrZ,MAAO,CACLwH,MAAO,IACP4G,OAAQ,IACRzG,aAAc,GACdE,aAAc,KAEhByR,WAAW,aAEbpa,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CAACnH,KAAK,YAAYoH,QAASkL,EAAOta,SAAC,mBAOzCO,EAAAA,EAAAA,KAAA4L,EAAAA,SAAA,CAAAnM,SAAGA,GACZ,CC1Ce,SAAS4a,IAAa,QACnCC,EAAO,QACPzL,EAAO,WACP0L,EAAa,EAAC,UACdC,EAAS,SACT/W,IAEA,MAAM,OAAEpD,IAAWC,EAAAA,EAAAA,YACnB1C,QAAQU,IAAIic,GASZ,OACEva,EAAAA,EAAAA,KAACuH,EAAAA,QAAI,CACHzG,MAAO,CAACC,GAAOyG,MACfC,KAAK,WACLoH,QAASA,EAAU,IAAMA,EAAQyL,QAAWhY,EAAU7C,UAEtDO,EAAAA,EAAAA,KAACO,EAAAA,eAAc,CACbF,OACEma,IAAc/W,EAhBU8W,IACX,IAAfA,EAAyB,CAAC,cAAe,eACzCA,EAAa,GAAW,CAACla,EAAOI,WAAYJ,EAAO8S,gBACnDoH,EAAa,GAAW,CAACla,EAAOI,WAAYJ,EAAO6S,iBAEhD,CAAC7S,EAAOI,WAAYJ,EAAO4S,iBAYxBwH,CAAuBF,GACvB,CAAC,eAAgB,eAEvB7Z,MAAO,CAAEC,EAAG,GAAKC,EAAG,IACpBC,IAAK,CAAEF,EAAG,EAAGC,EAAG,GAChBE,MAAO,CAAE6H,aAAc,EAAGxG,QAAS,IAAK1C,UAExCiI,EAAAA,EAAAA,MAACH,EAAAA,QAAKI,QAAO,CAAC7G,MAAOC,GAAO6G,YAAYnI,SAAA,EACtCiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAO2Z,SAASjb,SAAA,EAC3BO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,cAAa3I,SAAE6a,EAAQxU,UACrC9F,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAOC,GAAO4Z,YAAYlb,UAC9BO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,YAAW3I,SACrB,GAAE6a,EAAQvU,WAAQuU,EAAQtU,kBAAesU,EAAQrU,uBAIzDyB,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAO6Z,UAAUnb,SAAA,EAC5BO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,aAAY3I,SACvB+a,GAAyB,MAAZ/W,EACV,cACY,MAAZA,EACA,YACA,sBAENzD,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,cAActH,MAAOC,GAAO8Z,WAAWpb,SAClD+a,GAAyB,MAAZ/W,EACT,GAAE8W,KACS,MAAZ9W,EACAA,EACA6W,EAAQnU,2BAO1B,CAEA,MAAMpF,GAASgB,EAAAA,QAAWC,OAAO,CAC/BwF,KAAM,CACJiB,aAAc,GACdH,MAAO,OACPwS,iBAAkB,GAClBvS,SAAU,IACVI,aAAc,EACdD,UAAW,EACXE,UAAW,UAEbhB,YAAa,CACXiB,cAAe,MACfoD,eAAgB,gBAChBnD,WAAY,cAEd4R,SAAU,CACRtZ,KAAM,EACN8K,IAAK,GAEPyO,YAAa,CACX9R,cAAe,MACfC,WAAY,SACZiD,UAAW,EACXG,IAAK,GAGP0O,UAAW,CACT9R,WAAY,YAGd+R,WAAY,CACV9O,UAAW,EACX1D,WAAY,S,eC7FD,SAAS0S,IAAkB,MACxCC,EAAK,WACLC,EAAU,OACVC,EAAM,WACNC,EAAU,WACVC,EAAU,UACVC,EAAS,mBACTC,EAAkB,oBAClBC,EAAmB,OACnB5X,IAEA,MAAM,MAAE2E,IAAUqC,EAAAA,EAAAA,WAEZ6Q,GACO,IAAX7X,EAAkB,EAAIwX,IAA0B7S,GAAS,IAAM,EAAI,GAErE,OACEtI,EAAAA,EAAAA,KAACyb,GAAAA,QAAQ,CACP1c,KAAMic,EAENU,aAAe3X,GAASmX,EAAOnX,GAAM4X,WACrCR,WAAYK,EACZJ,WAAYA,EACZC,UAAWA,EACX3Z,sBAAuB,CACrBS,QAAS,GACT+J,IAAK,GACL0P,cAAe,IAEjBC,mBACEL,EAAkB,EACd,CACEtP,IAAK,GACLD,eAAgB,gBAChBxD,aAAc,SAEhBnG,EAEN2Y,WAAYA,EAAGlX,WACb/D,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAM,EAAGqH,aAAc,IAAKhJ,SAAEwb,EAAWlX,KAE1DuX,mBAAoBA,EACpBC,oBAAqBA,GAvBhBC,EA0BX,CC0IA,MAiKA,GAjKiBM,KACf,MAAM,KAAEpe,GAASwC,KACX,WAAEuC,EAAU,cAAEgE,EAAa,UAAE5D,EAAS,eAAEE,EAAc,MAAE1E,GAC5D2I,KACK+U,EAAgBC,IAAqBtc,EAAAA,EAAAA,UAAsB,OAC3D4X,EAAc2E,IAAmBvc,EAAAA,EAAAA,aACjCmW,EAASC,IAAcpW,EAAAA,EAAAA,WAAS,IAChCiD,EAAWC,IAAgBlD,EAAAA,EAAAA,WAAS,IACpCwc,EAAMC,IAAWzc,EAAAA,EAAAA,UAEtB,OAEI,MAAE4I,IAAUqC,EAAAA,EAAAA,WAEZwQ,GAAa9C,EAAAA,EAAAA,UAAQ,IACrB/P,GAAS,IAAa,EACtBA,GAAS,IAAY,EAClB,GACN,CAACA,IAEE8T,EAAY/e,UAChBuF,GAAa,GACb,IACE,GAAIlF,GAAM8I,WAAY,CACpB,MAAMI,QAAclI,IACpB,GAAIkI,GAASyV,MAAMC,QAAQ1V,GAEzB,YADAuV,EAAQvV,EAGZ,KAAO,CACL,MAAMA,QAAchI,IACpB,GAAIgI,GAASyV,MAAMC,QAAQ1V,GAEzB,YADAuV,EAAQvV,EAGZ,CAEAH,IACA0V,EAAQtZ,EACV,CAAE,MAAOlF,GACPC,QAAQD,MAAM,6BAA8BA,EAC9C,CAAC,QACCiF,GAAa,EACf,IAGFhD,EAAAA,EAAAA,YAAU,KACRwc,GAAW,GACV,IAEH,MAAMG,EAAmBxY,IACnBrG,GAAM8I,WACRwV,EAAkBjY,IAElBiY,EAAkBte,GAClBue,EAAgBlY,IAElB+R,GAAW,EAAK,EA4CZ0G,EACJ9e,GAAM8I,WAAapD,OAAOiD,OAAO5D,GAAcyZ,GAAQ,GAEzD,OACElc,EAAAA,EAAAA,KAACI,EAAM,CAAAX,UACLiI,EAAAA,EAAAA,MAACmS,GAAS,CACRlX,UAAWA,EACXmX,SAAU/W,EACViX,aAAa,gCACbD,OAAQqC,EAAU3c,SAAA,EAElBiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAO,CAAE+H,cAAe,MAAOoD,eAAgB,iBAAkBxM,SAAA,EACrEO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,cAAa3I,SACxB/B,GAAM8I,WAAa,cAAgB,wBAGpCxG,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAO,CAAE2H,aAAc,GAAIH,MAAO,KAAM7I,UAC5CO,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLnH,KAAK,YACL3G,MAAO,CACL6H,aAAc,EACdoH,eAAgB,IAElBlB,QAASpI,EACTY,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CAACC,KAAK,UAAUV,MAAOA,EAAOQ,KAAMA,IAC7CrI,SACH,oBAOPO,EAAAA,EAAAA,KAAC+a,GAAc,CACbC,MAAOwB,EACPrB,WAAYA,EACZF,WA1EYlX,IAClB,GAAKrG,GAAM8I,WAoBT,OACExG,EAAAA,EAAAA,KAACyc,GAAAA,QAAS,CACR3b,MAAOA,EAAG4b,aAAc,CAAC,CAAEtb,KAAM,EAAGyO,QAAS6M,EAAU,GAAM,IAC7D7N,QAASA,IAAM0N,EAAgBxY,GAAMtE,UAErCO,EAAAA,EAAAA,KAAC0S,GAAU,CACThV,KAAMqG,EACNxE,SAAS,EACToT,aAAa,EACb9P,UAAYkB,EAAcN,aA7BX,CACrB,MAAM6W,EAAUjc,EAAMia,MACnBC,GAAMA,EAAE/U,KAAQO,EAAgCmT,UAEnD,IAAKoD,EAAS,OAAO,KAErB,MAAMvP,EAAShH,EAAgClB,UAAUgB,QACvD,CAACC,EAAKyU,IAAMzU,GAAOyU,EAAEvU,KAAOuU,EAAE3U,UAAY2U,EAAE3U,WAC5C,GAGF,OACE5D,EAAAA,EAAAA,KAACyc,GAAAA,QAAS,CACR3b,MAAOA,EAAG4b,aAAc,CAAC,CAAEtb,KAAM,EAAGyO,QAAS6M,EAAU,GAAM,IAC7D7N,QAASA,IAAM0N,EAAgBxY,GAAMtE,UAErCO,EAAAA,EAAAA,KAACqa,GAAY,CAACC,QAASA,EAASE,WAAW,EAAM/W,SAAUsH,KAGjE,CAcA,EAyCMmQ,OAASnX,GACPrG,GAAM8I,WACDzC,EAAcP,GACdO,EAAgC+B,OAEvCsV,WAAYzY,EACZ0Y,UAAWe,EACXzY,QAASjG,GAAM8I,cAGjBxG,EAAAA,EAAAA,KAACqX,GAAa,CACZxB,QAASA,EACTO,UA3FiBuG,KACvB7G,GAAW,EAAM,EA2FXpY,KAAMqe,EACNvV,WAAY9I,GAAM8I,WAClB8Q,aAAcA,QAGX,EClVb,MAuHA,GAvHuBsF,KACrB,MAAM,KAAElf,EAAI,QAAEyB,EAAO,MAAEC,GAAUc,IAC3B2c,GAAY/P,EAAAA,EAAAA,kBACXvN,EAASI,IAAcD,EAAAA,EAAAA,WAAS,IAChCod,EAAUC,IAAerd,EAAAA,EAAAA,UAAwB,OACjDsd,EAAYC,IAAiBvd,EAAAA,EAAAA,UAAwBN,IAE5DQ,EAAAA,EAAAA,YAAU,KACR,GAAIod,EAAY,OAChB,MAAME,EAAiBlf,EAAe,SACtCif,EAAcC,EAAe,IAG/B,MAAMxP,EAAmBnB,GAAAA,SAAaC,MAAM,CAC1CiD,YAAalD,GAAAA,SACVI,IAAI,EAAG,qDACPwQ,QACC,QACA,kEAED1Q,SAAS,qBACZwE,gBAAiB1E,GAAAA,SACd6Q,MAAM,CAAC7Q,GAAAA,IAAQ,gBAAiB,mCAChCE,SAAS,uBA4Bd,OACEzM,EAAAA,EAAAA,KAACI,EAAM,CAAAX,UACLO,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAOC,GAAOwM,UAAU9N,UAC5BiI,EAAAA,EAAAA,MAACH,EAAAA,QAAI,CAACzG,MAAOC,GAAOyG,KAAK/H,SAAA,EACvBO,EAAAA,EAAAA,KAACuH,EAAAA,QAAKgK,MAAK,CACTnK,MAAM,0BACNoK,SAAS,uCAEXxR,EAAAA,EAAAA,KAACuH,EAAAA,QAAKI,QAAO,CAAAlI,UACXO,EAAAA,EAAAA,KAACwN,GAAAA,OAAM,CACLC,cAAe,CAAEgC,YAAa,GAAIwB,gBAAiB,IACnDvD,iBAAkBA,EAClBC,SArCStQ,UAInBsC,GAAW,GACXod,EAAY,MACZ,IACE,MAAMM,QCvCLhgB,eACL0B,EACAK,GAEA,MAAMqF,QAAiBC,MAAO,GAAEtC,aAAoB,CAClDuC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAgB,UAASzF,KAE3B+N,KAAM3P,KAAKC,UAAUsB,KAGvB,IAAK0F,EAASK,GAAI,CAChB,MAAMC,QAAkBN,EAAS9F,OACjC,MAAM,IAAIqG,MAAMD,EAAUE,QAAU,iCACtC,CAEA,aAAaR,EAAS9F,MACxB,CDoBgC2e,CACxB,CACE5Q,SAAUrG,EAAOoJ,YACjB8N,mBAAmB,GAErBne,GAGFD,EAAOiE,OAAAC,OAAC,CAAC,EAAIga,UACPjgB,EAASigB,GACfR,EAAUvP,SAAS,OACrB,CAAE,MAAO3P,GACPof,EAAYpf,EAAM6f,SAAW,oCAC/B,CAAC,QACC7d,GAAW,EACb,GAeiCF,SAEtBA,EACCqO,eACAC,aACAC,eACA3H,SACA4H,SACAC,cAEAxG,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAAApC,SAAA,EACHO,EAAAA,EAAAA,KAACoO,GAAAA,QAAS,CACRvE,MAAM,sBACN8E,iBAAe,EACf5Q,MAAOsI,EAAOoJ,YACdlB,aAAcT,EAAa,eAC3BU,OAAQT,EAAW,eACnBjN,MAAOC,GAAOsN,QAEfH,EAAQuB,aAAexB,EAAOwB,cAC7BzP,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACrH,MAAOC,GAAOpD,MAAM8B,SAAEwO,EAAOwB,eAGrCzP,EAAAA,EAAAA,KAACoO,GAAAA,QAAS,CACRvE,MAAM,wBACN8E,iBAAe,EACf5Q,MAAOsI,EAAO4K,gBACd1C,aAAcT,EAAa,mBAC3BU,OAAQT,EAAW,mBACnBjN,MAAOC,GAAOsN,QAEfH,EAAQ+C,iBAAmBhD,EAAOgD,kBACjCjR,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACrH,MAAOC,GAAOpD,MAAM8B,SAAEwO,EAAOgD,kBAGpC6L,IAAY9c,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACrH,MAAOC,GAAOpD,MAAM8B,SAAEqd,KAEzC9c,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLnH,KAAK,YACLoH,QAASb,EACTlN,MAAOC,GAAOyV,OACdO,SAAUxX,EACVA,QAASA,EAAQE,SAClB,uCASN,EAMPsB,GAASgB,EAAAA,QAAWC,OAAO,CAC/BuL,UAAW,CACTnM,KAAM,EACNkH,MAAO,OACPQ,WAAY,SACZ3G,QAAS,GACT8J,eAAgB,UAElBzE,KAAM,CACJc,MAAO,OACPC,SAAU,KAEZ8F,MAAO,CACL5F,aAAc,IAEhB+N,OAAQ,CACNzK,UAAW,IAEbpO,MAAO,CACL2J,MAAO,MACPmB,aAAc,ME3IlB,MAqHA,GArHiBgV,KACf,MAAM,MAAEnV,IAAUqC,EAAAA,EAAAA,WACZ+S,EAAYpV,GAAS,IAAM,EAAI,GAC/B,KAAE5K,EAAI,MAAE0B,GAAUc,IAClB2M,GAAaC,EAAAA,EAAAA,kBACb,MAAEzO,GAAU2I,KAEXrE,EAAWC,IAAgBlD,EAAAA,EAAAA,WAAS,IACpCie,EAAaC,IAAkBle,EAAAA,EAAAA,UAAiC,IAEjEme,EAAiBxgB,UACrBuF,GAAa,GACb,IACE,MAAM7D,QCPL1B,eACL+B,GAEA,MAAMqF,QAAiBC,MAAO,GAAEtC,gCAAuC,CACrEuC,OAAQ,MACRC,QAAS,CACPC,cAAgB,UAASzF,OAI7B,IAAKqF,EAASK,GAAI,CAChB,MAAMC,QAAkBN,EAAS9F,OACjC,MAAM,IAAIqG,MAAMD,EAAUE,QAAU,6BACtC,CAEA,aAAaR,EAAS9F,MACxB,CDTyBmf,CAAuB1e,GAC1Cwe,EAAe7e,Q5BoHU1B,WAC7B,UACQC,EAAAA,QAAaC,QAAQ,cAAeC,KAAKC,UAAUsB,GAC3D,CAAE,MAAOpB,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,G4BxHUogB,CAAgBhf,EACxB,CAAE,MAAOpB,GACPC,QAAQD,MAAM,+BAAgCA,EAChD,CAAC,QACCiF,GAAa,EACf,IAGFhD,EAAAA,EAAAA,YAAU,KAgBHlC,GAAM8I,YAfcnJ,WACvBuF,GAAa,GAGb,MAAMgE,O5B8GyBvJ,WAGnC,IACE,MAAM0B,QAAazB,EAAAA,QAAaW,QAAQ,eACxC,OAAOc,EAAOvB,KAAKiB,MAAMM,GAAQ,IACnC,CAAE,MAAOpB,GAEP,OADAC,QAAQD,MAAM,6BAA8BA,GACrC,IACT,G4BvHwBqgB,GACpB,GAAIpX,EAGF,OAFAgX,EAAehX,QACfhE,GAAa,GAKfib,GAAgB,EAGKI,EAAkB,GACxC,CAACtb,IAYJ,OACE+E,EAAAA,EAAAA,MAACtH,EAAM,CAAAX,SAAA,EACLiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAO8K,OAAOpM,SAAA,EACzBiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAAApC,SAAA,EACHO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,aAAatH,MAAOC,GAAOqG,MAAM3H,SAAC,kBAGhDO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,aAAatH,MAAOC,GAAOyQ,SAAS/R,SAC/C/B,GAAM8I,WACH,+BACA,qCAIRxG,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLnH,KAAK,YACL3G,MAAOC,GAAOyV,OACd3H,QAASgP,EACTxW,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CAACC,KAAK,UAAUV,MAAOA,EAAOQ,KAAMA,IAC7CrI,SACH,kBAKHO,EAAAA,EAAAA,KAACyB,EAAAA,QAAU,CACTC,sBAAuB,CACrBka,cAAe,GACf1P,IAAK,GACLrD,cAAe6U,EAAY,EAAI,MAAQ,SACvCvR,SAAUuR,EAAY,EAAI,OAAS,SACnCzR,eAAgByR,EAAY,EAAI,SAAW,cAC3Cje,SAEDpB,EAAMgH,KAAKtB,IACV,MAAMma,EAAiBP,EAAYrF,MAAMC,GAAMA,EAAErB,UAAYnT,EAAKP,KAC5D+W,EAAa2D,GAAgBC,sBAC7BC,EAAuBT,EAAYrF,MACtCC,GAAMA,EAAErB,UAAYnT,EAAKP,KAEtB6a,EAAeD,GAAsBT,aAAe,GAC1D,OACE3d,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAEHf,MAAO,CACLC,GAAOyG,KACPkW,EAAY,GAAK,CAAEpV,MAAOA,EAAQ,EAAI,GAAIwS,iBAAkB,IAC5Drb,UAEFO,EAAAA,EAAAA,KAACqa,GAAY,CACXC,QAASvW,EACT8K,QAASA,IA9DGyP,EACxBva,EACAwa,KAEA1R,EAAWS,SAAS,gBAAiB,CACnCqH,OAAQ,iBACR6J,OAAQ,CAAElE,QAASvW,EAAMwa,WAAYA,IACrC,EAuDyBD,CAAkBva,EAAMsa,GACvC9D,WAAYA,EACZC,WAAY9c,GAAM8I,WAClB/C,cAAUnB,KAXPyB,EAAKP,GAaL,QAIN,EAKPzC,GAASgB,EAAAA,QAAWC,OAAO,CAC/BuL,UAAW,CACTpL,QAAS,GACT8J,eAAgB,SAChBnD,WAAY,UAGd+C,OAAQ,CACNpD,aAAc,GACdI,cAAe,MACfoD,eAAgB,gBAChBG,aAAc,UAEhBhF,MAAO,CACLiB,WAAY,QAEdmJ,SAAU,CACRzF,UAAW,EACXzE,MAAO,WAETE,KAAM,CACJiB,aAAc,IAEhBb,YAAa,CACXiB,cAAe,MACfoD,eAAgB,gBAChBnD,WAAY,cAEd4R,SAAU,CACRtZ,KAAM,EACN8K,IAAK,GAEPyO,YAAa,CACX9R,cAAe,MACfC,WAAY,SACZiD,UAAW,EACXG,IAAK,GAEPuS,aAAc,CACZnX,MAAO,WAETsT,UAAW,CACT9R,WAAY,YAEde,MAAO,CACLvC,MAAO,WAETuT,WAAY,CACV9O,UAAW,EACX1D,WAAY,OAEdmO,OAAQ,CACN7N,aAAc,EACdoH,eAAgB,MEvJL,SAAS2O,IAAgB,QAAE7I,EAAO,QAAE8I,EAAO,MAAEC,IAC1D,MAAM,MAAExf,GAAUc,KACZ,WAAEuC,EAAU,MAAEpE,GAAU2I,KACvB2W,EAAaC,IAAkBle,EAAAA,EAAAA,UAA2B,KAC1DiD,EAAWC,IAAgBlD,EAAAA,EAAAA,WAAS,IACpCmf,EAAqBC,IAA0Bpf,EAAAA,EAAAA,UAEpD,KACI,OAAEW,IAAWC,EAAAA,EAAAA,aACb,MAAEgI,IAAUqC,EAAAA,EAAAA,WAEZoU,EAAWzW,EAAQ,IACnB0W,EAAU1W,GAAS,IAAO,EAAIA,GAAS,IAAM,EAAI,EAEjD9J,EAAOH,EAAMia,MAAMC,GAAMA,EAAE/U,KAAOob,EAAM1H,UACxCxT,EACJlF,GAAM8G,UAAUD,KAAK7B,GAAOf,EAAWe,KAAKgV,OAAOyG,UAAY,IAEjErf,EAAAA,EAAAA,YAAU,KACR,IAAKiW,EAAS,OAEdjT,GAAa,GACUvF,WACrB,IACE,MAAM0B,QD5DP1B,eACL6hB,EACA9f,GAEA,MAAMqF,QAAiBC,MACpB,GAAEtC,uCAA6C8c,IAChD,CACEva,OAAQ,MACRC,QAAS,CACPC,cAAgB,UAASzF,OAK/B,IAAKqF,EAASK,GAAI,CAChB,MAAMC,QAAkBN,EAAS9F,OACjC,MAAM,IAAIqG,MAAMD,EAAUE,QAAU,6BACtC,CAEA,aAAaR,EAAS9F,MACxB,CCwC2BwgB,CAAiBP,EAAMpb,GAAIpE,GAE9C,GADAwe,EAAe7e,GACK,IAAhBA,EAAKkK,OAAc,CACrB,MAAMmW,EAAmC1b,EAAQ2B,KAAK1B,IAAM,CAC1D4V,UAAW5V,EAAOH,GAClB6b,SAAU,MAEZP,EAAuBM,EACzB,CACF,CAAE,MAAOzhB,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,CAAC,QACCiF,GAAa,EACf,GAGFib,GACAiB,EAAuB,GAAG,GACzB,CAACjJ,EAAS+I,EAAMpb,MAEnB5D,EAAAA,EAAAA,YAAU,KACHiW,IACH+H,EAAe,IACfkB,EAAuB,IACzB,GACC,CAACjJ,IAEJ,MAAM/H,EAAeA,CAACyL,EAAmB8F,KACvCP,GAAwB9F,GACJA,EAAKV,MAAMC,GAAMA,EAAEgB,YAAcA,IAE1CP,EAAK3T,KAAKkT,GACfA,EAAEgB,YAAcA,EAASnW,OAAAC,OAAA,GAAQkV,EAAE,CAAC8G,aAAa9G,IAG5C,IAAIS,EAAM,CAAEO,YAAW8F,cAEhC,EAqDJ,OACErf,EAAAA,EAAAA,KAACyY,GAAAA,QAAM,CAAAhZ,UACLiI,EAAAA,EAAAA,MAACmR,GAAAA,QAAK,CACJhD,QAASA,EACTO,UAAWuI,EACXjd,sBAAuB,CACrBX,GAAOue,eACP,CAAErX,gBAAiB5H,EAAOI,aAC1BhB,SAAA,EAEFiI,EAAAA,EAAAA,MAACS,EAAAA,QAAI,CAACC,QAAQ,cAActH,MAAOC,GAAOwe,YAAY9f,SAAA,CAAC,gBACvCmf,EAAMY,QAGrB7c,GACC3C,EAAAA,EAAAA,KAAC2L,EAAAA,QAAiB,CAAC7K,MAAO,CAAEiP,eAAgB,OAE5C/P,EAAAA,EAAAA,KAACyB,EAAAA,QAAU,CAACC,sBAAuBX,GAAO0e,OAAOhgB,UAC/CO,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAO,CAACC,GAAO2e,KAAM,CAAExT,IAAK,KAAMzM,SACrCiE,EAAQ2B,KAAK1B,IACZ,MAAMgc,EAAsBhC,EAAYrF,MACrCC,GAAMA,EAAEgB,YAAc5V,EAAOH,KAE1Boc,EAAoBf,EAAoBvG,MAC3CC,GAAMA,EAAEgB,YAAc5V,EAAOH,KAE1Bqc,EACJD,GAAmBP,UAAU1D,YAC7BgE,GAAqBN,UAAU1D,YAC/B,GAEImE,EACJF,GAAmBG,aACnBJ,GAAqBI,aACrB,GAEF,OACE/f,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAEHf,MAAO,CACLC,GAAOif,YACP,CAAE1X,MAAU,IAAM0W,EAAU,EAAlB,MACVvf,UAEFO,EAAAA,EAAAA,KAACuH,EAAAA,QAAI,CAACE,KAAK,WAAW3G,MAAOC,GAAOkf,WAAWxgB,UAC7CiI,EAAAA,EAAAA,MAACH,EAAAA,QAAKI,QAAO,CAAC7G,MAAO,CAAEoL,IAAK,EAAG/J,QAAS,GAAI1C,SAAA,EAC1CiI,EAAAA,EAAAA,MAACS,EAAAA,QAAI,CAACrH,MAAOC,GAAOmf,aAAazgB,SAAA,CAC9BkE,EAAOmC,OAAO,IAAEnC,EAAOmN,aAG1B9Q,EAAAA,EAAAA,KAACqZ,GAAAA,QAAYC,MAAK,CAChBlE,cAAgBrX,GACd+P,EAAanK,EAAOH,GAAI2c,SAASpiB,IAEnCA,MAAO8hB,EAAcpgB,UAErBO,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAOC,GAAOqf,cAAc3gB,SAC/B,CACC,CACEoK,MAAOkV,EAAW,IAAM,WACxBhhB,MAAO,KAET,CAAE8L,MAAOkV,EAAW,IAAM,UAAWhhB,MAAO,KAC5C,CAAE8L,MAAOkV,EAAW,IAAM,QAAShhB,MAAO,KAC1C,CACE8L,MAAO,KACP9L,MAAO,MAETsH,KAAKtB,IACL2D,EAAAA,EAAAA,MAAC+U,GAAAA,QAAS,CAER3b,MAAOC,GAAOsf,mBACdxR,QAASA,IACPf,EAAanK,EAAOH,GAAI2c,SAASpc,EAAKhG,QACvC0B,SAAA,EAEDO,EAAAA,EAAAA,KAACqZ,GAAAA,QAAW,CACVtb,MAAOgG,EAAKhG,MACZuiB,OACET,IAAkB9b,EAAKhG,MACnB,UACA,YAEN8Q,QAASA,IACPf,EACEnK,EAAOH,GACP2c,SAASpc,EAAKhG,WAIpBiC,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CACHrH,MAAO,CACLie,EACIhe,GAAOwf,iBACPxf,GAAOyf,WACXzf,GAAO0f,gBACPhhB,SAEDsE,EAAK8F,UA5BH9F,EAAKhG,cAmClBiC,EAAAA,EAAAA,KAACoO,GAAAA,QAAS,CACRvE,MAAM,mBACNpC,KAAK,WACL1J,MAAO+hB,EACPvR,aAAeuE,IACb4N,OA/JxBnH,EA+JkD5V,EAAOH,GA9JzDuc,EA8J6DjN,OA5J7DgM,GAAwB9F,GACJA,EAAKV,MAAMC,GAAMA,EAAEgB,YAAcA,IAE1CP,EAAK3T,KAAKkT,GACfA,EAAEgB,YAAcA,EAASnW,OAAAC,OAAA,GAAQkV,EAAE,CAACwH,gBAAgBxH,IAG/C,IAAIS,EAAM,CAAEO,YAAW8F,SAAU,EAAGU,kBAXfW,IAChCnH,EACAwG,CA+JuB,UAzEFpc,EAAOH,GA6EP,SAOjBkE,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAO4f,UAAUlhB,SAAA,EAC5BO,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CAACnH,KAAK,OAAOoH,QAAS8P,EAAQlf,SAAC,cAGtCO,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CAACnH,KAAK,YAAYoH,QAhKXxR,UACpB,IACE,GAAmC,IAA/BwhB,EAAoB5V,OAEtB,YADA0I,GAAAA,QAAMC,MAAM,cAAe,0CAI7B,MAAMgP,EAAUld,EAAQ2B,KAAK1B,IAC3B,MAAMkd,EAAUhC,EAAoBvG,MACjCC,GAAMA,EAAEgB,YAAc5V,EAAOH,KAGhC,MAAO,CACL+V,UAAW5V,EAAOH,GAClB6b,SAAUwB,GAASxB,UAAY,EAC/BU,YAAac,GAASd,aAAe,KACtC,IAGHniB,QAAQU,IAAI,oBAAqBsiB,SCvIhCvjB,eACL6hB,EACA9f,EACAue,GAEA/f,QAAQU,IAAIqf,GACZ,MAAMlZ,QAAiBC,MAAO,GAAEtC,wBAA8B8c,IAAY,CACxEva,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAgB,UAASzF,KAE3B+N,KAAM3P,KAAKC,UAAUkgB,KAGvB,IAAKlZ,EAASK,GAAI,CAChB,MAAMC,QAAkBN,EAAS9F,OACjC,MAAM,IAAIqG,MAAMD,EAAUE,QAAU,+BACtC,CACF,CDqHY6b,CAAmBlC,EAAMpb,GAAIpE,EAAOwhB,GAE1CjP,GAAAA,QAAMC,MACJ,WACA,sDAEFkN,EAAuB,IACvBH,GACF,CAAE,MAAOhhB,GACPC,QAAQD,MAAM,gCAAiCA,GAC/CgU,GAAAA,QAAMC,MAAM,QAASjU,EAAM6f,SAAW,kCACxC,GAiIsD/d,SAAC,mBAO3D,CAEA,MAAMsB,GAASgB,EAAAA,QAAWC,OAAO,CAC/Bsd,eAAgB,CACd9M,OAAQ,GACRrQ,QAAS,GACTwG,aAAc,GACdoY,UAAW,OAEbtB,OAAQ,CACNlV,gBAAiB,GAEnBgV,YAAa,CACX9W,aAAc,IAEhBiX,KAAM,CACJ7W,cAAe,MACfsD,SAAU,OACVF,eAAgB,iBAElB+T,YAAa,CACXvX,aAAc,IAEhBwX,WAAY,CACVtX,aAAc,IAEhBuX,aAAc,CACZ7X,WAAY,MACZI,aAAc,GAEhBuY,SAAU,CACRnY,cAAe,MACfoD,eAAgB,gBAElB0U,UAAW,CACT9X,cAAe,MACfoD,eAAgB,WAChBF,UAAW,GACXG,IAAK,IAEPkU,cAAe,CACbvX,cAAe,MACfoD,eAAgB,eAChBnD,WAAY,SACZqD,SAAU,UAGZ8U,eAAgB,CACd7f,KAAM,EACNoR,OAAQ,EACRrQ,QAAS,GAGXqe,WAAY,CACVlW,SAAU,IAGZiW,iBAAkB,CAChBjW,SAAU,IAEZ+V,mBAAoB,CAClBjf,KAAM,EACN0H,WAAY,SACZmD,eAAgB,SAChBpD,cAAe,SACfL,SAAU,GACVD,SAAU,IAGZkY,eAAgB,CACdpR,UAAW,SACX6R,WAAY,KEtVD,SAASC,IAAU,MAAEvC,EAAK,WAAEL,IACzC,MAAO6C,EAAcC,IAAmB3hB,EAAAA,EAAAA,WAAS,IAC3C,KAAEhC,GAASwC,KACX,OAAEG,IAAWC,EAAAA,EAAAA,YAQnB,OACEoH,EAAAA,EAAAA,MAAAkE,EAAAA,SAAA,CAAAnM,SAAA,EACEO,EAAAA,EAAAA,KAACuH,EAAAA,QAAI,CAACzG,MAAO,CAACC,GAAOyG,MAAM/H,UACzBO,EAAAA,EAAAA,KAACO,EAAAA,eAAc,CACbF,OACG3C,GAAM8I,WAEH,CAAC,eAAgB,eAdC+X,IACX,IAAfA,EAAyB,CAACle,EAAOI,WAAYJ,EAAO4S,iBACrC,IAAfsL,EAAyB,CAACle,EAAOI,WAAYJ,EAAO8S,gBACrC,IAAfoL,EAAyB,CAACle,EAAOI,WAAYJ,EAAO6S,iBACjD,CAAC,cAAe,eASXoO,CAAuB/C,GAAYc,UAGzC3e,MAAO,CAAEC,EAAG,GAAKC,EAAG,IACpBC,IAAK,CAAEF,EAAG,EAAGC,EAAG,GAChBE,MAAO,CAAE6H,aAAc,EAAGxG,QAAS,IAAK1C,UAExCiI,EAAAA,EAAAA,MAACH,EAAAA,QAAKI,QAAO,CAAAlI,SAAA,EACXiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAOwgB,UAAU9hB,SAAA,EAC5BO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,aAAatH,MAAOC,GAAOmP,UAAUzQ,SAChDmf,EAAMY,QAGTxf,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAOC,GAAOygB,YAAY/hB,SAC7B/B,GAAM8I,YACLkB,EAAAA,EAAAA,MAAAkE,EAAAA,SAAA,CAAAnM,SAAA,EACEO,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAK,iBACLF,KAAM,GACNR,MAAM,UACNxG,MAAOC,GAAO0gB,cAEhBzhB,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CAACC,KAAK,gBAAgBF,KAAM,GAAIR,MAAM,gBAGjDI,EAAAA,EAAAA,MAACS,EAAAA,QAAI,CAACC,QAAQ,aAAY3I,SAAA,CACvB,IACA8e,EAC2B,IAAxBA,EAAWc,SACT,WACwB,IAAxBd,EAAWc,SACX,UACA,QACF,0BAMZ3X,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAO4Z,YAAYlb,SAAA,EAC9BO,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAK,mBACLF,KAAM,GACNR,MAAM,UACNxG,MAAOC,GAAO0gB,cAEhBzhB,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,YAAYtH,MAAOC,GAAOoP,aAAa1Q,SAClDmf,EAAM3T,MAAM0Q,gBAIhBje,GAAM8I,aACLxG,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLnH,KAAK,WACLJ,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CAACC,KAAK,mBAAmBV,MAAOA,EAAOQ,KAAMA,IAExDhH,MAAOC,GAAO2gB,iBACd7S,QAASA,IAAMwS,GAAgB,GAAM5hB,SACtC,6BASTO,EAAAA,EAAAA,KAAC0e,GAAe,CACd7I,QAASuL,EACTzC,QAASA,IAAM0C,GAAgB,GAC/BzC,MAAOA,MAIf,CAEA,MAAM7d,GAASgB,EAAAA,QAAWC,OAAO,CAC/BwF,KAAM,CACJc,MAAO,OACPC,SAAU,IACVI,aAAc,EACdD,UAAW,EACXE,UAAW,SACXkS,iBAAkB,GAClBrS,aAAc,IAEhB8Y,UAAW,CACT1Y,cAAe,MACfoD,eAAgB,gBAChBnD,WAAY,UAEd0Y,YAAa,CACX3Y,cAAe,OAEjB4Y,WAAY,CACVhX,YAAa,GAEfkQ,YAAa,CACX9R,cAAe,MACfC,WAAY,SACZiD,UAAW,GAEbmE,UAAW,CACT7H,WAAY,OACZI,aAAc,GAEhB0H,aAAc,CACZ7I,MAAO,WAEToa,iBAAkB,CAChB3V,UAAW,IAEb4V,cAAe,CACbvgB,KAAM,EACN6G,gBAAiB,kBACjBgE,eAAgB,SAChBnD,WAAY,UAEdwW,eAAgB,CACdhX,MAAO,MACPnG,QAAS,GACT8F,gBAAiB,QACjBU,aAAc,GACdD,UAAW,GAEbkZ,iBAAkB,CAChB7V,UAAW,GACXnD,UAAW,YAEbiZ,eAAgB,CACdva,MAAO,UACPe,WAAY,UCpJD,SAASyZ,KACtB,MAAM,MAAExZ,IAAUqC,EAAAA,EAAAA,WACZoX,GAAQC,EAAAA,EAAAA,aACR,QAAE1H,EAAO,WAAEiE,GAAewD,EAAMvD,OAChC3R,GAAaC,EAAAA,EAAAA,kBACb,MAAE1N,EAAK,KAAE1B,GAASwC,KACjByC,EAAWC,IAAgBlD,EAAAA,EAAAA,WAAS,IACpCuiB,EAAQC,IAAaxiB,EAAAA,EAAAA,UAAsB,KAC3C/B,EAAOsP,IAAYvN,EAAAA,EAAAA,WAAS,IAC7B,OAAEW,IAAWC,EAAAA,EAAAA,YAEb6hB,EAAY9kB,MAAO+kB,GAAgB,KACvC,IAAI1b,EAAgBtH,EACfA,IACHsH,QAAsB1I,EAAe,UAEvC,IACE,IAAKokB,EAAe,CAClB,MAAMxb,QAAc5H,EAAiBsb,EAAQ9W,IAC7C,GAAIoD,EAGF,OAFAsb,EAAUtb,QACVhE,GAAa,EAGjB,CAGA,MAAM7D,QCxCL1B,eACLglB,EACAjjB,GAEA,MAAMqF,QAAiBC,MAAO,GAAEtC,kBAAwBigB,WAAiB,CACvE1d,OAAQ,MACRC,QAAS,CACPC,cAAgB,UAASzF,OAI7B,IAAKqF,EAASK,GAAI,CAChB,MAAMC,QAAkBN,EAAS9F,OACjC,MAAM,IAAIqG,MAAMD,EAAUE,QAAU,6BACtC,CAEA,aAAaR,EAAS9F,MACxB,CDuByB2jB,CAAchI,EAAQ9W,GAAIkD,GAC7Cwb,EAAUnjB,SACJF,EAAWyb,EAAQ9W,GAAIzE,EAC/B,CAAE,MAAOpB,GACPC,QAAQU,IAAI,8BAA+BX,GAC3CsP,GAAS,EACX,CAAC,QACCrK,GAAa,EACf,GAGI2f,EAAkB7kB,GAAM8I,WAC1Byb,EACAA,EAAOzJ,QAAQoG,IAAW,iBAAiB4D,KAAK5D,EAAMY,QAEpDrE,EAAa7S,GAAS,KAAO,EAAIA,GAAS,IAAM,EAAI,EACpDma,EAAgBna,EAAQ,KAC9B1I,EAAAA,EAAAA,YAAU,KACRuiB,GAAW,GACV,IAEH,MAIMO,EAAiBA,OAavB,OACE1iB,EAAAA,EAAAA,KAACI,EAAM,CAAAX,UACLiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAOwM,UAAU9N,SAAA,EAC5BiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CACHf,MAAO,CACLC,GAAO4hB,cACPF,GAAiB,CACf5Z,cAAe,SACfC,WAAY,aACZoD,IAAK,IAEPzM,SAAA,EAEFiI,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CACHf,MAAO,CACLC,GAAOwgB,UACPkB,GAAiB,CAAE5Z,cAAe,MAAOC,WAAY,WACrDrJ,SAAA,EAEFO,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLC,QArCS+T,KACnB/V,EAAWgW,QAAQ,EAqCTpb,KAAK,OACLqb,SAAO,EACPzb,KAAMA,EAAGS,OAAMR,YACbtH,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CAACC,KAAK,aAAaF,KAAM,GAAIR,MAAOjH,EAAOG,UAEtD4R,aAAcrR,GAAOgiB,WACrB7Q,WAAY,CACVnR,GAAOiiB,eACPP,GAAiB,CAAEQ,QAAS,SAC5BxjB,UAEAgjB,GAAiB,YAErBziB,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CACHC,QAASqa,EAAgB,aAAe,cACxC3hB,MAAO,CACLC,GAAOmiB,aACP,CACEhC,WAAY,EACZ/U,SAAU,OACV5D,SAAUka,EAAgB,MAAQ,SAGtCU,cAAe,EACfC,cAAc,OAAM3jB,SAEnB6a,EAAQxU,aAIb4B,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAACf,MAAOC,GAAO4Z,YAAYlb,SAAA,EAC9BO,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLnH,KAAK,YACL3G,MAAOC,GAAOsiB,UACdxU,QAASA,IAAMsT,GAAU,GACzB9a,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CAACC,KAAK,UAAUV,MAAOA,EAAOQ,KAAMA,IAC7CrI,SACH,cAIA/B,GAAM8I,aACLxG,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLvH,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAK,qBACLV,MAAOA,EACPQ,KAAMA,IAGVL,KAAK,YACLoH,QAAS6T,EACTtQ,aAAcrR,GAAOuiB,iBACrBxiB,MAAOC,GAAOsiB,UAAU5jB,SACzB,wBAONkD,GACC3C,EAAAA,EAAAA,KAAC2L,EAAAA,QAAiB,CAAC7D,KAAM,QAASR,MAAM,WACtC3J,GACF+J,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CACHf,MAAO,CAAEgI,WAAY,SAAUmD,eAAgB,SAAU7K,KAAM,GAAI3B,SAAA,EAEnEO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CACHC,QAAQ,aACRtH,MAAO,CACL2H,aAAc,GACdnB,MAAO,UACP+H,UAAW,UACX5P,SACH,8CAGDO,EAAAA,EAAAA,KAACia,GAAAA,QAAK,CACJC,OAAQC,EAAQ,MAChBrZ,MAAO,CACLwH,MAAO,IACP4G,OAAQ,IACRzG,aAAc,GACdE,aAAc,GACdkH,QAAS,KAEXuK,WAAW,aAEbpa,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLnH,KAAK,YACLoH,QAASA,KACPjM,GAAa,GACbqK,GAAS,GACTkV,GAAW,EAEbrhB,MAAO,CAAEiL,UAAW,GAAItM,SACzB,mBAKHiI,EAAAA,EAAAA,MAAAkE,EAAAA,SAAA,CAAAnM,SAAA,EACEO,EAAAA,EAAAA,KAACyB,EAAAA,QAAU,CACTC,sBAAuB,CACrBka,cAAele,GAAM8I,WAAa,GAAK,GACvCgE,kBAAmB,EACnB0B,IAAK,IAEPqX,8BAA8B,EAAM9jB,SAER,IAA3B8iB,EAAgBtZ,QACfvB,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAAApC,SAAA,EACHO,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CACPC,KAAK,6BACLF,KAAM,GACNR,MAAM,aAERtH,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CACHrH,MAAO,CACLwG,MAAO,UACPyE,UAAW,GACXsD,UAAW,UACX5P,SACH,yCAzJD+jB,EAACzkB,EAAmBigB,KAClC,MAAMyE,EAAO,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAI3kB,EAAKkK,OAAQya,GAAK1E,EACpCyE,EAAKE,KAAK5kB,EAAK6kB,MAAMF,EAAGA,EAAI1E,IAE9B,OAAOyE,CAAI,EAyJCD,CAAQjB,EAAiBpH,GAAY9V,KAAI,CAACwe,EAAKC,KAC7Cpc,EAAAA,EAAAA,MAAC7F,EAAAA,QAAI,CAEHf,MAAO,CACL+H,cAAe,MACfoD,eAAgBkP,EAAa,EAAI,SAAW,aAC5C1S,aAAc,GACdyD,IAAK,IACLzM,SAAA,CAEDokB,EAAIxe,KAAKtB,IACR,MAAMggB,EAAwBxF,EAAWjG,MACtCiG,GAAeA,EAAW/a,KAAOO,EAAKP,KAEzC,OACExD,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAEHf,MAAO,CACLM,KAAM,EACNmH,SAAa,IAAM4S,EAAR,KACX1b,UAEFO,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAAApC,UACHO,EAAAA,EAAAA,KAACmhB,GAAS,CACRvC,MAAO7a,EACPwa,WAAYwF,OATXhgB,EAAKP,GAYL,IAGVqgB,EAAI5a,OAASkS,GACZkB,MAAM2H,KAAK,CAAE/a,OAAQkS,EAAa0I,EAAI5a,SAAU5D,KAC9C,CAAC4e,EAAGva,KACF1J,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAEHf,MAAO,CACLM,KAAM,EACNmH,SAAa,IAAM4S,EAAR,IACXzL,UAAW,MAJP,SAAQhG,SAjCjBoa,OA8CZpmB,GAAM8I,aACLxG,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAAApC,UACHO,EAAAA,EAAAA,KAAC4O,GAAAA,QAAM,CACLvH,KAAMA,EAAGC,QAAOQ,WACd9H,EAAAA,EAAAA,KAAC+H,EAAAA,QAAQ,CAACC,KAAK,aAAaV,MAAOA,EAAOQ,KAAMA,IAElDL,KAAK,YACLoH,QAAS6T,EACTtQ,aAAcrR,GAAOuiB,iBACrBxiB,MAAOC,GAAOsiB,UACdnR,WAAY,CAAE7J,WAAY,OAAQiC,SAAU,IAAK7K,SAClD,2BAUjB,CAEA,MAAMsB,GAASgB,EAAAA,QAAWC,OAAO,CAC/BuL,UAAW,CACTnM,KAAM,EACNe,QAAS,IAEX4gB,WAAY,CACVla,cAAe,MACfC,WAAY,SACZob,YAAa,GAEflB,eAAgB,CACd1b,MAAO,UACPgD,SAAU,GACVpC,WAAY,GAEdyS,YAAa,CACX9R,cAAe,MACfC,WAAY,SACZiD,UAAW,EACXG,IAAK,GAGPgX,aAAc,CACZ7a,WAAY,QAEd8b,gBAAiB,CACf7c,MAAO,UACPyE,UAAW,EACXtD,aAAc,GAGhBka,cAAe,CACb9Z,cAAe,MACfoD,eAAgB,gBAChBnD,WAAY,SACZiH,eAAgB,GAElBsT,UAAW,CACT1a,aAAc,EACdoH,eAAgB,IAElBuT,iBAAkB,CAChBza,cAAe,OAEjB0Y,UAAW,CACT1Y,cAAe,MACfC,WAAY,SACZoD,IAAK,KExVHkY,IAAQC,EAAAA,EAAAA,8BAEC,SAASC,KACtB,OACE5c,EAAAA,EAAAA,MAAC0c,GAAMG,UAAS,CAACC,cAAe,CAAEC,aAAa,GAAQhlB,SAAA,EACrDO,EAAAA,EAAAA,KAACokB,GAAMM,OAAM,CACX1c,KAAK,WACL2c,UAAWlH,GACXmH,QAAS,CAAExd,MAAO,gCAEpBpH,EAAAA,EAAAA,KAACokB,GAAMM,OAAM,CACX1c,KAAK,iBACL2c,UAAWE,GACXD,QAAS,CAAExd,MAAO,uCAI1B,CCCA,MAAMgd,IAAQC,EAAAA,EAAAA,8BACRxP,IAASiQ,EAAAA,EAAAA,yBAEf,SAASC,KACP,MAAM,OAAE1kB,IAAWC,EAAAA,EAAAA,aACb,KAAE5C,GAASwC,IACX8kB,GAAe3M,EAAAA,EAAAA,UAAQ,IAAM3a,GAAM,CAACA,IAE1C,OACEgK,EAAAA,EAAAA,MAACmN,GAAO0P,UAAS,CACfU,cAAgB9b,IAAUnJ,EAAAA,EAAAA,KAACyU,GAAmBrR,OAAAC,OAAA,GAAK8F,IACnDqb,cAAeA,EAAG3X,iBAAY,CAC5BqY,YAAa,CACXjd,gBAAiB5H,EAAOqI,UAAUyc,QAEpCC,gBAAiB/kB,EAAOG,QACxB6kB,iBAAkB,CAChBhd,WAAY,QAGdid,YAAaA,KACXtlB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAI,CAACf,MAAO,CAAEqB,QAAS,GAAI1C,UAC1BO,EAAAA,EAAAA,KAACyc,GAAAA,QAAS,CAAC5N,QAASA,IAAMhC,EAAWS,SAAS,UAAWxM,MAAO,CAAC,EAAErB,UACjEO,EAAAA,EAAAA,KAAC6H,EAAAA,QAAW,CACVgC,MAAOwI,GACL2S,GAAclf,OACdkf,GAAclU,UAEhBhJ,KAAM,GACNhH,MAAO,CACLmH,gBAAiB5H,EAAOG,QACxB8H,MAAO,GACP4G,OAAQ,GACRzE,YAAa,YAMtBhL,SAAA,EAEHO,EAAAA,EAAAA,KAAC6U,GAAO6P,OAAM,CACZ1c,KAAK,OACL2c,UAAWja,GACXka,QAAS,CAAExd,MAAO,6BAEpBpH,EAAAA,EAAAA,KAAC6U,GAAO6P,OAAM,CACZ1c,KAAK,gBACL2c,UAAWL,GACXM,QAAS,CAAExd,MAAO,gCAEpBpH,EAAAA,EAAAA,KAAC6U,GAAO6P,OAAM,CACZ1c,KAAK,SACL2c,UAAWjU,GACXkU,QAAS,CAAExd,MAAO,6BAEpBpH,EAAAA,EAAAA,KAAC6U,GAAO6P,OAAM,CACZ1c,KAAK,WACL2c,UAAW7I,GACX8I,QAAS,CAAExd,MAAO,iCAI1B,CAEA,MAAMme,GAAkBA,KACtB,MAAM,KAAE7nB,GAASwC,KACX,MAAEuT,GAAUe,KAGZgR,EAAkB/R,EAAMgS,KAAIriB,OAAAC,OAAA,GAEzBqiB,EAAAA,UAAoB,CACvBrlB,OAAM+C,OAAAC,OAAA,GACDqiB,EAAAA,UAAoBrlB,OACpBoT,EAAMpT,UACV+C,OAAAC,OAAA,GAGEsiB,EAAAA,aAAuB,CAC1BtlB,OAAM+C,OAAAC,OAAA,GACDsiB,EAAAA,aAAuBtlB,OACvBoT,EAAMpT,UAIjB,OACEL,EAAAA,EAAAA,KAAC4lB,EAAAA,oBAAmB,CAACnS,MAAO+R,EAAgB/lB,UAC1CO,EAAAA,EAAAA,KAACokB,GAAMG,UAAS,CAAA9kB,SACZ/B,EAMEA,EAAK6f,mBACPvd,EAAAA,EAAAA,KAACokB,GAAMM,OAAM,CACX1c,KAAK,gBACL2c,UAAW/H,GACXgI,QAAS,CACPxd,MAAO,qCACPqd,aAAa,MAIjBzkB,EAAAA,EAAAA,KAACokB,GAAMM,OAAM,CACX1c,KAAK,OACL2c,UAAWI,GACXH,QAAS,CAAEH,aAAa,MAlB1BzkB,EAAAA,EAAAA,KAACokB,GAAMM,OAAM,CACX1c,KAAK,QACL2c,UAAW/X,GACXgY,QAAS,CAAEH,aAAa,QAmBV,EAIX,SAASoB,KACtB,OACE7lB,EAAAA,EAAAA,KAACR,EAAY,CAAAC,UACXO,EAAAA,EAAAA,KAACuC,EAAe,CAAA9C,UACdO,EAAAA,EAAAA,KAACulB,GAAe,OAIxB,C,0DC7IA,MAiCA,GAjCqBO,EAAGC,eACtB,MAAM,OAAE1lB,IAAWC,EAAAA,EAAAA,YACbuP,EAAU,IAAImW,GAAAA,QAASC,MAAM,GAoBnC,OAlBArmB,EAAAA,EAAAA,YAAU,KACRomB,GAAAA,QAASE,OAAOrW,EAAS,CACvBsW,QAAS,EACTxN,SAAU,IACVyN,iBAAiB,IAChB1lB,OAAM,KACP2lB,YAAW,KACTL,GAAAA,QAASE,OAAOrW,EAAS,CACvBsW,QAAS,GACTxN,SAAU,IACVyN,iBAAiB,IAChB1lB,OAAM,KACPqlB,GAAU,GACV,GACD,IAAK,GACR,GACD,KAGD/lB,EAAAA,EAAAA,KAACgmB,GAAAA,QAASnkB,KAAI,CACZf,MAAO,CAACC,GAAOwM,UAAW,CAAEsC,WAAW,CAAE5H,gBAAiBf,IAAgBzH,UAE1EO,EAAAA,EAAAA,KAACmI,EAAAA,QAAI,CAACC,QAAQ,aAAatH,MAAOC,GAAOqG,MAAM3H,SAAC,6BAGlC,EAMdsB,GAASgB,EAAAA,QAAWC,OAAO,CAC/BuL,UAAW,CACTnM,KAAM,EACN6K,eAAgB,SAChBnD,WAAY,UAEd1B,MAAO,CACLkD,SAAU,GACVjC,WAAY,UC8BhB,SAASie,KACP,MAAM,MAAE7S,EAAK,WAAEF,GAAeiB,KAC9B,OACE9M,EAAAA,EAAAA,MAAC6e,GAAAA,QAAa,CAAC9S,MAAOA,EAAMhU,SAAA,EAC1BO,EAAAA,EAAAA,KAACuB,GAAAA,UAAS,CAACT,MAAOyS,EAAa,QAAU,UACzCvT,EAAAA,EAAAA,KAAC6lB,GAAM,MAGb,CAzCAC,GAAAA,wBCvCAU,EAAAA,EAAAA,UDyCe,WACb,MAAOC,IAAeC,EAAAA,GAAAA,UAAQtjB,OAAAC,OAAC,CAAC,EAC3B+F,EAAAA,QAAuBud,QAGrBC,EAAYC,IAAiBnnB,EAAAA,EAAAA,WAAS,GAEvConB,GAAmBC,EAAAA,EAAAA,cAAY1pB,UAGnC,GACC,CAACopB,IAWJ,OATA7mB,EAAAA,EAAAA,YAAU,KACJ6mB,GAAaK,GAAkB,GAClC,CAACL,IAOCA,GAGHzmB,EAAAA,EAAAA,KAAC0T,GAAa,CAAAjU,SACXmnB,GAAa5mB,EAAAA,EAAAA,KAACgnB,GAAM,CAACjB,SATC1oB,UACzBwpB,GAAc,SACRf,GAAAA,WAAwB,KAO6B9lB,EAAAA,EAAAA,KAACsmB,GAAY,MAJjD,IAO3B,G,qFE5EIW,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB7kB,IAAjB8kB,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,OACf,CAGAH,EAAoBO,EAAIF,E,MCzBxB,IAAIG,EAAW,GACfR,EAAoBS,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASvE,EAAI,EAAGA,EAAIgE,EAASze,OAAQya,IAAK,CAGzC,IAFA,IAAKmE,EAAUC,EAAIC,GAAYL,EAAShE,GACpCwE,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAAS5e,OAAQkf,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAa3kB,OAAOE,KAAK4jB,EAAoBS,GAAGjO,OAAO5b,GAASopB,EAAoBS,EAAE7pB,GAAK+pB,EAASM,MAC9IN,EAASO,OAAOD,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbR,EAASU,OAAO1E,IAAK,GACrB,IAAI2E,EAAIP,SACExlB,IAAN+lB,IAAiBT,EAASS,EAC/B,CACD,CACA,OAAOT,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIrE,EAAIgE,EAASze,OAAQya,EAAI,GAAKgE,EAAShE,EAAI,GAAG,GAAKqE,EAAUrE,IAAKgE,EAAShE,GAAKgE,EAAShE,EAAI,GACrGgE,EAAShE,GAAK,CAACmE,EAAUC,EAAIC,EAqBjB,C,KCzBdb,EAAoBoB,EAAKhB,IACxB,IAAIiB,EAASjB,GAAUA,EAAOkB,WAC7B,IAAOlB,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoBuB,EAAEF,EAAQ,CAAEhQ,EAAGgQ,IAC5BA,CAAM,ECLdrB,EAAoBuB,EAAI,CAACpB,EAASqB,KACjC,IAAI,IAAI5qB,KAAO4qB,EACXxB,EAAoByB,EAAED,EAAY5qB,KAASopB,EAAoByB,EAAEtB,EAASvpB,IAC5EsF,OAAOwlB,eAAevB,EAASvpB,EAAK,CAAE+qB,YAAY,EAAMC,IAAKJ,EAAW5qB,IAE1E,ECNDopB,EAAoB6B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOniB,GACR,GAAsB,kBAAXoiB,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBjC,EAAoByB,EAAI,CAACS,EAAKC,IAAUjmB,OAAOkmB,UAAUC,eAAe/B,KAAK4B,EAAKC,GCClFnC,EAAoBmB,EAAKhB,IACH,qBAAXmC,QAA0BA,OAAOC,aAC1CrmB,OAAOwlB,eAAevB,EAASmC,OAAOC,YAAa,CAAE1rB,MAAO,WAE7DqF,OAAOwlB,eAAevB,EAAS,aAAc,CAAEtpB,OAAO,GAAO,ECL9DmpB,EAAoBwC,EAAI,I,MCKxB,IAAIC,EAAkB,CACrB,IAAK,GAaNzC,EAAoBS,EAAEQ,EAAKyB,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4B/qB,KACvD,IAGIooB,EAAUyC,GAHT/B,EAAUkC,EAAaC,GAAWjrB,EAGhB2kB,EAAI,EAC3B,GAAGmE,EAASoC,MAAMzmB,GAAgC,IAAxBmmB,EAAgBnmB,KAAa,CACtD,IAAI2jB,KAAY4C,EACZ7C,EAAoByB,EAAEoB,EAAa5C,KACrCD,EAAoBO,EAAEN,GAAY4C,EAAY5C,IAGhD,GAAG6C,EAAS,IAAIpC,EAASoC,EAAQ9C,EAClC,CAEA,IADG4C,GAA4BA,EAA2B/qB,GACrD2kB,EAAImE,EAAS5e,OAAQya,IACzBkG,EAAU/B,EAASnE,GAChBwD,EAAoByB,EAAEgB,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO1C,EAAoBS,EAAEC,EAAO,EAGjCsC,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmB3mB,QAAQsmB,EAAqBO,KAAK,KAAM,IAC3DF,EAAmBvG,KAAOkG,EAAqBO,KAAK,KAAMF,EAAmBvG,KAAKyG,KAAKF,G,KC7CvF,IAAIG,EAAsBnD,EAAoBS,OAAErlB,EAAW,CAAC,MAAM,IAAO4kB,EAAoB,OAC7FmD,EAAsBnD,EAAoBS,EAAE0C,E","sources":["src/utils/storage.ts","src/context/authContent.tsx","src/layout/layout.tsx","src/utils/url.ts","src/context/appDataContext.tsx","src/api/aulas.ts","src/api/alarcoin.ts","src/utils/colors.ts","src/components/ResumenMiniCard.tsx","src/components/AlumnosList.tsx","src/screens/home-screen.tsx","src/utils/getSaludoFecha.ts","src/screens/login-screen.tsx","src/api/login.ts","src/screens/profile.tsx","src/utils/initials.ts","src/components/avatarCard.tsx","src/utils/theme.ts","src/context/themeContext.tsx","src/navigations/CustomDrawerContent.tsx","src/components/DropDonw.tsx","src/components/AlarcoinModal.tsx","src/components/LoadError.tsx","src/components/materiaCard.tsx","src/components/ResponsiveGrid.tsx","src/screens/alarcoin.tsx","src/screens/changePassword.tsx","src/api/updateUser.ts","src/screens/MisAulas.tsx","src/api/asistenciasClases.ts","src/components/ModalAsistencias.tsx","src/api/setClaseAsistencia.ts","src/components/claseCard.tsx","src/screens/DetailsAulas.tsx","src/api/clasesMateria.ts","src/navigations/materiasStack.tsx","src/navigations/router.tsx","src/screens/splashScreen.tsx","App.tsx","index.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { User as UsuarioType } from \"../types/UserType\";\r\nimport {\r\n  MateriasSimpleType as Aula,\r\n  ClaseType,\r\n  MateriasAlumnosType,\r\n} from \"../types/AulaType\";\r\nimport { Alarcoin, AlarcoinAulaAlumnoType } from \"../types/AlarcoinType\";\r\nimport { AsistenciaAlumnoType } from \"../types/AsistenciaType\";\r\n\r\nexport const saveUser = async (user: UsuarioType) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"user\", JSON.stringify(user));\r\n  } catch (error) {\r\n    console.error(\"Error guardando el usuario:\", error);\r\n  }\r\n};\r\n\r\nexport const getUser = async (): Promise<UsuarioType | null> => {\r\n  try {\r\n    const user = await AsyncStorage.getItem(\"user\");\r\n    if (user !== null) {\r\n      return JSON.parse(user);\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error(\"Error obteniendo el usuario:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveToStorage = async (key: string, value: string) => {\r\n  try {\r\n    await AsyncStorage.setItem(key, value);\r\n  } catch (error) {\r\n    console.error(\"Error guardando en storage:\", error);\r\n  }\r\n};\r\n\r\nexport const getFromStorage = async (key: string): Promise<string | null> => {\r\n  try {\r\n    return await AsyncStorage.getItem(key);\r\n  } catch (error) {\r\n    console.error(\"Error obteniendo de storage:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const removeFromStorage = async (key: string) => {\r\n  try {\r\n    await AsyncStorage.removeItem(key);\r\n  } catch (error) {\r\n    console.error(\"Error eliminando de storage:\", error);\r\n  }\r\n};\r\n\r\nexport const saveAula = async (aulas: Aula[]) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"aulas\", JSON.stringify(aulas));\r\n  } catch (error) {\r\n    console.log(\"error al guardar materias\", error);\r\n  }\r\n};\r\n\r\nexport const getAulaStorage = async (): Promise<Aula[] | null> => {\r\n  try {\r\n    const aula = await AsyncStorage.getItem(\"aulas\");\r\n    if (aula != null) return JSON.parse(aula) as Aula[];\r\n    return null;\r\n  } catch (error) {\r\n    console.log(\"no hay aulas\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveAlumnos = async (alumnos: UsuarioType[]) => {\r\n  try {\r\n    const json = JSON.stringify(alumnos);\r\n    await AsyncStorage.setItem(\"alumnos\", json);\r\n  } catch (error) {\r\n    console.error(\"Error al guardar alumnos:\", error);\r\n  }\r\n};\r\n\r\nexport const getAlumnosStorage = async (): Promise<Record<\r\n  number,\r\n  UsuarioType\r\n> | null> => {\r\n  try {\r\n    const data = await AsyncStorage.getItem(\"alumnos\");\r\n    if (!data) return null;\r\n\r\n    const alumnosArray: UsuarioType[] = JSON.parse(data);\r\n    const alumnosMap: Record<number, UsuarioType> = {};\r\n\r\n    alumnosArray.forEach((alumno) => {\r\n      alumnosMap[alumno.id] = alumno;\r\n    });\r\n\r\n    return alumnosMap;\r\n  } catch (error) {\r\n    console.error(\"Error al leer alumnos desde storage:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveAlarcoinsProfe = async (data: MateriasAlumnosType[]) => {\r\n  try {\r\n    const json = JSON.stringify(data);\r\n    await saveToStorage(\"alarcoins_profe\", json);\r\n  } catch (error) {\r\n    console.error(\"Error al guardar alarcoin en storage:\", error);\r\n  }\r\n};\r\n\r\nexport const getAlarcoinsProfe = async (): Promise<\r\n  MateriasAlumnosType[] | null\r\n> => {\r\n  try {\r\n    const json = await getFromStorage(\"alarcoins_profe\");\r\n    return json ? JSON.parse(json) : null;\r\n  } catch (error) {\r\n    console.error(\"Error al leer alarcoins profe:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Para alumno\r\nexport const saveAlarcoinsAlumno = async (data: AlarcoinAulaAlumnoType[]) => {\r\n  try {\r\n    const json = JSON.stringify(data);\r\n    await saveToStorage(\"alarcoins_alumno\", json);\r\n  } catch (error) {\r\n    console.error(\"Error al guardar alarcoin del alumno:\", error);\r\n  }\r\n};\r\n\r\nexport const getAlarcoinsAlumno = async (): Promise<\r\n  AlarcoinAulaAlumnoType[] | null\r\n> => {\r\n  try {\r\n    const json = await getFromStorage(\"alarcoins_alumno\");\r\n    return json ? JSON.parse(json) : null;\r\n  } catch (error) {\r\n    console.error(\"Error al leer alarcoin del alumno:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveAsistencias = async (data: AsistenciaAlumnoType[]) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"asistencias\", JSON.stringify(data));\r\n  } catch (error) {\r\n    console.error(\"Error al guardar asistencias:\", error);\r\n  }\r\n};\r\n\r\nexport const getAsistenciasStorage = async (): Promise<\r\n  AsistenciaAlumnoType[] | null\r\n> => {\r\n  try {\r\n    const data = await AsyncStorage.getItem(\"asistencias\");\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error(\"Error al leer asistencias:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveClases = async (\r\n  materiaId: number,\r\n  data: ClaseType[]\r\n): Promise<void> => {\r\n  try {\r\n    await AsyncStorage.setItem(`clases_${materiaId}`, JSON.stringify(data));\r\n  } catch (error) {\r\n    console.error(\"Error guardando clases:\", error);\r\n  }\r\n};\r\n\r\nexport const getClasesStorage = async (\r\n  materiaId: number\r\n): Promise<ClaseType[] | null> => {\r\n  try {\r\n    const data = await AsyncStorage.getItem(`clases_${materiaId}`);\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error(\"Error leyendo clases:\", error);\r\n    return null;\r\n  }\r\n};\r\n","// AuthContext.tsx\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { User } from \"../types/UserType\";\r\nimport { getUser, getFromStorage, removeFromStorage } from \"../utils/storage\";\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  setUser: (user: User | null) => void;\r\n  token: string | null;\r\n  setToken: (token: string | null) => void;\r\n  logout: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  setUser: () => {},\r\n  token: null,\r\n  setToken: () => {},\r\n  logout: () => {},\r\n  loading: true,\r\n});\r\n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const users = await getUser();\r\n      const token = await getFromStorage(\"token\");\r\n      if (users) setUser(users);\r\n      if (token) setToken(token);\r\n      setLoading(false);\r\n    };\r\n    loadUser();\r\n  }, []);\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await removeFromStorage(\"token\");\r\n      await removeFromStorage(\"user\");\r\n      await removeFromStorage(\"aulas\");\r\n    } catch (error) {\r\n      console.log(\"error al borrar items\", error);\r\n    }\r\n\r\n    setUser(null);\r\n    setToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ user, setUser, loading, token, setToken, logout }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n","import { ReactNode } from \"react\";\r\nimport {\r\n  Platform,\r\n  StyleSheet,\r\n  View,\r\n  ScrollView,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { useTheme } from \"react-native-paper\";\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const Layout = ({ children }: LayoutProps) => {\r\n  const { colors } = useTheme();\r\n  return (\r\n    <LinearGradient\r\n      colors={[colors.primary, colors.background]}\r\n      start={{ x: 0.6, y: 1.0 }}\r\n      end={{ x: 0.5, y: 0.0 }}\r\n      style={styles.gradient}\r\n    >\r\n      <SafeAreaView style={styles.safeArea}>\r\n        <KeyboardAvoidingView\r\n          style={styles.flex}\r\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n          keyboardVerticalOffset={\r\n            Platform.OS === \"ios\" ? 0 : StatusBar.currentHeight || 0\r\n          }\r\n        >\r\n          <ScrollView\r\n            contentContainerStyle={styles.scrollContainer}\r\n            keyboardShouldPersistTaps=\"handled\"\r\n          >\r\n            <View style={styles.innerContainer}>{children}</View>\r\n          </ScrollView>\r\n        </KeyboardAvoidingView>\r\n      </SafeAreaView>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  gradient: {\r\n    flex: 1,\r\n  },\r\n  safeArea: {\r\n    flex: 1,\r\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n});\r\n","export const urlBase = \"https://adminaulas.onrender.com\";\r\n// https://adminaulas.onrender.com\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useAuth } from \"./authContent\";\r\nimport { User as AlumnoType } from \"../types/UserType\";\r\nimport {\r\n  MateriasAlumnosType,\r\n  MateriasSimpleType,\r\n  MateriasType,\r\n} from \"../types/AulaType\";\r\nimport { getalumnosAulas, getMisAulas } from \"../api/aulas\";\r\nimport {\r\n  getAlumnosStorage,\r\n  getAulaStorage,\r\n  getFromStorage,\r\n  saveAlumnos,\r\n  saveAula,\r\n  saveAlarcoinsAlumno,\r\n  saveAlarcoinsProfe,\r\n  getAlarcoinsAlumno as getAlarcoinsAlumnoFromStorage,\r\n  getAlarcoinsProfe as getAlarcoinsProfeFromStorage,\r\n} from \"../utils/storage\";\r\nimport { Alarcoin, AlarcoinAulaAlumnoType } from \"../types/AlarcoinType\";\r\nimport { getHistorialProfesor, getAlarcoinsAlumno } from \"../api/alarcoin\";\r\n\r\ninterface AppDataContextType {\r\n  aulas: MateriasSimpleType[];\r\n  alumnosMap: Record<number, AlumnoType>;\r\n  isLoading: boolean;\r\n  loadData: (token: string) => void;\r\n  alarcoins:\r\n    | Alarcoin[]\r\n    | null\r\n    | MateriasAlumnosType[]\r\n    | AlarcoinAulaAlumnoType[];\r\n  loadAlarcoins: () => void;\r\n  alarcoinsError: boolean;\r\n}\r\n\r\nconst AppDataContext = createContext<AppDataContextType | undefined>(undefined);\r\n\r\nexport const AppDataProvider = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => {\r\n  const { token, user } = useAuth();\r\n  const [aulas, setAulas] = useState<MateriasSimpleType[]>([]);\r\n  const [alumnosMap, setAlumnosMap] = useState<Record<number, AlumnoType>>({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [alarcoins, setAlarcoins] = useState<\r\n    Alarcoin[] | null | MateriasAlumnosType[] | AlarcoinAulaAlumnoType[]\r\n  >(null);\r\n  const [alarcoinsError, setAlarcoinsError] = useState(false);\r\n\r\n  const calcularCantidadAlarcoins = (alarcoins: any[]) => {\r\n    return alarcoins.reduce((acc, item) => {\r\n      return acc + (item.suma ? item.cantidad : -item.cantidad);\r\n    }, 0);\r\n  };\r\n\r\n  //alarcoin si el usuario es profesor\r\n  const alarcoinProfe = async (data: MateriasAlumnosType[]) => {\r\n    const actualizarCantidadAlarcoins = (\r\n      alarcoinsData: MateriasAlumnosType[]\r\n    ) => {\r\n      const nuevoMap: Record<number, AlumnoType> = { ...alumnosMap };\r\n\r\n      Object.keys(nuevoMap).forEach((id) => {\r\n        nuevoMap[+id] = {\r\n          ...nuevoMap[+id],\r\n          alarcoin: 0,\r\n        };\r\n      });\r\n\r\n      alarcoinsData.forEach((aula) => {\r\n        aula.alumnos.forEach((alumno) => {\r\n          const cantidad = calcularCantidadAlarcoins(alumno?.alarcoins);\r\n          if (nuevoMap[alumno.id]) {\r\n            nuevoMap[alumno.id].alarcoin =\r\n              (nuevoMap[alumno.id].alarcoin || 0) + cantidad;\r\n          }\r\n        });\r\n      });\r\n\r\n      setAlumnosMap(nuevoMap);\r\n    };\r\n    actualizarCantidadAlarcoins(data);\r\n    setAlarcoins(data);\r\n    await saveAlarcoinsProfe(data);\r\n  };\r\n  const alarcoinAlumno = async (data: AlarcoinAulaAlumnoType[]) => {\r\n    setAlarcoins(data);\r\n    await saveAlarcoinsAlumno(data);\r\n  };\r\n\r\n  const loadAlarcoins = async () => {\r\n    let efectiveToken = token;\r\n    if (!token) {\r\n      efectiveToken = await getFromStorage(\"token\");\r\n    }\r\n\r\n    setAlarcoinsError(false);\r\n\r\n    try {\r\n      let data;\r\n      if (user?.is_teacher) {\r\n        data = await getHistorialProfesor(efectiveToken); // llama a /historial\r\n        alarcoinProfe(data);\r\n      } else {\r\n        data = await getAlarcoinsAlumno(efectiveToken); // llama a /me\r\n        alarcoinAlumno(data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error cargando alarcoins:\", error);\r\n\r\n      try {\r\n        if (user?.is_teacher) {\r\n          const local = await getAlarcoinsProfeFromStorage();\r\n          if (local) await alarcoinProfe(local);\r\n        } else {\r\n          const local = await getAlarcoinsAlumnoFromStorage();\r\n          if (local) await alarcoinAlumno(local);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error cargando alarcoins desde storage:\", e);\r\n      }\r\n\r\n      setAlarcoinsError(true);\r\n    }\r\n  };\r\n\r\n  const loadDataAlumno = async (tokenParam: string) => {\r\n    try {\r\n      const cachedAulas = await getAulaStorage();\r\n      if (cachedAulas) {\r\n        setAulas(cachedAulas);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const aulasData: MateriasType[] = await getMisAulas(tokenParam);\r\n      const aulasProcesadas = aulasData.map((aula) => ({\r\n        ...aula,\r\n        alumnos: [user], // el alumno actual\r\n        alumnoIds: [user.id], // agregás este campo a mano para respetar el tipo MateriasSimpleType\r\n      }));\r\n\r\n      setAulas(aulasProcesadas);\r\n      await saveAula(aulasProcesadas);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const loadDataProfe = async (tokenParam: string) => {\r\n    try {\r\n      const cachedAulas = await getAulaStorage();\r\n      const cachedAulumnosMap = await getAlumnosStorage();\r\n\r\n      if (cachedAulas && cachedAulumnosMap) {\r\n        setAulas(cachedAulas);\r\n        setAlumnosMap(cachedAulumnosMap);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const aulasData: MateriasAlumnosType[] = await getalumnosAulas(\r\n        tokenParam\r\n      );\r\n      const alumnosMapTemp: Record<number, AlumnoType> = {};\r\n      const aulasSinAlumnos = aulasData.map((aula) => {\r\n        aula.alumnos.forEach((alumno) => {\r\n          alumnosMapTemp[alumno.id] = alumno;\r\n        });\r\n        return {\r\n          id: aula.id,\r\n          nombre: aula.nombre,\r\n          ano: aula.ano,\r\n          division: aula.division,\r\n          especialidad: aula.especialidad,\r\n          profesor_id: aula.profesor_id,\r\n          cantidad_clases: aula.cantidad_clases,\r\n          alumnoIds: aula.alumnos.map((alumno) => alumno.id),\r\n        };\r\n      });\r\n      setAulas(aulasSinAlumnos);\r\n      setAlumnosMap(alumnosMapTemp);\r\n      await saveAula(aulasSinAlumnos);\r\n\r\n      await saveAlumnos(Object.values(alumnosMapTemp));\r\n    } catch (error) {\r\n      console.error(\"Error cargando datos desde appData:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadData = async (tokenParam?: string) => {\r\n    const effectiveToken = tokenParam || token;\r\n    if (!effectiveToken) return;\r\n\r\n    if (user?.is_teacher) {\r\n      await loadDataProfe(effectiveToken);\r\n    } else {\r\n      await loadDataAlumno(effectiveToken);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [token]);\r\n\r\n  return (\r\n    <AppDataContext.Provider\r\n      value={{\r\n        aulas,\r\n        alumnosMap,\r\n        isLoading,\r\n        loadData,\r\n        alarcoins,\r\n        loadAlarcoins,\r\n        alarcoinsError,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppDataContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppData = () => {\r\n  const context = useContext(AppDataContext);\r\n  if (!context)\r\n    throw new Error(\"useAppData debe usarse dentro de AppDataProvider\");\r\n  return context;\r\n};\r\n","import { urlBase } from \"../utils/url\";\r\nimport { MateriasAlumnosType, MateriasType } from \"../types/AulaType\";\r\n\r\nexport async function getalumnosAulas(\r\n  token: string | null\r\n): Promise<MateriasAlumnosType[]> {\r\n  const response = await fetch(`${urlBase}/aulas/mis-aulas-con-alumnos`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function getMisAulas(token: string): Promise<MateriasType[]> {\r\n  const response = await fetch(`${urlBase}/aulas/mis-aulas`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import {\r\n  Alarcoin,\r\n  AlarcoinAulaAlumnoType,\r\n  AlarcoinCreateType,\r\n} from \"../types/AlarcoinType\";\r\nimport { MateriasAlumnosType } from \"../types/AulaType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\n// Crear alarcoin\r\nexport async function crearAlarcoin(\r\n  token: string | null,\r\n  data: AlarcoinCreateType\r\n): Promise<Alarcoin> {\r\n  const response = await fetch(`${urlBase}/alarcoins/`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al asignar alarcoin\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\n// Actualizar alarcoin\r\nexport async function actualizarAlarcoin(\r\n  token: string,\r\n  id: number,\r\n  data: {\r\n    aula_id: number;\r\n    alumno_id: number;\r\n    detalle: string;\r\n    suma: boolean;\r\n  }\r\n): Promise<Alarcoin> {\r\n  const response = await fetch(`${urlBase}/alarcoins/${id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al actualizar alarcoin\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\n// Obtener alarcoins del alumno actual\r\nexport async function getAlarcoinsAlumno(\r\n  token: string | null\r\n): Promise<AlarcoinAulaAlumnoType[]> {\r\n  const response = await fetch(`${urlBase}/alarcoins/me`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al obtener mis alarcoins\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\n// Obtener historial del profesor\r\nexport async function getHistorialProfesor(\r\n  token: string | null\r\n): Promise<MateriasAlumnosType[]> {\r\n  const response = await fetch(`${urlBase}/alarcoins/historial`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al obtener historial\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","export const PrimaryColor = \"#b14aca\";\r\n","import { Card, Avatar, Text } from \"react-native-paper\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\r\ntype Props = {\r\n  title: string;\r\n  value: number;\r\n  icon: string;\r\n  color: string;\r\n};\r\n\r\nconst ResumenMiniCard = ({ title, value, icon, color = \"#6200ee\" }: Props) => {\r\n  return (\r\n    <Card style={styles.card} mode=\"contained\">\r\n      <Card.Content style={styles.cardContent}>\r\n        <Avatar.Icon\r\n          icon={({ color, size }) => (\r\n            <Ionicons name={icon} color={color} size={size} />\r\n          )}\r\n          style={{ backgroundColor: color }}\r\n        />\r\n        <View style={{ marginLeft: 12 }}>\r\n          <Text variant=\"labelLarge\" style={{ color: \"#777\" }}>\r\n            {title}\r\n          </Text>\r\n          <Text variant=\"titleMedium\" style={{ fontWeight: \"bold\" }}>\r\n            {value}\r\n          </Text>\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ResumenMiniCard;\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n    minWidth: 350,\r\n    marginBottom: 12,\r\n    elevation: 12,\r\n    borderRadius: 12,\r\n    alignSelf: \"center\",\r\n  },\r\n  cardContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { StyleSheet, View } from \"react-native\";\r\nimport { Card, List, Avatar, Divider } from \"react-native-paper\";\r\nimport { User } from \"../types/UserType\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\n// Fix para iconos en web\r\n\r\ninterface Props {\r\n  alumnos: User[];\r\n}\r\nconst AlumnosList = ({ alumnos }: Props) => {\r\n  return (\r\n    <Card style={styles.card}>\r\n      <List.Accordion\r\n        title={`Alumnos (${alumnos.length})`}\r\n        left={(props) => (\r\n          <List.Icon\r\n            {...props}\r\n            icon={({ size, color }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"account-group-outline\"\r\n                size={size}\r\n                color={color}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n        right={(props) => (\r\n          <MaterialCommunityIcons\r\n            name={props.isExpanded ? \"chevron-up\" : \"chevron-down\"}\r\n            size={24}\r\n            color=\"#fff\"\r\n          />\r\n        )}\r\n        titleStyle={styles.accordionTitle}\r\n        style={styles.accordion}\r\n      >\r\n        {alumnos.length === 0 ? (\r\n          <List.Item\r\n            title=\"No hay alumnos\"\r\n            left={(props) => (\r\n              <List.Icon\r\n                {...props}\r\n                icon={({ size, color }) => (\r\n                  <MaterialCommunityIcons\r\n                    name=\"alert-circle-outline\"\r\n                    size={size}\r\n                    color={color}\r\n                  />\r\n                )}\r\n              />\r\n            )}\r\n            titleStyle={{ color: \"#888\" }}\r\n          />\r\n        ) : (\r\n          alumnos.map((alumno, idx) => (\r\n            <View key={alumno.id}>\r\n              <List.Item\r\n                title={alumno.nombre}\r\n                description={alumno.email}\r\n                left={() => (\r\n                  <Avatar.Text\r\n                    size={36}\r\n                    label={alumno.nombre ? alumno.nombre[0].toUpperCase() : \"A\"}\r\n                    style={styles.avatar}\r\n                    color=\"#fff\"\r\n                  />\r\n                )}\r\n                titleStyle={styles.itemTitle}\r\n                descriptionStyle={styles.itemDescription}\r\n                style={styles.listItem}\r\n              />\r\n              {idx < alumnos.length - 1 && <Divider />}\r\n            </View>\r\n          ))\r\n        )}\r\n      </List.Accordion>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AlumnosList;\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    width: \"100%\",\r\n\r\n    maxWidth: 600,\r\n    marginBottom: 12,\r\n    elevation: 12,\r\n    borderRadius: 16,\r\n    overflow: \"hidden\",\r\n  },\r\n  accordion: {},\r\n  accordionTitle: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n  },\r\n  listItem: {\r\n    backgroundColor: \"#fff\",\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 8,\r\n  },\r\n  itemTitle: {\r\n    color: \"#C93A4A\",\r\n    fontWeight: \"600\",\r\n    fontSize: 16,\r\n  },\r\n  itemDescription: {\r\n    color: \"#888\",\r\n    fontSize: 13,\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#C93A4A\",\r\n    marginRight: 8,\r\n  },\r\n});\r\n","import { StyleSheet, View, useWindowDimensions } from \"react-native\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { ActivityIndicator, Text } from \"react-native-paper\";\r\nimport { PrimaryColor } from \"../utils/colors\";\r\nimport { getSaludoFecha } from \"../utils/getSaludoFecha\";\r\nimport ResumenMiniCard from \"../components/ResumenMiniCard\";\r\nimport AlumnosList from \"../components/AlumnosList\";\r\n\r\nconst HomeScreen = () => {\r\n  const { width } = useWindowDimensions();\r\n  const isSmallScreen = width < 400;\r\n\r\n  const { user, loading } = useAuth();\r\n  const { aulas, alumnosMap, isLoading, alarcoins } = useAppData();\r\n  const cargando = isLoading && loading;\r\n\r\n  const totalClasesDictadas = aulas.reduce((total, aula) => {\r\n    return total + (aula.cantidad_clases || 0);\r\n  }, 0);\r\n  const { saludo, fecha } = getSaludoFecha();\r\n\r\n  return (\r\n    <Layout>\r\n      {cargando ? (\r\n        <ActivityIndicator size={\"large\"} color={PrimaryColor} />\r\n      ) : (\r\n        <>\r\n          <View style={[styles.header, isSmallScreen && styles.headerSmall]}>\r\n            <View>\r\n              <Text variant=\"titleMedium\">{`${saludo}, ${user?.nombre}`}</Text>\r\n              <Text variant=\"labelMedium\">\r\n                {user?.is_teacher ? \"Profesor\" : \"Alumno\"}\r\n              </Text>\r\n            </View>\r\n            <View style={isSmallScreen && { marginTop: 8 }}>\r\n              <Text variant=\"bodySmall\">{fecha}</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.cardsContainer}>\r\n            <ResumenMiniCard\r\n              title=\"Aulas\"\r\n              value={aulas.length}\r\n              icon=\"school\"\r\n              color={PrimaryColor}\r\n            />\r\n            <ResumenMiniCard\r\n              title=\"Clases\"\r\n              value={totalClasesDictadas}\r\n              icon=\"calendar\"\r\n              color=\"#C93A9F\"\r\n            />\r\n            {/* <ResumenMiniCard\r\n              title=\"Alarcoins\"\r\n              value={totalClasesDictadas}\r\n              icon=\"star\"\r\n              color=\"#FFD700\"\r\n            /> */}\r\n            {user?.is_teacher && (\r\n              <AlumnosList alumnos={Object.values(alumnosMap)} />\r\n            )}\r\n          </View>\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n    marginBottom: 16,\r\n    gap: 10,\r\n  },\r\n  headerSmall: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    gap: 4,\r\n  },\r\n  cardsContainer: {\r\n    flexWrap: \"wrap\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-between\",\r\n    gap: 16,\r\n    marginBottom: 24,\r\n  },\r\n  alumnosListContainer: {\r\n    marginTop: 16,\r\n  },\r\n});\r\n","export const getSaludoFecha = (): { saludo: string; fecha: string } => {\r\n  const now = new Date();\r\n  const hora = now.getHours();\r\n\r\n  let saludo;\r\n  // Determinar saludo\r\n  if (hora >= 6 && hora < 12) {\r\n    saludo = \"Buenos días\";\r\n  } else if (hora >= 12 && hora < 19) {\r\n    saludo = \"Buenas tardes\";\r\n  } else {\r\n    saludo = \"Buenas noches\";\r\n  }\r\n\r\n  // Formatear fecha\r\n  const opcionesFecha: Intl.DateTimeFormatOptions = {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n  };\r\n\r\n  const fecha = now.toLocaleDateString(\"es-ES\", opcionesFecha);\r\n\r\n  return {\r\n    saludo,\r\n    fecha, // ejemplo: \"20 de mayo de 2025\"\r\n  };\r\n};\r\n","// screens/Login/LoginScreen.tsx\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { loginUser } from \"../api/login\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport { saveToStorage, saveUser } from \"../utils/storage\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { Button, useTheme } from \"react-native-paper\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Email inválido\").required(\"Requerido\"),\r\n  password: Yup.string().min(6, \"Mínimo 6 caracteres\").required(\"Requerido\"),\r\n});\r\n\r\nexport default function LoginScreen() {\r\n  const navigation = useNavigation();\r\n  const { loading, setUser, setToken } = useAuth();\r\n  const { loadData } = useAppData();\r\n  const { colors } = useTheme();\r\n  const handleLogin = async (\r\n    values: { email: string; password: string },\r\n    setSubmitting: (isSubmitting: boolean) => void,\r\n    setError: (msg: string) => void,\r\n    resetForm: () => void\r\n  ) => {\r\n    try {\r\n      const response = await loginUser(values);\r\n      resetForm();\r\n      setUser(response.user);\r\n      setToken(response.access_token);\r\n      await saveUser(response.user);\r\n      await saveToStorage(\"token\", response.access_token);\r\n      loadData(response.access_token);\r\n      navigation.navigate(\"Main\");\r\n    } catch (error: any) {\r\n      setError(\"Credenciales inválidas\");\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {loading ? (\r\n        <Text>Cargando ...</Text>\r\n      ) : (\r\n        <View style={styles.container}>\r\n          <View style={styles.card}>\r\n            <Text style={styles.title}>Iniciar sesión</Text>\r\n\r\n            <Formik\r\n              initialValues={{ email: \"\", password: \"\" }}\r\n              validationSchema={LoginSchema}\r\n              onSubmit={(values, { setSubmitting, setErrors, resetForm }) =>\r\n                handleLogin(\r\n                  values,\r\n                  setSubmitting,\r\n                  (msg) => setErrors({ password: msg }),\r\n                  resetForm\r\n                )\r\n              }\r\n            >\r\n              {({\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                values,\r\n                errors,\r\n                touched,\r\n                isSubmitting,\r\n              }) => (\r\n                <>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Email\"\r\n                    onChangeText={handleChange(\"email\")}\r\n                    onBlur={handleBlur(\"email\")}\r\n                    value={values.email}\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                  />\r\n                  {touched.email && errors.email && (\r\n                    <Text style={styles.error}>{errors.email}</Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Contraseña\"\r\n                    onChangeText={handleChange(\"password\")}\r\n                    onBlur={handleBlur(\"password\")}\r\n                    value={values.password}\r\n                    secureTextEntry\r\n                  />\r\n                  {touched.password && errors.password && (\r\n                    <Text style={styles.error}>{errors.password}</Text>\r\n                  )}\r\n\r\n                  <Button\r\n                    onPress={handleSubmit}\r\n                    style={{\r\n                      backgroundColor: colors.backdrop,\r\n                      paddingVertical: 8,\r\n                      marginTop: 15,\r\n                    }}\r\n                  >\r\n                    {isSubmitting ? (\r\n                      <ActivityIndicator color=\"#fff\" />\r\n                    ) : (\r\n                      <Text style={styles.buttonText}>Ingresar</Text>\r\n                    )}\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Formik>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  card: {\r\n    width: \"85%\",\r\n    padding: 24,\r\n    borderRadius: 12,\r\n    backgroundColor: \"#fefefe80\",\r\n    elevation: 6, // Android shadow\r\n    shadowColor: \"#000\", // iOS shadow\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    maxWidth: 400,\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    height: 48,\r\n    borderColor: \"#ccc\",\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    paddingHorizontal: 12,\r\n    marginTop: 12,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    fontSize: 12,\r\n    marginTop: 4,\r\n    marginLeft: 4,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"600\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n","import { User } from \"../types/UserType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport interface LoginData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface LoginResponse {\r\n  access_token: string;\r\n  user: User;\r\n}\r\n\r\nexport async function loginUser(data: LoginData): Promise<LoginResponse> {\r\n  const response = await fetch(`${urlBase}/users/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { Layout } from \"../layout/layout\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Alert,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\nimport {\r\n  Text,\r\n  Card,\r\n  TextInput,\r\n  Button,\r\n  useTheme,\r\n  Divider,\r\n} from \"react-native-paper\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useAuth } from \"../context/authContent\";\r\n\r\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required(\"El nombre es obligatorio\"),\r\n  email: Yup.string()\r\n    .email(\"Correo inválido\")\r\n    .required(\"El correo es obligatorio\"),\r\n  currentPassword: Yup.string().required(\"Campo obligatorio\"),\r\n  newPassword: Yup.string().min(6, \"Debe tener al menos 6 caracteres\"),\r\n});\r\n\r\nconst Profile = () => {\r\n  const { user } = useAuth();\r\n  const [editable, setEditable] = useState(false);\r\n  const [nombre, setNombre] = useState(user?.nombre);\r\n  const [apellido, setApellido] = useState(user?.apellido);\r\n  const [email] = useState(user?.email);\r\n  const { colors } = useTheme();\r\n  const { width } = useWindowDimensions();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleEdit = () => setEditable(true);\r\n\r\n  const handleCancel = () => {\r\n    setEditable(false);\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (password && password !== confirmPassword) {\r\n      Alert.alert(\"Error\", \"Las contraseñas no coinciden.\");\r\n      return;\r\n    }\r\n    setEditable(false);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <ScrollView contentContainerStyle={[styles.container, ,]}>\r\n        <Text\r\n          variant=\"titleLarge\"\r\n          style={[styles.header, { color: colors.primary }]}\r\n        >\r\n          Perfil\r\n        </Text>\r\n        <Text\r\n          variant=\"bodyMedium\"\r\n          style={[styles.subheader, { color: colors.onSurfaceVariant }]}\r\n        >\r\n          Administra tu información personal\r\n        </Text>\r\n\r\n        <Card style={[styles.card, { backgroundColor: colors.surface }]}>\r\n          <View style={styles.cardheader}>\r\n            <Card.Title\r\n              title=\"Información Personal\"\r\n              subtitle=\"Actualiza tu información de cuenta\"\r\n              titleStyle={[styles.cardTitle, { color: colors.primary }]}\r\n              subtitleStyle={[\r\n                styles.cardSubtitle,\r\n                { color: colors.onSurfaceVariant },\r\n              ]}\r\n            />\r\n          </View>\r\n          <Divider\r\n            style={{ marginBottom: 8, backgroundColor: colors.outlineVariant }}\r\n          />\r\n          <Card.Content>\r\n            <Formik\r\n              initialValues={{\r\n                name: nombre || \"\",\r\n                apellido: apellido || \"\",\r\n                email: email || \"\",\r\n                newPassword: \"\",\r\n                confirmPassword: \"\",\r\n              }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(values) => {\r\n                handleSave();\r\n              }}\r\n              enableReinitialize\r\n            >\r\n              {({\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                values,\r\n                errors,\r\n                touched,\r\n              }) => (\r\n                <View style={styles.form}>\r\n                  <TextInput\r\n                    label=\"Nombre\"\r\n                    value={nombre}\r\n                    onChangeText={setNombre}\r\n                    editable={editable}\r\n                    mode=\"flat\"\r\n                    style={[\r\n                      styles.input,\r\n                      {\r\n                        backgroundColor: editable\r\n                          ? colors.background\r\n                          : colors.surfaceDisabled,\r\n                      },\r\n                    ]}\r\n                    error={!!errors.name && touched.name}\r\n                    onBlur={handleBlur(\"name\")}\r\n                    left={\r\n                      <TextInput.Icon\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons\r\n                            name=\"person-outline\"\r\n                            color={color}\r\n                            size={size}\r\n                          />\r\n                        )}\r\n                      />\r\n                    }\r\n                  />\r\n                  {editable && errors.name && touched.name && (\r\n                    <Text style={[styles.error, { color: colors.error }]}>\r\n                      {errors.name}\r\n                    </Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    label=\"Apellido\"\r\n                    value={apellido}\r\n                    onChangeText={setApellido}\r\n                    editable={editable}\r\n                    mode=\"flat\"\r\n                    style={[\r\n                      styles.input,\r\n                      {\r\n                        backgroundColor: editable\r\n                          ? colors.background\r\n                          : colors.surfaceDisabled,\r\n                      },\r\n                    ]}\r\n                    error={!!errors.apellido && touched.apellido}\r\n                    onBlur={handleBlur(\"apellido\")}\r\n                    left={\r\n                      <TextInput.Icon\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons\r\n                            name=\"person-outline\"\r\n                            color={color}\r\n                            size={size}\r\n                          />\r\n                        )}\r\n                      />\r\n                    }\r\n                  />\r\n                  {editable && errors.apellido && touched.apellido && (\r\n                    <Text style={[styles.error, { color: colors.error }]}>\r\n                      {errors.apellido}\r\n                    </Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    editable={false}\r\n                    mode=\"flat\"\r\n                    style={[\r\n                      styles.input,\r\n                      { backgroundColor: colors.surfaceDisabled },\r\n                    ]}\r\n                    left={\r\n                      <TextInput.Icon\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons\r\n                            name=\"mail-outline\"\r\n                            color={color}\r\n                            size={size}\r\n                          />\r\n                        )}\r\n                      />\r\n                    }\r\n                  />\r\n\r\n                  {editable && (\r\n                    <>\r\n                      <TextInput\r\n                        label=\"Nueva clave\"\r\n                        secureTextEntry\r\n                        textContentType=\"oneTimeCode\"\r\n                        value={password}\r\n                        onChangeText={setPassword}\r\n                        placeholder=\"********\"\r\n                        mode=\"flat\"\r\n                        style={[\r\n                          styles.input,\r\n                          { backgroundColor: colors.background },\r\n                        ]}\r\n                        error={!!errors.newPassword && touched.newPassword}\r\n                        onBlur={handleBlur(\"newPassword\")}\r\n                        left={\r\n                          <TextInput.Icon\r\n                            icon={({ color, size }) => (\r\n                              <Ionicons\r\n                                name=\"lock-closed-outline\"\r\n                                color={color}\r\n                                size={size}\r\n                              />\r\n                            )}\r\n                          />\r\n                        }\r\n                      />\r\n                      {errors.newPassword && touched.newPassword && (\r\n                        <Text style={[styles.error, { color: colors.error }]}>\r\n                          {errors.newPassword}\r\n                        </Text>\r\n                      )}\r\n\r\n                      <TextInput\r\n                        label=\"Repetir clave\"\r\n                        secureTextEntry\r\n                        value={confirmPassword}\r\n                        onChangeText={setConfirmPassword}\r\n                        placeholder=\"********\"\r\n                        mode=\"flat\"\r\n                        style={[styles.input, ,]}\r\n                        left={\r\n                          <TextInput.Icon\r\n                            icon={({ color, size }) => (\r\n                              <Ionicons\r\n                                name=\"lock-closed-outline\"\r\n                                color={color}\r\n                                size={size}\r\n                              />\r\n                            )}\r\n                          />\r\n                        }\r\n                      />\r\n\r\n                      <View style={styles.buttonGroup}>\r\n                        <Button\r\n                          mode=\"outlined\"\r\n                          style={[\r\n                            styles.cancelButton,\r\n                            { borderColor: colors.outline },\r\n                            width < 400 && { flex: 1 },\r\n                          ]}\r\n                          onPress={handleCancel}\r\n                          labelStyle={{ color: colors.primary }}\r\n                        >\r\n                          Cancelar\r\n                        </Button>\r\n                        <Button\r\n                          mode=\"contained\"\r\n                          style={[\r\n                            styles.saveButton,\r\n                            { backgroundColor: colors.primary },\r\n                            width < 400 && { flex: 1 },\r\n                          ]}\r\n                          onPress={handleSubmit as any}\r\n                          labelStyle={{ color: colors.onPrimary }}\r\n                        >\r\n                          Guardar\r\n                        </Button>\r\n                      </View>\r\n                    </>\r\n                  )}\r\n\r\n                  {!editable && (\r\n                    <Button\r\n                      style={[\r\n                        styles.editButton,\r\n                        { backgroundColor: colors.primary },\r\n                        width < 400 && { width: \"100%\", alignSelf: \"center\" },\r\n                      ]}\r\n                      mode=\"contained\"\r\n                      icon={({ color, size }) => (\r\n                        <Ionicons name=\"pencil\" color={color} size={size} />\r\n                      )}\r\n                      onPress={handleEdit}\r\n                      labelStyle={{ color: colors.onPrimary, fontSize: 16 }}\r\n                      contentStyle={{ paddingVertical: 8 }}\r\n                    >\r\n                      Editar\r\n                    </Button>\r\n                  )}\r\n                </View>\r\n              )}\r\n            </Formik>\r\n          </Card.Content>\r\n        </Card>\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexGrow: 1,\r\n    padding: 15,\r\n    alignItems: \"center\",\r\n    minHeight: \"100%\",\r\n  },\r\n  header: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 28,\r\n    marginTop: 16,\r\n    marginBottom: 4,\r\n    alignSelf: \"flex-start\",\r\n    letterSpacing: 0.5,\r\n  },\r\n  subheader: {\r\n    marginBottom: 16,\r\n    alignSelf: \"flex-start\",\r\n    fontSize: 16,\r\n    opacity: 0.85,\r\n  },\r\n  avatarContainer: {\r\n    alignItems: \"center\",\r\n    marginVertical: 16,\r\n    width: \"100%\",\r\n  },\r\n  cardheader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingRight: 8,\r\n    paddingTop: 8,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  cardSubtitle: {\r\n    fontSize: 14,\r\n  },\r\n  editButton: {\r\n    marginTop: 16,\r\n    borderRadius: 20,\r\n    minWidth: 120,\r\n    elevation: 0,\r\n    alignSelf: \"center\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    alignSelf: \"center\",\r\n    marginTop: 16,\r\n    paddingHorizontal: 0,\r\n    borderRadius: 16,\r\n    elevation: 2,\r\n  },\r\n  form: {\r\n    gap: 8,\r\n    marginTop: 8,\r\n    width: \"100%\",\r\n  },\r\n  input: {\r\n    marginBottom: 4,\r\n  },\r\n  error: {\r\n    fontSize: 12,\r\n    marginBottom: 4,\r\n    marginLeft: 4,\r\n  },\r\n  buttonGroup: {\r\n    marginTop: 16,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    gap: 8,\r\n  },\r\n  saveButton: {\r\n    marginLeft: 8,\r\n    borderRadius: 20,\r\n    minWidth: 100,\r\n  },\r\n  cancelButton: {\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 20,\r\n    minWidth: 100,\r\n  },\r\n  logoutButton: {\r\n    marginTop: 32,\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    alignSelf: \"center\",\r\n    borderRadius: 20,\r\n    borderWidth: 1,\r\n    borderColor: \"#e53935\",\r\n    color: \"#e53935\",\r\n  },\r\n});\r\n\r\nexport default Profile;\r\n","export const getInitials = (nombre?: string, apellido?: string) => {\r\n  const n = nombre?.trim()?.[0]?.toUpperCase() ?? \"\";\r\n  const a = apellido?.trim()?.[0]?.toUpperCase() ?? \"\";\r\n  return `${n}${a}`;\r\n};\r\n","import { View, StyleSheet } from \"react-native\";\r\nimport { Avatar, Text } from \"react-native-paper\";\r\nimport { User } from \"../types/UserType\";\r\nimport { useTheme } from \"@react-navigation/native\";\r\nimport { getInitials } from \"../utils/initials\";\r\n\r\ninterface Props {\r\n  isalarcoins: boolean;\r\n  alarcoins: number;\r\n  user: User;\r\n  loading: boolean;\r\n}\r\n\r\nconst AvatarCard = ({\r\n  alarcoins,\r\n  isalarcoins = false,\r\n  user,\r\n  loading,\r\n}: Props) => {\r\n  const { colors } = useTheme();\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.profile,\r\n        isalarcoins && {\r\n          backgroundColor: colors.background,\r\n          borderRadius: 12,\r\n          padding: 16,\r\n          elevation: 2, // o shadow para iOS\r\n          shadowColor: \"#000\",\r\n          shadowOffset: { width: 0, height: 1 },\r\n          shadowOpacity: 0.2,\r\n          shadowRadius: 1.41,\r\n        },\r\n      ]}\r\n    >\r\n      <Avatar.Text\r\n        label={getInitials(user?.nombre, user?.apellido)}\r\n        size={64}\r\n        style={styles.avatar}\r\n      />\r\n      <Text variant=\"titleLarge\" style={styles.name}>\r\n        {loading ? \"Cargando\" : `${user?.nombre} ${user?.apellido}`}\r\n      </Text>\r\n      {!isalarcoins && (\r\n        <Text variant=\"bodySmall\" style={styles.role}>\r\n          {loading ? \"cargando\" : user?.is_teacher ? \"Profesor\" : \"Alumno\"}\r\n        </Text>\r\n      )}\r\n\r\n      {isalarcoins && (\r\n        <View>\r\n          <Text variant=\"bodyMedium\">Tus Alarcoins</Text>\r\n          <Text variant=\"bodyMedium\" style={{ textAlign: \"center\" }}>\r\n            {alarcoins}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  profile: {\r\n    alignItems: \"center\",\r\n    marginBottom: 16,\r\n    maxWidth: 350,\r\n    margin: 10,\r\n    width: \"100%\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#c001f5\",\r\n  },\r\n  name: {\r\n    marginTop: 8,\r\n    fontWeight: \"bold\",\r\n  },\r\n  role: {\r\n    fontSize: 14,\r\n    color: \"#6b7280\",\r\n  },\r\n});\r\n\r\nexport default AvatarCard;\r\n","import { MD3LightTheme, MD3DarkTheme, MD3Theme } from \"react-native-paper\";\r\n\r\nexport const lightTheme: MD3Theme = {\r\n  ...MD3LightTheme,\r\n  colors: {\r\n    ...MD3LightTheme.colors,\r\n    primary: \"#d83dff\",\r\n    background: \"#d1a3ff\",\r\n    surface: \"#d1a3ff\",\r\n    text: \"#2b2b2b\",\r\n    secondary: \"#4ab19f\",\r\n    accent: \"#f2c94c\",\r\n    asistenciaBuena: \"#10b981\",\r\n    asistenciaMedia: \"#ffb93f\",\r\n    asistenciaMala: \"#ef4444\",\r\n  },\r\n};\r\n\r\nexport const darkTheme: MD3Theme = {\r\n  ...MD3DarkTheme,\r\n  colors: {\r\n    ...MD3DarkTheme.colors,\r\n    primary: \"#b14aca\",\r\n    background: \"#302f2f\",\r\n    surface: \"#1e1e1e\",\r\n    text: \"#ffffff\",\r\n    secondary: \"#4ab19f\",\r\n    accent: \"#f2c94c\",\r\n    asistenciaBuena: \"#097551\",\r\n    asistenciaMedia: \"#f59e0b\",\r\n    asistenciaMala: \"#e21313\",\r\n  },\r\n};\r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { Appearance } from \"react-native\";\r\nimport { lightTheme, darkTheme } from \"../utils/theme\";\r\nimport { useColorScheme } from \"react-native\";\r\nimport { getFromStorage, saveToStorage } from \"../utils/storage\";\r\n\r\nconst ThemeContext = createContext({\r\n  isDarkMode: false,\r\n  toggleTheme: () => {},\r\n  theme: lightTheme,\r\n});\r\n\r\nexport const ThemeProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const systemColorScheme = useColorScheme(); // 'light' | 'dark' | null\r\n  const [useSystemTheme, setUseSystemTheme] = useState(true);\r\n  const [isDarkMode, setIsDarkMode] = useState(systemColorScheme === \"dark\");\r\n\r\n  useEffect(() => {\r\n    const loadTheme = async () => {\r\n      const stored = await getFromStorage(\"theme\");\r\n      if (stored === \"light\" || stored === \"dark\") {\r\n        setUseSystemTheme(false);\r\n        setIsDarkMode(stored === \"dark\");\r\n      } else {\r\n        setUseSystemTheme(true);\r\n        setIsDarkMode(systemColorScheme === \"dark\");\r\n      }\r\n    };\r\n    loadTheme();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (useSystemTheme && systemColorScheme) {\r\n      setIsDarkMode(systemColorScheme === \"dark\");\r\n    }\r\n  }, [systemColorScheme, useSystemTheme]);\r\n\r\n  useEffect(() => {\r\n    const listener = Appearance.addChangeListener(({ colorScheme }) => {\r\n      setIsDarkMode(colorScheme === \"dark\");\r\n    });\r\n    return () => listener.remove();\r\n  }, []);\r\n\r\n  const toggleTheme = async () => {\r\n    const newValue = !isDarkMode;\r\n    setIsDarkMode(newValue);\r\n    setUseSystemTheme(false);\r\n    await saveToStorage(\"theme\", newValue ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const theme = isDarkMode ? darkTheme : lightTheme;\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme, theme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useThemeContext = () => useContext(ThemeContext);\r\n","// CustomDrawerContent.tsx\r\nimport React from \"react\";\r\nimport { DrawerContentScrollView, DrawerItem } from \"@react-navigation/drawer\";\r\nimport { Drawer, Switch } from \"react-native-paper\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\r\nimport AvatarCard from \"../components/avatarCard\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { CommonActions, useNavigation } from \"@react-navigation/native\";\r\nimport { useThemeContext } from \"../context/themeContext\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport { RootStack } from \"../types/route\";\r\n\r\nexport default function CustomDrawerContent(props: any) {\r\n  const { isDarkMode, toggleTheme } = useThemeContext();\r\n  const { user, loading, logout } = useAuth();\r\n\r\n  const drawerItems = [\r\n    {\r\n      icon: \"grid-outline\",\r\n      label: \"Dashboard\",\r\n      screen: \"Home\",\r\n    },\r\n    {\r\n      icon: \"person-outline\",\r\n      label: \"Perfil\",\r\n      screen: \"Perfil\",\r\n    },\r\n    {\r\n      icon: \"book-outline\",\r\n      label: \"Mis Aulas\",\r\n      screen: \"MateriasStack\",\r\n    },\r\n    {\r\n      icon: \"logo-bitcoin\",\r\n      label: user\r\n        ? user.is_teacher\r\n          ? \"Alarcoins\"\r\n          : \"Mis Alarcoins\"\r\n        : \"Alarcoins\",\r\n      screen: \"Alarcoin\",\r\n    },\r\n  ];\r\n\r\n  const navigation = useNavigation<NativeStackNavigationProp<RootStack>>();\r\n  return (\r\n    <DrawerContentScrollView {...props} contentContainerStyle={{ flex: 1 }}>\r\n      <View style={styles.container}>\r\n        {/* Perfil */}\r\n        <AvatarCard user={user} loading={loading} isalarcoins={false} />\r\n        {/* Navegación */}\r\n        <Drawer.Section style={styles.nav}>\r\n          {drawerItems.map((item, index) => (\r\n            <DrawerItem\r\n              key={index}\r\n              icon={({ color, size }) => (\r\n                <Ionicons name={item.icon as any} color={color} size={size} />\r\n              )}\r\n              label={item.label}\r\n              onPress={() => props.navigation.navigate(item.screen as any)}\r\n            />\r\n          ))}\r\n        </Drawer.Section>\r\n\r\n        {/* Cerrar sesión */}\r\n        <Drawer.Section style={styles.bottom}>\r\n          <DrawerItem\r\n            icon={({ color, size }) => (\r\n              <Ionicons\r\n                name={isDarkMode ? \"moon\" : \"sunny\"}\r\n                color={color}\r\n                size={size}\r\n              />\r\n            )}\r\n            label={isDarkMode ? \"Modo oscuro\" : \"Modo claro\"}\r\n            onPress={toggleTheme}\r\n            style={styles.themeItem}\r\n            // agregamos el Switch como accesorio a la derecha\r\n            right={(): React.ReactNode => (\r\n              <Switch value={isDarkMode} onValueChange={toggleTheme} />\r\n            )}\r\n          />\r\n\r\n          <DrawerItem\r\n            icon={({ color, size }) => (\r\n              <Feather name=\"log-out\" color={color} size={size} />\r\n            )}\r\n            label=\"Cerrar sesión\"\r\n            onPress={() => {\r\n              logout();\r\n              navigation.dispatch(\r\n                CommonActions.reset({\r\n                  index: 0,\r\n                  routes: [{ name: \"Login\" }],\r\n                })\r\n              );\r\n            }}\r\n          />\r\n        </Drawer.Section>\r\n      </View>\r\n    </DrawerContentScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 24,\r\n  },\r\n  nav: {\r\n    marginTop: 16,\r\n  },\r\n  bottom: {\r\n    marginTop: \"auto\",\r\n    padding: 5,\r\n  },\r\n  switchRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 8,\r\n  },\r\n  themeItem: {\r\n    paddingRight: 8,\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport {\r\n  Button,\r\n  Menu,\r\n  Divider,\r\n  HelperText,\r\n  useTheme,\r\n} from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\ninterface Props {\r\n  historial: { aula_id: number; nombre: string }[];\r\n  onSeleccionar: (id: number | null) => void;\r\n  error?: boolean;\r\n}\r\n\r\nexport const SelectMateria = ({ historial, onSeleccionar, error }: Props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [selected, setSelected] = useState<{\r\n    label: string;\r\n    id: number | null;\r\n  }>({ label: \"Elegir materia\", id: null });\r\n\r\n  const { colors } = useTheme();\r\n\r\n  const openMenu = () => setVisible(true);\r\n  const closeMenu = () => setVisible(false);\r\n\r\n  const handleSelect = (nombre: string, id: number | null) => {\r\n    setSelected({ label: nombre, id });\r\n    closeMenu();\r\n    onSeleccionar(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelected({ label: \"Elegir materia\", id: null });\r\n  }, [historial]);\r\n\r\n  return (\r\n    <View>\r\n      <Menu\r\n        visible={visible}\r\n        onDismiss={closeMenu}\r\n        anchor={\r\n          <Button\r\n            mode={error ? \"contained-tonal\" : \"outlined\"}\r\n            onPress={openMenu}\r\n            contentStyle={styles.buttonContent}\r\n            style={[styles.button, error && { borderColor: colors.error }]}\r\n          >\r\n            <View style={styles.labelWithIcon}>\r\n              <Ionicons\r\n                name=\"book-outline\"\r\n                size={18}\r\n                color={error ? colors.error : colors.onSurface}\r\n                style={styles.iconLeft}\r\n              />\r\n              <View style={styles.labelTextWrapper}>\r\n                <Ionicons\r\n                  name={visible ? \"chevron-up\" : \"chevron-down\"}\r\n                  size={18}\r\n                  color={error ? colors.error : colors.onSurface}\r\n                  style={styles.iconRight}\r\n                />\r\n                <View>\r\n                  <Button\r\n                    mode=\"text\"\r\n                    style={styles.innerLabel}\r\n                    disabled\r\n                    labelStyle={{ color: colors.onSurface }}\r\n                  >\r\n                    {selected.label}\r\n                  </Button>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </Button>\r\n        }\r\n      >\r\n        <Menu.Item\r\n          key=\"default-item\"\r\n          onPress={() => handleSelect(\"Elegir materia\", null)}\r\n          title=\"Elegir materia\"\r\n          leadingIcon={() => (\r\n            <Ionicons name=\"refresh-outline\" size={18} color={colors.primary} />\r\n          )}\r\n        />\r\n        <Divider />\r\n        {historial.map((item) => (\r\n          <Menu.Item\r\n            key={item.aula_id}\r\n            onPress={() => handleSelect(item.nombre, item.aula_id)}\r\n            title={item.nombre}\r\n            leadingIcon={() => (\r\n              <Ionicons\r\n                name=\"school-outline\"\r\n                size={18}\r\n                color={colors.primary}\r\n              />\r\n            )}\r\n          />\r\n        ))}\r\n      </Menu>\r\n\r\n      {error && (\r\n        <HelperText type=\"error\" visible={error}>\r\n          Debes seleccionar una materia.\r\n        </HelperText>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    borderWidth: 1,\r\n  },\r\n  labelWithIcon: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  labelTextWrapper: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 6,\r\n  },\r\n  iconLeft: {\r\n    marginRight: 8,\r\n  },\r\n  iconRight: {\r\n    marginRight: 4,\r\n  },\r\n  innerLabel: {\r\n    paddingHorizontal: 0,\r\n  },\r\n});\r\n","import { useMemo, useState } from \"react\";\r\nimport { View, ScrollView, Alert } from \"react-native\";\r\nimport {\r\n  Modal,\r\n  Portal,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  RadioButton,\r\n  useTheme,\r\n  SegmentedButtons,\r\n  Card,\r\n  Divider,\r\n  Snackbar,\r\n} from \"react-native-paper\";\r\nimport { User } from \"../types/UserType\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport {\r\n  Alarcoin,\r\n  AlarcoinAulaAlumnoType,\r\n  AlarcoinCreateType,\r\n  AlarcoinHistorialType,\r\n} from \"../types/AlarcoinType\";\r\nimport { SelectMateria } from \"./DropDonw\";\r\nimport { crearAlarcoin } from \"../api/alarcoin\";\r\nimport { useAuth } from \"../context/authContent\";\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  onDismiss: () => void;\r\n  user: User | null;\r\n  is_teacher: boolean | undefined;\r\n  selectedAula?: AlarcoinAulaAlumnoType;\r\n}\r\n\r\nconst AlarcoinModal = ({\r\n  visible,\r\n  onDismiss,\r\n  user,\r\n  is_teacher,\r\n  selectedAula,\r\n}: Props) => {\r\n  if (!user) return null;\r\n  const { colors } = useTheme();\r\n  const [tab, setTab] = useState(is_teacher ? \"asignar\" : \"historial\");\r\n  const [cantidad, setCantidad] = useState(\"0\");\r\n  const [concepto, setConcepto] = useState(\"\");\r\n  const [tipo, setTipo] = useState<string>(\"1\");\r\n  const [materiaSeleccionada, setMateriaSeleccionada] = useState<number | null>(\r\n    null\r\n  );\r\n  const [visibleSnack, setVisibleSnack] = useState(false);\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  const { alarcoins, loadAlarcoins } = useAppData();\r\n  const { token } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const historialPorAula = useMemo(() => {\r\n    if (!user) return [];\r\n\r\n    if (is_teacher) {\r\n      // PROFESOR: busca en todas las aulas\r\n      return alarcoins\r\n        .map((aula) => {\r\n          const alumno = aula.alumnos.find((a) => a.id === user.id);\r\n          if (alumno) {\r\n            return {\r\n              aula_id: aula.aula_id,\r\n              nombre: aula.nombre,\r\n              alarcoins: alumno.alarcoins || [],\r\n            };\r\n          }\r\n          return null;\r\n        })\r\n        .filter(\r\n          (\r\n            aula\r\n          ): aula is {\r\n            aula_id: number;\r\n            nombre: string;\r\n            alarcoins: AlarcoinHistorialType[];\r\n          } => aula !== null\r\n        );\r\n    } else if (selectedAula) {\r\n      return [\r\n        {\r\n          aula_id: selectedAula.id,\r\n          nombre: selectedAula.nombre,\r\n          alarcoins: selectedAula.alarcoins,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return [];\r\n  }, [alarcoins, user, is_teacher, selectedAula]);\r\n\r\n  const handleGuardar = async () => {\r\n    if (!materiaSeleccionada || materiaSeleccionada === 0) {\r\n      setMensaje(\"Debes seleccionar una materia válida.\");\r\n      setVisibleSnack(true);\r\n      return;\r\n    }\r\n\r\n    if (!concepto.trim()) {\r\n      Alert.alert(\"Atención\", \"Debes ingresar un concepto.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    const alarcoin: AlarcoinCreateType = {\r\n      aula_id: materiaSeleccionada,\r\n      alumno_id: user.id,\r\n      detalle: concepto,\r\n      suma: Number(tipo),\r\n      cantidad: Number(cantidad),\r\n    };\r\n    try {\r\n      await crearAlarcoin(token, alarcoin);\r\n      setCantidad(\"0\");\r\n      setConcepto(\"\");\r\n      setTipo(\"true\");\r\n      setMateriaSeleccionada(null);\r\n      onDismiss();\r\n      loadAlarcoins();\r\n      setMensaje(\"Alarcoin guardado correctamente.\");\r\n      setVisibleSnack(true);\r\n    } catch (error) {\r\n      setMensaje(\"error al guardar\");\r\n      setVisibleSnack(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <Snackbar\r\n        visible={visibleSnack && mensaje !== \"\"}\r\n        duration={1000}\r\n        onDismiss={() => {\r\n          setVisibleSnack(false);\r\n          setMensaje(\"\");\r\n        }}\r\n        action={{\r\n          label: \"Dale\",\r\n          onPress: () => setVisibleSnack(false),\r\n        }}\r\n      >\r\n        {mensaje}\r\n      </Snackbar>\r\n      <Modal\r\n        visible={visible}\r\n        onDismiss={onDismiss}\r\n        contentContainerStyle={{\r\n          backgroundColor: colors.surface,\r\n          padding: 10,\r\n          margin: 10,\r\n          borderRadius: 12,\r\n          width: \"90%\",\r\n          maxWidth: 500,\r\n          justifyContent: \"flex-start\",\r\n          alignSelf: \"center\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            flexWrap: \"nowrap\",\r\n            overflow: \"hidden\",\r\n            marginBottom: 8,\r\n          }}\r\n        >\r\n          <SegmentedButtons\r\n            value={tab}\r\n            onValueChange={setTab}\r\n            buttons={[\r\n              { value: \"historial\", label: \"Historial\" },\r\n              ...(is_teacher ? [{ value: \"asignar\", label: \"Asignar\" }] : []),\r\n            ]}\r\n            style={{\r\n              flex: 1,\r\n              minWidth: 0,\r\n              maxWidth: \"100%\",\r\n              borderRadius: 12,\r\n              overflow: \"hidden\",\r\n            }}\r\n            contentStyle={{\r\n              flexDirection: \"row\",\r\n              flexWrap: \"nowrap\",\r\n              minWidth: 0,\r\n              maxWidth: \"100%\",\r\n            }}\r\n          />\r\n        </View>\r\n        {tab === \"asignar\" && is_teacher && (\r\n          <Card mode=\"contained\" style={{ marginTop: 10, padding: 5 }}>\r\n            <Text variant=\"titleMedium\" style={{ marginBottom: 5 }}>\r\n              {`Gestionar Alarcoins de: ${user.nombre} ${user.apellido}`}\r\n            </Text>\r\n\r\n            <SelectMateria\r\n              historial={historialPorAula}\r\n              onSeleccionar={setMateriaSeleccionada}\r\n            />\r\n\r\n            <Divider style={{ marginVertical: 16 }} />\r\n\r\n            <Text variant=\"labelLarge\" style={{ marginBottom: 4 }}>\r\n              Cantidad\r\n            </Text>\r\n            <View\r\n              style={{ flexDirection: \"row\", alignItems: \"center\", gap: 8 }}\r\n            >\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={() =>\r\n                  setCantidad((prev) => String(Math.max(0, Number(prev) - 1)))\r\n                }\r\n              >\r\n                -\r\n              </Button>\r\n\r\n              <TextInput\r\n                value={cantidad}\r\n                onChangeText={setCantidad}\r\n                keyboardType=\"numeric\"\r\n                mode=\"outlined\"\r\n                style={{ flex: 1 }}\r\n              />\r\n\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={() => setCantidad((prev) => String(Number(prev) + 1))}\r\n              >\r\n                +\r\n              </Button>\r\n            </View>\r\n\r\n            <TextInput\r\n              label=\"Concepto\"\r\n              mode=\"outlined\"\r\n              value={concepto}\r\n              onChangeText={setConcepto}\r\n              style={{ marginTop: 16 }}\r\n            />\r\n\r\n            <Text variant=\"labelLarge\" style={{ marginTop: 16 }}>\r\n              Tipo de operación\r\n            </Text>\r\n            <RadioButton.Group\r\n              onValueChange={(value) => setTipo(value)}\r\n              value={tipo}\r\n            >\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                <RadioButton.Item label=\"Sumar\" value=\"1\" />\r\n                <RadioButton.Item label=\"Restar\" value=\"0\" />\r\n              </View>\r\n            </RadioButton.Group>\r\n\r\n            <Divider style={{ marginVertical: 16 }} />\r\n\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}>\r\n              <Button mode=\"contained\" onPress={handleGuardar}>\r\n                {loading ? \"Guardando...\" : \"Guardar\"}\r\n              </Button>\r\n            </View>\r\n          </Card>\r\n        )}\r\n        {tab === \"historial\" && (\r\n          <View style={{ marginTop: 12 }}>\r\n            <Text variant=\"titleMedium\" style={{ marginBottom: 8 }}>\r\n              Historial de Alarcoins\r\n            </Text>\r\n            {historialPorAula.every((item) => item.alarcoins.length === 0) ? (\r\n              <Text style={{ marginTop: 8 }}>No hay historial aún</Text>\r\n            ) : (\r\n              <ScrollView>\r\n                {historialPorAula\r\n                  .filter((aula) => aula.alarcoins.length > 0)\r\n                  .map((aula) => {\r\n                    // Calcular el total de alarcoins para el aula\r\n                    const totalAlarcoins = aula.alarcoins.reduce(\r\n                      (acc, entry) =>\r\n                        acc +\r\n                        (entry.suma > 0 ? entry.cantidad : -entry.cantidad),\r\n                      0\r\n                    );\r\n                    return (\r\n                      <Card key={aula.aula_id} style={{ marginBottom: 16 }}>\r\n                        <Card.Title\r\n                          title={\r\n                            <View\r\n                              key={aula.aula_id}\r\n                              style={{\r\n                                flexDirection: \"row\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                            >\r\n                              <Text>{aula.nombre}</Text>\r\n                              <Text\r\n                                style={{\r\n                                  marginLeft: 8,\r\n                                  fontWeight: \"bold\",\r\n                                  color: totalAlarcoins >= 0 ? \"green\" : \"red\",\r\n                                }}\r\n                              >\r\n                                {`(${totalAlarcoins})`}\r\n                              </Text>\r\n                            </View>\r\n                          }\r\n                        />\r\n                        <Card.Content>\r\n                          {aula.alarcoins.map((entry) => (\r\n                            <View key={entry.id}>\r\n                              <View\r\n                                key={entry.id}\r\n                                style={{\r\n                                  flexDirection: \"row\",\r\n                                  justifyContent: \"space-between\",\r\n                                  marginVertical: 4,\r\n                                }}\r\n                              >\r\n                                <Text>\r\n                                  {new Date(entry.fecha).toLocaleDateString()}\r\n                                </Text>\r\n                                <Text>{entry.detalle}</Text>\r\n                                <Text\r\n                                  style={{\r\n                                    color: entry.suma > 0 ? \"green\" : \"red\",\r\n                                  }}\r\n                                >\r\n                                  {entry.suma > 0\r\n                                    ? `+${entry.cantidad}`\r\n                                    : `-${entry.cantidad}`}\r\n                                </Text>\r\n                              </View>\r\n                              <Divider />\r\n                            </View>\r\n                          ))}\r\n                        </Card.Content>\r\n                      </Card>\r\n                    );\r\n                  })}\r\n              </ScrollView>\r\n            )}\r\n          </View>\r\n        )}\r\n      </Modal>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nexport default AlarcoinModal;\r\n\r\n//implementar a futuro\r\n\r\n// import React, { useMemo, useState } from \"react\";\r\n// import { Modal, Portal, Card, Text, Button, Divider } from \"react-native-paper\";\r\n// import { View, ScrollView, StyleSheet, Dimensions } from \"react-native\";\r\n// import { TabView, SceneMap, TabBar } from \"react-native-tab-view\";\r\n// import { User } from \"../types/UserType\";\r\n// import { AlarcoinAulaAlumnoType } from \"../types/AlarcoinType\";\r\n// import { useAppData } from \"../context/appDataContext\";\r\n\r\n// interface Props {\r\n//   visible: boolean;\r\n//   onDismiss: () => void;\r\n//   user: User | null;\r\n//   is_teacher: boolean | undefined;\r\n//   selectedAula?: AlarcoinAulaAlumnoType;\r\n// }\r\n\r\n// const AlarcoinModal: React.FC<Props> = ({\r\n//   visible,\r\n//   onDismiss,\r\n//   user,\r\n//   is_teacher,\r\n//   selectedAula,\r\n// }) => {\r\n//   const layout = Dimensions.get(\"window\");\r\n//   const [index, setIndex] = useState(0);\r\n\r\n//   const [routes] = useState([\r\n//     { key: \"historial\", title: \"Historial\" },\r\n//     ...(is_teacher ? [{ key: \"asignar\", title: \"Asignar\" }] : []),\r\n//   ]);\r\n\r\n//   const { alarcoins } = useAppData();\r\n\r\n//   const historial = useMemo(() => {\r\n//     if (!selectedAula || !user) return [];\r\n//     return alarcoins?.alarcoins ?? [];\r\n//   }, [selectedAula, user]);\r\n\r\n//   const renderHistorial = () => (\r\n//     <ScrollView contentContainerStyle={styles.scroll}>\r\n//       <Card>\r\n//         <Card.Title title={selectedAula?.nombre || \"Aula\"} />\r\n//         <Card.Content>\r\n//           {historial.length === 0 ? (\r\n//             <Text>No hay movimientos aún.</Text>\r\n//           ) : (\r\n//             historial.map((entry, index) => (\r\n//               <View key={index} style={styles.entry}>\r\n//                 <Text>{new Date(entry.fecha).toLocaleDateString()}</Text>\r\n//                 <Text>{entry.motivo}</Text>\r\n//                 <Text style={{ color: entry.cantidad > 0 ? \"green\" : \"red\" }}>\r\n//                   {entry.cantidad > 0 ? `+${entry.cantidad}` : entry.cantidad}\r\n//                 </Text>\r\n//                 <Divider style={{ marginVertical: 4 }} />\r\n//               </View>\r\n//             ))\r\n//           )}\r\n//         </Card.Content>\r\n//       </Card>\r\n//     </ScrollView>\r\n//   );\r\n\r\n//   const renderAsignar = () => (\r\n//     <View style={styles.asignar}>\r\n//       <Text style={{ marginBottom: 8 }}>\r\n//         Aquí podrías colocar el formulario de asignación:\r\n//       </Text>\r\n//       <Button mode=\"contained\" onPress={() => {}}>\r\n//         Asignar alarcoins\r\n//       </Button>\r\n//     </View>\r\n//   );\r\n\r\n//   const renderScene = SceneMap({\r\n//     historial: renderHistorial,\r\n//     asignar: renderAsignar,\r\n//   });\r\n\r\n//   return (\r\n//     <Portal>\r\n//       <Modal\r\n//         visible={visible}\r\n//         onDismiss={onDismiss}\r\n//         contentContainerStyle={styles.modal}\r\n//       >\r\n//         <TabView\r\n//           navigationState={{ index, routes }}\r\n//           renderScene={renderScene}\r\n//           onIndexChange={setIndex}\r\n//           initialLayout={{ width: layout.width }}\r\n//           renderTabBar={(props) => (\r\n//             <TabBar\r\n//               {...props}\r\n//               indicatorStyle={{ backgroundColor: \"white\" }}\r\n//               style={{ backgroundColor: \"#6200ee\" }}\r\n//             />\r\n//           )}\r\n//         />\r\n//       </Modal>\r\n//     </Portal>\r\n//   );\r\n// };\r\n\r\n// export default AlarcoinModal;\r\n\r\n// const styles = StyleSheet.create({\r\n//   modal: {\r\n//     margin: 16,\r\n//     backgroundColor: \"white\",\r\n//     borderRadius: 12,\r\n//     padding: 16,\r\n//     maxHeight: \"90%\",\r\n//   },\r\n//   scroll: {\r\n//     paddingBottom: 24,\r\n//   },\r\n//   entry: {\r\n//     marginVertical: 4,\r\n//   },\r\n//   asignar: {\r\n//     padding: 16,\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//   },\r\n// });\r\n","import React from \"react\";\r\nimport { View, Image } from \"react-native\";\r\nimport { ActivityIndicator, Text, Button } from \"react-native-paper\";\r\n\r\ntype Props = {\r\n  isLoading: boolean;\r\n  hasError: boolean;\r\n  reLoad: () => void;\r\n  children: React.ReactNode;\r\n  errorMessage?: string;\r\n};\r\n\r\nexport default function LoadError({\r\n  isLoading,\r\n  hasError,\r\n  reLoad,\r\n  children,\r\n  errorMessage = \"Ocurrió un error al cargar los datos\",\r\n}: Props) {\r\n  if (isLoading) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color=\"violet\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (hasError) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <Text\r\n          variant=\"titleLarge\"\r\n          style={{ marginBottom: 12, color: \"#9333EA\", textAlign: \"center\" }}\r\n        >\r\n          {errorMessage}\r\n        </Text>\r\n        <Image\r\n          source={require(\"../../assets/errorImagen.png\")}\r\n          style={{\r\n            width: 200,\r\n            height: 200,\r\n            marginBottom: 20,\r\n            borderRadius: 100,\r\n          }}\r\n          resizeMode=\"contain\"\r\n        />\r\n        <Button mode=\"contained\" onPress={reLoad}>\r\n          Reintentar\r\n        </Button>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return <>{children}</>;\r\n}\r\n","import { Card, Text, useTheme } from \"react-native-paper\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { MateriasSimpleType } from \"../types/AulaType\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\ntype Props = {\r\n  materia: MateriasSimpleType;\r\n  onPress?: (materia: MateriasSimpleType) => void;\r\n  porcentaje?: number;\r\n  is_alumno: boolean;\r\n  alarcoin?: number;\r\n};\r\n\r\nexport default function MateriasCard({\r\n  materia,\r\n  onPress,\r\n  porcentaje = 0,\r\n  is_alumno,\r\n  alarcoin,\r\n}: Props) {\r\n  const { colors } = useTheme();\r\n  console.log(porcentaje);\r\n  const getColorFromPorcentaje = (porcentaje: number) => {\r\n    if (porcentaje === 0) return [\"transparent\", \"transparent\"];\r\n    if (porcentaje < 60) return [colors.background, colors.asistenciaMala]; // rojo\r\n    if (porcentaje < 79) return [colors.background, colors.asistenciaMedia]; // naranja\r\n\r\n    return [colors.background, colors.asistenciaBuena]; // verde\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      style={[styles.card]}\r\n      mode=\"outlined\"\r\n      onPress={onPress ? () => onPress(materia) : undefined}\r\n    >\r\n      <LinearGradient\r\n        colors={\r\n          is_alumno && !alarcoin\r\n            ? getColorFromPorcentaje(porcentaje)\r\n            : [\"#trnasparent\", \"transparent\"]\r\n        }\r\n        start={{ x: 0.4, y: 0.3 }}\r\n        end={{ x: 1, y: 1 }}\r\n        style={{ borderRadius: 8, padding: 10 }}\r\n      >\r\n        <Card.Content style={styles.cardContent}>\r\n          <View style={styles.infoLeft}>\r\n            <Text variant=\"titleMedium\">{materia.nombre}</Text>\r\n            <View style={styles.scheduleRow}>\r\n              <Text variant=\"bodySmall\">\r\n                {`${materia.ano}° ${materia.division}° - ${materia.especialidad}`}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.infoRight}>\r\n            <Text variant=\"labelSmall\">\r\n              {is_alumno && alarcoin == null\r\n                ? \"Asistencias\"\r\n                : alarcoin != null\r\n                ? \"Alarcoins\"\r\n                : \" Clases dictadas\"}\r\n            </Text>\r\n            <Text variant=\"titleMedium\" style={styles.classCount}>\r\n              {is_alumno && alarcoin == null\r\n                ? `${porcentaje}%`\r\n                : alarcoin != null\r\n                ? alarcoin\r\n                : materia.cantidad_clases}\r\n            </Text>\r\n          </View>\r\n        </Card.Content>\r\n      </LinearGradient>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    marginBottom: 16,\r\n    width: \"100%\",\r\n    marginHorizontal: 10,\r\n    maxWidth: 450,\r\n    borderRadius: 8,\r\n    elevation: 3,\r\n    alignSelf: \"center\",\r\n  },\r\n  cardContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  infoLeft: {\r\n    flex: 1,\r\n    gap: 4,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    gap: 6,\r\n  },\r\n\r\n  infoRight: {\r\n    alignItems: \"flex-end\",\r\n  },\r\n\r\n  classCount: {\r\n    marginTop: 2,\r\n    fontWeight: \"600\",\r\n  },\r\n});\r\n","import { FlatList, View, useWindowDimensions } from \"react-native\";\r\nimport React from \"react\";\r\n\r\ninterface ResponsiveGridProps<T> {\r\n  items: T[];\r\n  renderItem: (item: T) => React.ReactElement | null;\r\n  numColumns?: number;\r\n  getKey: (item: T) => string | number;\r\n  refreshing?: boolean;\r\n  onRefresh?: () => void;\r\n  ListEmptyComponent?: React.ReactElement | null;\r\n  ListFooterComponent?: React.ReactElement | null;\r\n  alumno?: boolean;\r\n}\r\n\r\nexport default function ResponsiveGrid<T>({\r\n  items,\r\n  renderItem,\r\n  getKey,\r\n  numColumns,\r\n  refreshing,\r\n  onRefresh,\r\n  ListEmptyComponent,\r\n  ListFooterComponent,\r\n  alumno,\r\n}: ResponsiveGridProps<T>) {\r\n  const { width } = useWindowDimensions();\r\n\r\n  const computedColumns =\r\n    alumno === true ? 1 : numColumns ? numColumns : width >= 900 ? 2 : 1;\r\n\r\n  return (\r\n    <FlatList\r\n      data={items}\r\n      key={computedColumns} // para forzar re-render al cambiar columnas\r\n      keyExtractor={(item) => getKey(item).toString()}\r\n      numColumns={computedColumns}\r\n      refreshing={refreshing}\r\n      onRefresh={onRefresh}\r\n      contentContainerStyle={{\r\n        padding: 12,\r\n        gap: 12,\r\n        paddingBottom: 32,\r\n      }}\r\n      columnWrapperStyle={\r\n        computedColumns > 1\r\n          ? {\r\n              gap: 12,\r\n              justifyContent: \"space-between\",\r\n              marginBottom: 12,\r\n            }\r\n          : undefined\r\n      }\r\n      renderItem={({ item }) => (\r\n        <View style={{ flex: 1, marginBottom: 12 }}>{renderItem(item)}</View>\r\n      )}\r\n      ListEmptyComponent={ListEmptyComponent}\r\n      ListFooterComponent={ListFooterComponent}\r\n    />\r\n  );\r\n}\r\n","// import { Layout } from \"../layout/layout\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { ScrollView, View, Pressable, useWindowDimensions } from \"react-native\";\r\n// import { useAppData } from \"../context/appDataContext\";\r\n// import { useAuth } from \"../context/authContent\";\r\n// import AvatarCard from \"../components/avatarCard\";\r\n// import AlarcoinModal from \"../components/AlarcoinModal\";\r\n// import { User } from \"../types/UserType\";\r\n// import LoadError from \"../components/LoadError\";\r\n// import MateriasCard from \"../components/materiaCard\";\r\n// import { AlarcoinAulaAlumnoType } from \"../types/AlarcoinType\";\r\n\r\n// const Alarcoin = () => {\r\n//   const { user } = useAuth();\r\n//   const { alumnosMap, loadAlarcoins, alarcoins, alarcoinsError, aulas } =\r\n//     useAppData();\r\n//   const [selectedAlumno, setSelectedAlumno] = useState<User | null>(null);\r\n//   const [selectedAula, setSelectedAula] = useState<\r\n//     AlarcoinAulaAlumnoType | undefined\r\n//   >();\r\n//   const [visible, setVisible] = useState(false);\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n\r\n//   const { width } = useWindowDimensions();\r\n\r\n//   const fetchData = () => {\r\n//     if (alarcoins) {\r\n//       setIsLoading(false);\r\n//       return;\r\n//     }\r\n//     setIsLoading(true);\r\n//     loadAlarcoins();\r\n//     setIsLoading(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const getNumColumns = () => {\r\n//     if (width >= 1000) return 3;\r\n//     if (width >= 600) return 2;\r\n//     return 1;\r\n//   };\r\n\r\n//   const numColumns = getNumColumns();\r\n\r\n//   const handleOpenModal = ({\r\n//     item,\r\n//   }: {\r\n//     item: User | AlarcoinAulaAlumnoType;\r\n//   }) => {\r\n//     if (user?.is_teacher) {\r\n//       setSelectedAlumno(item);\r\n//     } else {\r\n//       setSelectedAlumno(user);\r\n//       setSelectedAula(item);\r\n//     }\r\n//     setVisible(true);\r\n//   };\r\n\r\n//   const renderItem = (item: any) => {\r\n//     if (!user?.is_teacher) {\r\n//       const materia = aulas.find((a) => a.id === item.aula_id);\r\n//       if (!materia) return null;\r\n\r\n//       const total = item.alarcoins.reduce(\r\n//         (acc, a) => acc + (a.suma ? a.cantidad : -a.cantidad),\r\n//         0\r\n//       );\r\n\r\n//       return (\r\n//         <Pressable\r\n//           key={item.aula_id}\r\n//           style={({ pressed }) => [{ flex: 1, opacity: pressed ? 0.5 : 1 }]}\r\n//           onPress={() => handleOpenModal({ item })}\r\n//         >\r\n//           <MateriasCard materia={materia} is_alumno={true} alarcoin={total} />\r\n//         </Pressable>\r\n//       );\r\n//     } else {\r\n//       return (\r\n//         <Pressable\r\n//           key={item.id}\r\n//           style={({ pressed }) => [{ flex: 1, opacity: pressed ? 0.5 : 1 }]}\r\n//           onPress={() => handleOpenModal({ item })}\r\n//         >\r\n//           <AvatarCard\r\n//             user={item}\r\n//             loading={false}\r\n//             isalarcoins={true}\r\n//             alarcoins={item.alarcoin}\r\n//           />\r\n//         </Pressable>\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const handleCloseModal = () => {\r\n//     setVisible(false);\r\n//   };\r\n\r\n//   const dataList: User[] | AlarcoinAulaAlumnoType[] = user?.is_teacher\r\n//     ? Object.values(alumnosMap)\r\n//     : alarcoins ?? [];\r\n\r\n//   // Agrupar los items en filas según numColumns\r\n//   const rows = [];\r\n//   for (let i = 0; i < dataList.length; i += numColumns) {\r\n//     rows.push(dataList.slice(i, i + numColumns));\r\n//   }\r\n\r\n//   return (\r\n//     <Layout>\r\n//       <LoadError\r\n//         isLoading={isLoading}\r\n//         hasError={alarcoinsError}\r\n//         errorMessage=\"Error al cargar los Alarcoins\"\r\n//         reLoad={fetchData}\r\n//       >\r\n//         <ScrollView\r\n//           contentContainerStyle={{\r\n//             paddingBottom: 32,\r\n//             gap: 12,\r\n//             flexDirection: numColumns > 1 ? \"row\" : \"column\",\r\n//             flexWrap: numColumns > 1 ? \"wrap\" : \"nowrap\",\r\n//             justifyContent: numColumns > 1 ? \"center\" : \"flex-start\",\r\n//           }}\r\n//         >\r\n//           {rows.map((row, rowIndex) => (\r\n//             <View\r\n//               key={rowIndex}\r\n//               style={{\r\n//                 flexDirection: \"row\",\r\n//                 justifyContent: numColumns > 1 ? \"center\" : \"flex-start\",\r\n//                 marginBottom: 12,\r\n//                 gap: 12,\r\n//               }}\r\n//             >\r\n//               {row.map((item) => (\r\n//                 <View\r\n//                   key={user?.is_teacher ? item.id : item.aula_id}\r\n//                   style={[\r\n//                     numColumns > 1 && {\r\n//                       width: width / 2 - 24,\r\n//                       marginHorizontal: 6,\r\n//                     },\r\n//                   ]}\r\n//                 >\r\n//                   {renderItem(item)}\r\n//                 </View>\r\n//               ))}\r\n//               {/* Si la última fila no está completa, rellenar con Views vacíos */}\r\n//               {row.length < numColumns &&\r\n//                 Array.from({ length: numColumns - row.length }).map(\r\n//                   (_, idx) => <View key={`empty-${idx}`} style={{ flex: 1 }} />\r\n//                 )}\r\n//             </View>\r\n//           ))}\r\n//         </ScrollView>\r\n\r\n//         <AlarcoinModal\r\n//           visible={visible}\r\n//           onDismiss={handleCloseModal}\r\n//           user={selectedAlumno}\r\n//           is_teacher={user?.is_teacher}\r\n//           selectedAula={selectedAula}\r\n//         />\r\n//       </LoadError>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// export default Alarcoin;\r\n\r\nimport { Layout } from \"../layout/layout\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  FlatList,\r\n  Platform,\r\n  Pressable,\r\n  useWindowDimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport AvatarCard from \"../components/avatarCard\";\r\nimport AlarcoinModal from \"../components/AlarcoinModal\";\r\nimport { User } from \"../types/UserType\";\r\nimport LoadError from \"../components/LoadError\";\r\nimport MateriasCard from \"../components/materiaCard\";\r\nimport { AlarcoinAulaAlumnoType } from \"../types/AlarcoinType\";\r\nimport ResponsiveGrid from \"../components/ResponsiveGrid\";\r\nimport { getAlarcoinsAlumno, getAlarcoinsProfe } from \"../utils/storage\";\r\nimport { MateriasAlumnosType } from \"../types/AulaType\";\r\nimport { Button, Text } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nconst Alarcoin = () => {\r\n  const { user } = useAuth();\r\n  const { alumnosMap, loadAlarcoins, alarcoins, alarcoinsError, aulas } =\r\n    useAppData();\r\n  const [selectedAlumno, setSelectedAlumno] = useState<User | null>(null);\r\n  const [selectedAula, setSelectedAula] = useState<AlarcoinAulaAlumnoType>();\r\n  const [visible, setVisible] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [coin, setCoin] = useState<\r\n    MateriasAlumnosType[] | null | AlarcoinAulaAlumnoType[]\r\n  >(null);\r\n\r\n  const { width } = useWindowDimensions();\r\n\r\n  const numColumns = useMemo(() => {\r\n    if (width >= 1000) return 3;\r\n    if (width >= 600) return 2;\r\n    return 1;\r\n  }, [width]);\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      if (user?.is_teacher) {\r\n        const local = await getAlarcoinsProfe();\r\n        if (local && Array.isArray(local)) {\r\n          setCoin(local);\r\n          return;\r\n        }\r\n      } else {\r\n        const local = await getAlarcoinsAlumno();\r\n        if (local && Array.isArray(local)) {\r\n          setCoin(local);\r\n          return;\r\n        }\r\n      }\r\n\r\n      loadAlarcoins(); // hace el fetch del backend y actualiza\r\n      setCoin(alarcoins);\r\n    } catch (error) {\r\n      console.error(\"Error al cargar alarcoins:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleOpenModal = (item: User | AlarcoinAulaAlumnoType) => {\r\n    if (user?.is_teacher) {\r\n      setSelectedAlumno(item as User);\r\n    } else {\r\n      setSelectedAlumno(user);\r\n      setSelectedAula(item as AlarcoinAulaAlumnoType);\r\n    }\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const renderItem = (item: User | AlarcoinAulaAlumnoType) => {\r\n    if (!user?.is_teacher) {\r\n      const materia = aulas.find(\r\n        (a) => a.id === (item as AlarcoinAulaAlumnoType).aula_id\r\n      );\r\n      if (!materia) return null;\r\n\r\n      const total = (item as AlarcoinAulaAlumnoType).alarcoins.reduce(\r\n        (acc, a) => acc + (a.suma ? a.cantidad : -a.cantidad),\r\n        0\r\n      );\r\n\r\n      return (\r\n        <Pressable\r\n          style={({ pressed }) => [{ flex: 1, opacity: pressed ? 0.5 : 1 }]}\r\n          onPress={() => handleOpenModal(item)}\r\n        >\r\n          <MateriasCard materia={materia} is_alumno={true} alarcoin={total} />\r\n        </Pressable>\r\n      );\r\n    } else {\r\n      return (\r\n        <Pressable\r\n          style={({ pressed }) => [{ flex: 1, opacity: pressed ? 0.5 : 1 }]}\r\n          onPress={() => handleOpenModal(item)}\r\n        >\r\n          <AvatarCard\r\n            user={item as User}\r\n            loading={false}\r\n            isalarcoins={true}\r\n            alarcoins={(item as User).alarcoin}\r\n          />\r\n        </Pressable>\r\n      );\r\n    }\r\n  };\r\n\r\n  const dataList: (MateriasAlumnosType | User | AlarcoinAulaAlumnoType)[] =\r\n    user?.is_teacher ? Object.values(alumnosMap) : coin ?? [];\r\n\r\n  return (\r\n    <Layout>\r\n      <LoadError\r\n        isLoading={isLoading}\r\n        hasError={alarcoinsError}\r\n        errorMessage=\"Error al cargar los Alarcoins\"\r\n        reLoad={fetchData}\r\n      >\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n          <Text variant=\"titleMedium\">\r\n            {user?.is_teacher ? \"Tus Alumnos\" : \"Alarcoin por aulas\"}\r\n          </Text>\r\n          {Platform.OS !== \"android\" && Platform.OS !== \"ios\" && (\r\n            <View style={{ marginBottom: 10, width: 200 }}>\r\n              <Button\r\n                mode=\"contained\"\r\n                style={{\r\n                  borderRadius: 8,\r\n                  marginVertical: 10,\r\n                }}\r\n                onPress={loadAlarcoins}\r\n                icon={({ color, size }) => (\r\n                  <Ionicons name=\"refresh\" color={color} size={size} />\r\n                )}\r\n              >\r\n                Refrescar\r\n              </Button>\r\n            </View>\r\n          )}\r\n        </View>\r\n\r\n        <ResponsiveGrid\r\n          items={dataList}\r\n          numColumns={numColumns}\r\n          renderItem={renderItem}\r\n          getKey={(item) =>\r\n            user?.is_teacher\r\n              ? (item as User).id\r\n              : (item as AlarcoinAulaAlumnoType).nombre\r\n          }\r\n          refreshing={isLoading}\r\n          onRefresh={fetchData}\r\n          alumno={!user?.is_teacher}\r\n        />\r\n\r\n        <AlarcoinModal\r\n          visible={visible}\r\n          onDismiss={handleCloseModal}\r\n          user={selectedAlumno}\r\n          is_teacher={user?.is_teacher}\r\n          selectedAula={selectedAula}\r\n        />\r\n      </LoadError>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Alarcoin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport {\r\n  TextInput,\r\n  Button,\r\n  Text,\r\n  Card,\r\n  ActivityIndicator,\r\n} from \"react-native-paper\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport { updateUser } from \"../api/updateUser\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { saveUser, getFromStorage } from \"../utils/storage\";\r\n\r\nconst ChangePassword = () => {\r\n  const { user, setUser, token } = useAuth();\r\n  const navigator = useNavigation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [apiError, setApiError] = useState<string | null>(null);\r\n  const [validToken, setValidToken] = useState<String | null>(token);\r\n\r\n  useEffect(() => {\r\n    if (validToken) return;\r\n    const tokenToStorage = getFromStorage(\"token\");\r\n    setValidToken(tokenToStorage);\r\n  });\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    newPassword: Yup.string()\r\n      .min(6, \"La contraseña debe tener al menos 6 caracteres\")\r\n      .matches(\r\n        /[A-Z]/,\r\n        \"La contraseña debe contener al menos una letra mayúscula\"\r\n      )\r\n      .required(\"Campo obligatorio\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"newPassword\")], \"Las contraseñas no coinciden\")\r\n      .required(\"Campo obligatorio\"),\r\n  });\r\n\r\n  const handleSubmit = async (values: {\r\n    newPassword: string;\r\n    confirmPassword: string;\r\n  }) => {\r\n    setLoading(true);\r\n    setApiError(null);\r\n    try {\r\n      const updatedUser = await updateUser(\r\n        {\r\n          password: values.newPassword,\r\n          cambiarContrasena: false,\r\n        },\r\n        token // No se manda token si es el primer inicio\r\n      );\r\n\r\n      setUser({ ...updatedUser });\r\n      await saveUser(updatedUser);\r\n      navigator.navigate(\"Main\" as never);\r\n    } catch (error: any) {\r\n      setApiError(error.message || \"Error al cambiar la contraseña\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.container}>\r\n        <Card style={styles.card}>\r\n          <Card.Title\r\n            title=\"Cambia tu contraseña\"\r\n            subtitle=\"Por seguridad, debes actualizarla\"\r\n          />\r\n          <Card.Content>\r\n            <Formik\r\n              initialValues={{ newPassword: \"\", confirmPassword: \"\" }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {({\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                values,\r\n                errors,\r\n                touched,\r\n              }) => (\r\n                <View>\r\n                  <TextInput\r\n                    label=\"Nueva contraseña\"\r\n                    secureTextEntry\r\n                    value={values.newPassword}\r\n                    onChangeText={handleChange(\"newPassword\")}\r\n                    onBlur={handleBlur(\"newPassword\")}\r\n                    style={styles.input}\r\n                  />\r\n                  {touched.newPassword && errors.newPassword && (\r\n                    <Text style={styles.error}>{errors.newPassword}</Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    label=\"Repetir contraseña\"\r\n                    secureTextEntry\r\n                    value={values.confirmPassword}\r\n                    onChangeText={handleChange(\"confirmPassword\")}\r\n                    onBlur={handleBlur(\"confirmPassword\")}\r\n                    style={styles.input}\r\n                  />\r\n                  {touched.confirmPassword && errors.confirmPassword && (\r\n                    <Text style={styles.error}>{errors.confirmPassword}</Text>\r\n                  )}\r\n\r\n                  {apiError && <Text style={styles.error}>{apiError}</Text>}\r\n\r\n                  <Button\r\n                    mode=\"contained\"\r\n                    onPress={handleSubmit}\r\n                    style={styles.button}\r\n                    disabled={loading}\r\n                    loading={loading}\r\n                  >\r\n                    Guardar contraseña\r\n                  </Button>\r\n                </View>\r\n              )}\r\n            </Formik>\r\n          </Card.Content>\r\n        </Card>\r\n      </View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n    justifyContent: \"center\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n  },\r\n  input: {\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    marginBottom: 10,\r\n  },\r\n});\r\n","// services/userService.ts\r\nimport { User } from \"../types/UserType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport interface UpdateUserData {\r\n  password?: string;\r\n  name?: string;\r\n  email?: string;\r\n  cambiarContrasena: boolean;\r\n}\r\n\r\nexport async function updateUser(\r\n  data: UpdateUserData,\r\n  token: string | null\r\n): Promise<User> {\r\n  const response = await fetch(`${urlBase}/users/me`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al actualizar el usuario\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { Layout } from \"../layout/layout\";\r\nimport { ScrollView, StyleSheet, View } from \"react-native\";\r\nimport { Button, IconButton, Text } from \"react-native-paper\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport MateriasCard from \"../components/materiaCard\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport { RootStack } from \"../types/route\";\r\nimport { MateriasSimpleType } from \"../types/AulaType\";\r\nimport { useWindowDimensions } from \"react-native\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AsistenciaAlumnoType, AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { getAsistenciasPorClase } from \"../api/asistenciasClases\";\r\nimport { getAsistenciasStorage, saveAsistencias } from \"../utils/storage\";\r\n\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\ntype Props = NativeStackNavigationProp<RootStack, \"MateriasStack\">;\r\n\r\nconst Materias = () => {\r\n  const { width } = useWindowDimensions();\r\n  const numColums = width >= 900 ? 2 : 1;\r\n  const { user, token } = useAuth();\r\n  const navigation = useNavigation<Props>();\r\n  const { aulas } = useAppData();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [asistencias, setAsistencias] = useState<AsistenciaAlumnoType[]>([]);\r\n\r\n  const getAsistencias = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const data = await getAsistenciasPorClase(token);\r\n      setAsistencias(data);\r\n      await saveAsistencias(data); // actualizar local también\r\n    } catch (error) {\r\n      console.error(\"Error recargando asistencias\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAsistencias = async () => {\r\n      setIsLoading(true);\r\n\r\n      // 1. Intentar obtener desde local\r\n      const local = await getAsistenciasStorage();\r\n      if (local) {\r\n        setAsistencias(local);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      // 2. Si no hay local, fetch desde backend\r\n      getAsistencias();\r\n    };\r\n\r\n    if (!user?.is_teacher) fetchAsistencias();\r\n  }, [isLoading]);\r\n\r\n  const handlerNavigation = (\r\n    item: MateriasSimpleType,\r\n    asistencia: AsistenciaType[]\r\n  ) => {\r\n    navigation.navigate(\"MateriasStack\", {\r\n      screen: \"DetalleMateria\",\r\n      params: { materia: item, asistencia: asistencia },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.header}>\r\n        <View>\r\n          <Text variant=\"titleLarge\" style={styles.title}>\r\n            Mis Materias\r\n          </Text>\r\n          <Text variant=\"bodyMedium\" style={styles.subtitle}>\r\n            {user?.is_teacher\r\n              ? \"Lista de materias que dictas\"\r\n              : \"Lista de materias que cursas\"}\r\n          </Text>\r\n        </View>\r\n\r\n        <Button\r\n          mode=\"contained\"\r\n          style={styles.button}\r\n          onPress={getAsistencias}\r\n          icon={({ color, size }) => (\r\n            <Ionicons name=\"refresh\" color={color} size={size} />\r\n          )}\r\n        >\r\n          Refrescar\r\n        </Button>\r\n      </View>\r\n\r\n      <ScrollView\r\n        contentContainerStyle={{\r\n          paddingBottom: 32,\r\n          gap: 12,\r\n          flexDirection: numColums > 1 ? \"row\" : \"column\",\r\n          flexWrap: numColums > 1 ? \"wrap\" : \"nowrap\",\r\n          justifyContent: numColums > 1 ? \"center\" : \"flex-start\",\r\n        }}\r\n      >\r\n        {aulas.map((item) => {\r\n          const asistenciaAula = asistencias.find((a) => a.aula_id === item.id);\r\n          const porcentaje = asistenciaAula?.porcentaje_asistencia;\r\n          const asistenciaAulaClases = asistencias.find(\r\n            (a) => a.aula_id === item.id\r\n          );\r\n          const asistenciasA = asistenciaAulaClases?.asistencias || [];\r\n          return (\r\n            <View\r\n              key={item.id}\r\n              style={[\r\n                styles.card,\r\n                numColums > 1 && { width: width / 2 - 24, marginHorizontal: 6 },\r\n              ]}\r\n            >\r\n              <MateriasCard\r\n                materia={item}\r\n                onPress={() => handlerNavigation(item, asistenciasA)}\r\n                porcentaje={porcentaje}\r\n                is_alumno={!user?.is_teacher}\r\n                alarcoin={undefined}\r\n              />\r\n            </View>\r\n          );\r\n        })}\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Materias;\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  header: {\r\n    marginBottom: 24,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignContent: \"center\",\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  subtitle: {\r\n    marginTop: 4,\r\n    color: \"#6b7280\",\r\n  },\r\n  card: {\r\n    marginBottom: 16,\r\n  },\r\n  cardContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  infoLeft: {\r\n    flex: 1,\r\n    gap: 4,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    gap: 6,\r\n  },\r\n  scheduleText: {\r\n    color: \"#6b7280\",\r\n  },\r\n  infoRight: {\r\n    alignItems: \"flex-end\",\r\n  },\r\n  label: {\r\n    color: \"#6b7280\",\r\n  },\r\n  classCount: {\r\n    marginTop: 2,\r\n    fontWeight: \"600\",\r\n  },\r\n  button: {\r\n    borderRadius: 8,\r\n    marginVertical: 10,\r\n  },\r\n});\r\n","import { AsistenciaAlumnoType, AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport async function AsistenciasClase(\r\n  clase_id: number,\r\n  token: string | null\r\n): Promise<AsistenciaType[]> {\r\n  const response = await fetch(\r\n    `${urlBase}/asistencias/asistencias-por-clase/${clase_id}`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function getAsistenciasPorClase(\r\n  token: string | null\r\n): Promise<AsistenciaAlumnoType[]> {\r\n  const response = await fetch(`${urlBase}/asistencias/mis-asistencias`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Pressable,\r\n  useWindowDimensions,\r\n  Alert,\r\n} from \"react-native\";\r\nimport {\r\n  Text,\r\n  Button,\r\n  RadioButton,\r\n  TextInput,\r\n  ActivityIndicator,\r\n  Portal,\r\n  Modal,\r\n  useTheme,\r\n  Card,\r\n} from \"react-native-paper\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { AsistenciasClase } from \"../api/asistenciasClases\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { setClaseAsistencia } from \"../api/setClaseAsistencia\";\r\n\r\ntype Props = {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  clase: ClaseType;\r\n};\r\n\r\ntype AsistenciaEdit = {\r\n  alumno_id: number;\r\n  presente: number;\r\n  justificado?: string;\r\n};\r\n\r\nexport default function ModalAsistencia({ visible, onClose, clase }: Props) {\r\n  const { token } = useAuth();\r\n  const { alumnosMap, aulas } = useAppData();\r\n  const [asistencias, setAsistencias] = useState<AsistenciaType[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [asistenciasEditadas, setAsistenciasEditadas] = useState<\r\n    AsistenciaEdit[]\r\n  >([]);\r\n  const { colors } = useTheme();\r\n  const { width } = useWindowDimensions();\r\n\r\n  const isMobile = width < 600;\r\n  const columns = width >= 1000 ? 3 : width >= 700 ? 2 : 1;\r\n\r\n  const aula = aulas.find((a) => a.id === clase.aula_id);\r\n  const alumnos =\r\n    aula?.alumnoIds.map((id) => alumnosMap[id]).filter(Boolean) ?? [];\r\n\r\n  useEffect(() => {\r\n    if (!visible) return;\r\n\r\n    setIsLoading(true);\r\n    const getAsistencias = async () => {\r\n      try {\r\n        const data = await AsistenciasClase(clase.id, token);\r\n        setAsistencias(data);\r\n        if (data.length === 0) {\r\n          const todosPresentes: AsistenciaEdit[] = alumnos.map((alumno) => ({\r\n            alumno_id: alumno.id,\r\n            presente: 1,\r\n          }));\r\n          setAsistenciasEditadas(todosPresentes);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al obtener asistencias:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    getAsistencias();\r\n    setAsistenciasEditadas([]);\r\n  }, [visible, clase.id]);\r\n\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      setAsistencias([]);\r\n      setAsistenciasEditadas([]);\r\n    }\r\n  }, [visible]);\r\n\r\n  const handleChange = (alumno_id: number, presente: number) => {\r\n    setAsistenciasEditadas((prev) => {\r\n      const existente = prev.find((a) => a.alumno_id === alumno_id);\r\n      if (existente) {\r\n        return prev.map((a) =>\r\n          a.alumno_id === alumno_id ? { ...a, presente } : a\r\n        );\r\n      } else {\r\n        return [...prev, { alumno_id, presente }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleJustificacionChange = (\r\n    alumno_id: number,\r\n    justificado: string\r\n  ) => {\r\n    setAsistenciasEditadas((prev) => {\r\n      const existente = prev.find((a) => a.alumno_id === alumno_id);\r\n      if (existente) {\r\n        return prev.map((a) =>\r\n          a.alumno_id === alumno_id ? { ...a, justificado } : a\r\n        );\r\n      } else {\r\n        return [...prev, { alumno_id, presente: 2, justificado }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleGuardar = async () => {\r\n    try {\r\n      if (asistenciasEditadas.length === 0) {\r\n        Alert.alert(\"Sin cambios\", \"No se detectaron asistencias editadas.\");\r\n        return;\r\n      }\r\n\r\n      const payload = alumnos.map((alumno) => {\r\n        const editada = asistenciasEditadas.find(\r\n          (a) => a.alumno_id === alumno.id\r\n        );\r\n\r\n        return {\r\n          alumno_id: alumno.id,\r\n          presente: editada?.presente ?? 1,\r\n          justificado: editada?.justificado ?? \"no\",\r\n        };\r\n      });\r\n\r\n      console.log(\"Payload a enviar:\", payload);\r\n      await setClaseAsistencia(clase.id, token, payload);\r\n\r\n      Alert.alert(\r\n        \"Guardado\",\r\n        \"Las asistencias fueron actualizadas correctamente.\"\r\n      );\r\n      setAsistenciasEditadas([]);\r\n      onClose();\r\n    } catch (error: any) {\r\n      console.error(\"Error al guardar asistencias:\", error);\r\n      Alert.alert(\"Error\", error.message || \"Ocurrió un error al guardar.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <Modal\r\n        visible={visible}\r\n        onDismiss={onClose}\r\n        contentContainerStyle={[\r\n          styles.modalContainer,\r\n          { backgroundColor: colors.background },\r\n        ]}\r\n      >\r\n        <Text variant=\"titleMedium\" style={styles.headerTitle}>\r\n          Asistencia - {clase.tema}\r\n        </Text>\r\n\r\n        {isLoading ? (\r\n          <ActivityIndicator style={{ marginVertical: 20 }} />\r\n        ) : (\r\n          <ScrollView contentContainerStyle={styles.scroll}>\r\n            <View style={[styles.grid, { gap: 12 }]}>\r\n              {alumnos.map((alumno) => {\r\n                const asistenciaExistente = asistencias.find(\r\n                  (a) => a.alumno_id === alumno.id\r\n                );\r\n                const asistenciaEditada = asistenciasEditadas.find(\r\n                  (a) => a.alumno_id === alumno.id\r\n                );\r\n                const valuePresente =\r\n                  asistenciaEditada?.presente?.toString() ??\r\n                  asistenciaExistente?.presente?.toString() ??\r\n                  \"\";\r\n\r\n                const valueJustificado =\r\n                  asistenciaEditada?.justificado ??\r\n                  asistenciaExistente?.justificado ??\r\n                  \"\";\r\n\r\n                return (\r\n                  <View\r\n                    key={alumno.id}\r\n                    style={[\r\n                      styles.cardWrapper,\r\n                      { width: `${100 / columns - 4}%` },\r\n                    ]}\r\n                  >\r\n                    <Card mode=\"outlined\" style={styles.alumnoCard}>\r\n                      <Card.Content style={{ gap: 4, padding: 5 }}>\r\n                        <Text style={styles.nombreAlumno}>\r\n                          {alumno.nombre} {alumno.apellido}\r\n                        </Text>\r\n\r\n                        <RadioButton.Group\r\n                          onValueChange={(value) =>\r\n                            handleChange(alumno.id, parseInt(value))\r\n                          }\r\n                          value={valuePresente}\r\n                        >\r\n                          <View style={styles.radioRowFixed}>\r\n                            {[\r\n                              {\r\n                                label: isMobile ? \"P\" : \"Presente\",\r\n                                value: \"1\",\r\n                              },\r\n                              { label: isMobile ? \"A\" : \"Ausente\", value: \"2\" },\r\n                              { label: isMobile ? \"T\" : \"Tarde\", value: \"3\" },\r\n                              {\r\n                                label: \"NC\",\r\n                                value: \"0\",\r\n                              },\r\n                            ].map((item) => (\r\n                              <Pressable\r\n                                key={item.value}\r\n                                style={styles.radioItemPressable}\r\n                                onPress={() =>\r\n                                  handleChange(alumno.id, parseInt(item.value))\r\n                                }\r\n                              >\r\n                                <RadioButton\r\n                                  value={item.value}\r\n                                  status={\r\n                                    valuePresente === item.value\r\n                                      ? \"checked\"\r\n                                      : \"unchecked\"\r\n                                  }\r\n                                  onPress={() =>\r\n                                    handleChange(\r\n                                      alumno.id,\r\n                                      parseInt(item.value)\r\n                                    )\r\n                                  }\r\n                                />\r\n                                <Text\r\n                                  style={[\r\n                                    isMobile\r\n                                      ? styles.radioLabelMobile\r\n                                      : styles.radioLabel,\r\n                                    styles.radioLabelText,\r\n                                  ]}\r\n                                >\r\n                                  {item.label}\r\n                                </Text>\r\n                              </Pressable>\r\n                            ))}\r\n                          </View>\r\n                        </RadioButton.Group>\r\n\r\n                        <TextInput\r\n                          label=\"Justificación\"\r\n                          mode=\"outlined\"\r\n                          value={valueJustificado}\r\n                          onChangeText={(text) =>\r\n                            handleJustificacionChange(alumno.id, text)\r\n                          }\r\n                        />\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </View>\r\n                );\r\n              })}\r\n            </View>\r\n          </ScrollView>\r\n        )}\r\n\r\n        <View style={styles.buttonRow}>\r\n          <Button mode=\"text\" onPress={onClose}>\r\n            Cancelar\r\n          </Button>\r\n          <Button mode=\"contained\" onPress={handleGuardar}>\r\n            Guardar\r\n          </Button>\r\n        </View>\r\n      </Modal>\r\n    </Portal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContainer: {\r\n    margin: 10,\r\n    padding: 20,\r\n    borderRadius: 12,\r\n    maxHeight: \"95%\",\r\n  },\r\n  scroll: {\r\n    paddingVertical: 5,\r\n  },\r\n  headerTitle: {\r\n    marginBottom: 12,\r\n  },\r\n  grid: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  cardWrapper: {\r\n    marginBottom: 16,\r\n  },\r\n  alumnoCard: {\r\n    borderRadius: 12,\r\n  },\r\n  nombreAlumno: {\r\n    fontWeight: \"600\",\r\n    marginBottom: 4,\r\n  },\r\n  radioRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  buttonRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    marginTop: 20,\r\n    gap: 10,\r\n  },\r\n  radioRowFixed: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"nowrap\", // importante para evitar múltiples filas\r\n  },\r\n\r\n  radioItemFixed: {\r\n    flex: 1,\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n\r\n  radioLabel: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  radioLabelMobile: {\r\n    fontSize: 12,\r\n  },\r\n  radioItemPressable: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    minWidth: 50,\r\n    maxWidth: 80,\r\n  },\r\n\r\n  radioLabelText: {\r\n    textAlign: \"center\",\r\n    flexShrink: 1,\r\n  },\r\n});\r\n","import { AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport async function setClaseAsistencia(\r\n  clase_id: number,\r\n  token: string | null,\r\n  asistencias: Omit<AsistenciaType, \"id\">[]\r\n): Promise<void> {\r\n  console.log(asistencias);\r\n  const response = await fetch(`${urlBase}/asistencias/masiva/${clase_id}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(asistencias),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al guardar asistencias\");\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Card, Text, Button, useTheme } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\nimport ModalAsistencia from \"./ModalAsistencias\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\n\r\ntype Props = {\r\n  clase: ClaseType;\r\n  asistencia: AsistenciaType | undefined;\r\n};\r\n\r\nexport default function ClaseCard({ clase, asistencia }: Props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const { user } = useAuth();\r\n  const { colors } = useTheme();\r\n  const getColorFromAsistencia = (asistencia: number) => {\r\n    if (asistencia === 1) return [colors.background, colors.asistenciaBuena];\r\n    if (asistencia === 2) return [colors.background, colors.asistenciaMala]; //rojo\r\n    if (asistencia === 3) return [colors.background, colors.asistenciaMedia]; // naranja\r\n    return [\"transparent\", \"transparent\"];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card style={[styles.card]}>\r\n        <LinearGradient\r\n          colors={\r\n            !user?.is_teacher\r\n              ? getColorFromAsistencia(asistencia?.presente)\r\n              : [\"#trnasparent\", \"transparent\"]\r\n          }\r\n          start={{ x: 0.4, y: 0.3 }}\r\n          end={{ x: 1, y: 1 }}\r\n          style={{ borderRadius: 8, padding: 10 }}\r\n        >\r\n          <Card.Content>\r\n            <View style={styles.headerRow}>\r\n              <Text variant=\"titleSmall\" style={styles.cardTitle}>\r\n                {clase.tema}\r\n              </Text>\r\n\r\n              <View style={styles.iconButtons}>\r\n                {user?.is_teacher ? (\r\n                  <>\r\n                    <Ionicons\r\n                      name=\"create-outline\"\r\n                      size={20}\r\n                      color=\"#9CA3AF\"\r\n                      style={styles.iconMargin}\r\n                    />\r\n                    <Ionicons name=\"trash-outline\" size={20} color=\"#9CA3AF\" />\r\n                  </>\r\n                ) : (\r\n                  <Text variant=\"bodyMedium\">\r\n                    {\" \"}\r\n                    {asistencia\r\n                      ? asistencia.presente === 1\r\n                        ? \"Presente\"\r\n                        : asistencia.presente === 2\r\n                        ? \"Ausente\"\r\n                        : \"Tarde\"\r\n                      : \"Sin asistencia\"}\r\n                  </Text>\r\n                )}\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.scheduleRow}>\r\n              <Ionicons\r\n                name=\"calendar-outline\"\r\n                size={13}\r\n                color=\"#9CA3AF\"\r\n                style={styles.iconMargin}\r\n              />\r\n              <Text variant=\"bodySmall\" style={styles.cardSubtitle}>\r\n                {clase.fecha.toString()}\r\n              </Text>\r\n            </View>\r\n\r\n            {user?.is_teacher && (\r\n              <Button\r\n                mode=\"outlined\"\r\n                icon={({ color, size }) => (\r\n                  <Ionicons name=\"checkmark-circle\" color={color} size={size} />\r\n                )}\r\n                style={styles.attendanceButton}\r\n                onPress={() => setModalVisible(true)}\r\n              >\r\n                Tomar asistencia\r\n              </Button>\r\n            )}\r\n          </Card.Content>\r\n        </LinearGradient>\r\n      </Card>\r\n\r\n      {/* Modal de asistencia */}\r\n      <ModalAsistencia\r\n        visible={modalVisible}\r\n        onClose={() => setModalVisible(false)}\r\n        clase={clase}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 400,\r\n    borderRadius: 8,\r\n    elevation: 2,\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 15,\r\n    marginBottom: 10,\r\n  },\r\n  headerRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconButtons: {\r\n    flexDirection: \"row\",\r\n  },\r\n  iconMargin: {\r\n    marginRight: 8,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n  },\r\n  cardTitle: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: 4,\r\n  },\r\n  cardSubtitle: {\r\n    color: \"#6B7280\",\r\n  },\r\n  attendanceButton: {\r\n    marginTop: 10,\r\n  },\r\n  modalBackdrop: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.4)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modalContainer: {\r\n    width: \"85%\",\r\n    padding: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    elevation: 5,\r\n  },\r\n  modalCloseButton: {\r\n    marginTop: 20,\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  modalCloseText: {\r\n    color: \"#2563EB\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","import { View, StyleSheet, Image, ScrollView } from \"react-native\";\r\nimport { Text, Button, ActivityIndicator, useTheme } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useNavigation, useRoute, RouteProp } from \"@react-navigation/native\";\r\nimport { MateriasStackParamList } from \"../types/route\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { clasesMateria } from \"../api/clasesMateria\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\nimport ClaseCard from \"../components/claseCard\";\r\nimport { useWindowDimensions } from \"react-native\";\r\nimport { getClasesStorage, getFromStorage, saveClases } from \"../utils/storage\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport LoadError from \"../components/LoadError\";\r\ntype Props = RouteProp<MateriasStackParamList, \"DetalleMateria\">;\r\n\r\nexport default function DetallesMaterias() {\r\n  const { width } = useWindowDimensions();\r\n  const route = useRoute<Props>();\r\n  const { materia, asistencia } = route.params;\r\n  const navigation = useNavigation();\r\n  const { token, user } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [clases, setClases] = useState<ClaseType[]>([]);\r\n  const [error, setError] = useState(false);\r\n  const { colors } = useTheme();\r\n\r\n  const getClases = async (forzarBackend = false) => {\r\n    let efectiveToken = token;\r\n    if (!token) {\r\n      efectiveToken = await getFromStorage(\"token\");\r\n    }\r\n    try {\r\n      if (!forzarBackend) {\r\n        const local = await getClasesStorage(materia.id);\r\n        if (local) {\r\n          setClases(local);\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Si no hay local o se fuerza el fetch\r\n      const data = await clasesMateria(materia.id, efectiveToken);\r\n      setClases(data);\r\n      await saveClases(materia.id, data); // guardar local\r\n    } catch (error) {\r\n      console.log(\"error al obtener las clases\", error);\r\n      setError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const clasesFiltradas = user?.is_teacher\r\n    ? clases\r\n    : clases.filter((clase) => !/^clases\\s+\\d+/i.test(clase.tema));\r\n\r\n  const numColumns = width >= 1024 ? 3 : width >= 600 ? 2 : 1;\r\n  const isSmallDevice = width < 600;\r\n  useEffect(() => {\r\n    getClases();\r\n  }, []);\r\n\r\n  const handleGoBack = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  const handleAddClass = () => {\r\n    // lógica para agregar clase\r\n  };\r\n\r\n  // Agrupa las clases en filas según numColumns\r\n  const getRows = (data: ClaseType[], columns: number) => {\r\n    const rows = [];\r\n    for (let i = 0; i < data.length; i += columns) {\r\n      rows.push(data.slice(i, i + columns));\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.container}>\r\n        <View\r\n          style={[\r\n            styles.sectionHeader,\r\n            isSmallDevice && {\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\",\r\n              gap: 8,\r\n            },\r\n          ]}\r\n        >\r\n          <View\r\n            style={[\r\n              styles.headerRow,\r\n              isSmallDevice && { flexDirection: \"row\", alignItems: \"center\" },\r\n            ]}\r\n          >\r\n            <Button\r\n              onPress={handleGoBack}\r\n              mode=\"text\"\r\n              compact\r\n              icon={({ size, color }) => (\r\n                <Ionicons name=\"arrow-back\" size={16} color={colors.primary} />\r\n              )}\r\n              contentStyle={styles.backButton}\r\n              labelStyle={[\r\n                styles.backButtonText,\r\n                isSmallDevice && { display: \"none\" },\r\n              ]}\r\n            >\r\n              {!isSmallDevice && \"Volver\"}\r\n            </Button>\r\n            <Text\r\n              variant={isSmallDevice ? \"titleSmall\" : \"titleMedium\"}\r\n              style={[\r\n                styles.subjectTitle,\r\n                {\r\n                  flexShrink: 1,\r\n                  flexWrap: \"wrap\",\r\n                  maxWidth: isSmallDevice ? \"90%\" : \"100%\",\r\n                },\r\n              ]}\r\n              numberOfLines={1}\r\n              ellipsizeMode=\"tail\"\r\n            >\r\n              {materia.nombre}\r\n            </Text>\r\n          </View>\r\n\r\n          <View style={styles.scheduleRow}>\r\n            <Button\r\n              mode=\"contained\"\r\n              style={styles.addButton}\r\n              onPress={() => getClases(true)}\r\n              icon={({ color, size }) => (\r\n                <Ionicons name=\"refresh\" color={color} size={size} />\r\n              )}\r\n            >\r\n              Refrescar\r\n            </Button>\r\n\r\n            {user?.is_teacher && (\r\n              <Button\r\n                icon={({ color, size }) => (\r\n                  <Ionicons\r\n                    name=\"add-circle-outline\"\r\n                    color={color}\r\n                    size={size}\r\n                  />\r\n                )}\r\n                mode=\"contained\"\r\n                onPress={handleAddClass}\r\n                contentStyle={styles.addButtonContent}\r\n                style={styles.addButton}\r\n              >\r\n                Agregar Clase\r\n              </Button>\r\n            )}\r\n          </View>\r\n        </View>\r\n\r\n        {isLoading ? (\r\n          <ActivityIndicator size={\"large\"} color=\"violet\" />\r\n        ) : error ? (\r\n          <View\r\n            style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}\r\n          >\r\n            <Text\r\n              variant=\"titleLarge\"\r\n              style={{\r\n                marginBottom: 12,\r\n                color: \"#9333EA\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Ocurrió un error al cargar las clases\r\n            </Text>\r\n            <Image\r\n              source={require(\"../../assets/errorImagen.png\")}\r\n              style={{\r\n                width: 180,\r\n                height: 180,\r\n                marginBottom: 20,\r\n                borderRadius: 90,\r\n                opacity: 0.85,\r\n              }}\r\n              resizeMode=\"contain\"\r\n            />\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={() => {\r\n                setIsLoading(true);\r\n                setError(false);\r\n                getClases();\r\n              }}\r\n              style={{ marginTop: 8 }}\r\n            >\r\n              Reintentar\r\n            </Button>\r\n          </View>\r\n        ) : (\r\n          <>\r\n            <ScrollView\r\n              contentContainerStyle={{\r\n                paddingBottom: user?.is_teacher ? 90 : 32,\r\n                paddingHorizontal: 6,\r\n                gap: 10,\r\n              }}\r\n              showsVerticalScrollIndicator={false}\r\n            >\r\n              {clasesFiltradas.length === 0 ? (\r\n                <View>\r\n                  <Ionicons\r\n                    name=\"information-circle-outline\"\r\n                    size={48}\r\n                    color=\"#A78BFA\"\r\n                  />\r\n                  <Text\r\n                    style={{\r\n                      color: \"#6B7280\",\r\n                      marginTop: 12,\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    No hay clases registradas aún.\r\n                  </Text>\r\n                </View>\r\n              ) : (\r\n                getRows(clasesFiltradas, numColumns).map((row, rowIndex) => (\r\n                  <View\r\n                    key={rowIndex}\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: numColumns > 1 ? \"center\" : \"flex-start\",\r\n                      marginBottom: 10,\r\n                      gap: 10,\r\n                    }}\r\n                  >\r\n                    {row.map((item) => {\r\n                      const asistenciaDeEstaClase = asistencia.find(\r\n                        (asistencia) => asistencia.id === item.id\r\n                      );\r\n                      return (\r\n                        <View\r\n                          key={item.id}\r\n                          style={{\r\n                            flex: 1,\r\n                            maxWidth: `${100 / numColumns}%`,\r\n                          }}\r\n                        >\r\n                          <View>\r\n                            <ClaseCard\r\n                              clase={item}\r\n                              asistencia={asistenciaDeEstaClase}\r\n                            />\r\n                          </View>\r\n                        </View>\r\n                      );\r\n                    })}\r\n                    {row.length < numColumns &&\r\n                      Array.from({ length: numColumns - row.length }).map(\r\n                        (_, idx) => (\r\n                          <View\r\n                            key={`empty-${idx}`}\r\n                            style={{\r\n                              flex: 1,\r\n                              maxWidth: `${100 / numColumns}%`,\r\n                              minHeight: 120,\r\n                            }}\r\n                          />\r\n                        )\r\n                      )}\r\n                  </View>\r\n                ))\r\n              )}\r\n            </ScrollView>\r\n            {user?.is_teacher && (\r\n              <View>\r\n                <Button\r\n                  icon={({ color, size }) => (\r\n                    <Ionicons name=\"add-circle\" color={color} size={size} />\r\n                  )}\r\n                  mode=\"contained\"\r\n                  onPress={handleAddClass}\r\n                  contentStyle={styles.addButtonContent}\r\n                  style={styles.addButton}\r\n                  labelStyle={{ fontWeight: \"bold\", fontSize: 16 }}\r\n                >\r\n                  Agregar Clase\r\n                </Button>\r\n              </View>\r\n            )}\r\n          </>\r\n        )}\r\n      </View>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  backButton: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingLeft: 0,\r\n  },\r\n  backButtonText: {\r\n    color: \"#4B5563\",\r\n    fontSize: 14,\r\n    marginLeft: 4,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    gap: 6,\r\n  },\r\n\r\n  subjectTitle: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  subjectSchedule: {\r\n    color: \"#6B7280\",\r\n    marginTop: 4,\r\n    marginBottom: 4,\r\n  },\r\n\r\n  sectionHeader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginVertical: 8,\r\n  },\r\n  addButton: {\r\n    borderRadius: 8,\r\n    marginVertical: 10,\r\n  },\r\n  addButtonContent: {\r\n    flexDirection: \"row\",\r\n  },\r\n  headerRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 8,\r\n  },\r\n});\r\n","import { urlBase } from \"../utils/url\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\n\r\nexport async function clasesMateria(\r\n  aulaId: number,\r\n  token: string | null\r\n): Promise<ClaseType[]> {\r\n  const response = await fetch(`${urlBase}/clases/aulas/${aulaId}/clases`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport Materias from \"../screens/MisAulas\";\r\nimport DetalleMateria from \"../screens/DetailsAulas\";\r\nimport { MateriasStackParamList } from \"../types/route\";\r\n\r\nconst Stack = createNativeStackNavigator<MateriasStackParamList>();\r\n\r\nexport default function MateriasStack() {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen\r\n        name=\"Materias\"\r\n        component={Materias}\r\n        options={{ title: \"adminAulas | Mis Materias\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"DetalleMateria\"\r\n        component={DetalleMateria}\r\n        options={{ title: \"adminAulas | Detalle de Materia\" }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import {\r\n  NavigationContainer,\r\n  DefaultTheme as NavigationDefaultTheme,\r\n  DarkTheme as NavigationDarkTheme,\r\n} from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport { AuthProvider, useAuth } from \"../context/authContent\";\r\nimport HomeScreen from \"../screens/home-screen\";\r\nimport LoginScreen from \"../screens/login-screen\";\r\nimport Profile from \"../screens/profile\";\r\nimport { Pressable, View } from \"react-native\";\r\nimport CustomDrawerContent from \"./CustomDrawerContent\";\r\nimport Alarcoin from \"../screens/alarcoin\";\r\nimport ChangePassword from \"../screens/changePassword\";\r\nimport MateriasStack from \"./materiasStack\";\r\nimport { DrawerParamList, RootStack } from \"../types/route\";\r\nimport { AppDataProvider } from \"../context/appDataContext\";\r\nimport { Avatar, useTheme } from \"react-native-paper\";\r\nimport { useThemeContext } from \"../context/themeContext\";\r\nimport { getInitials } from \"../utils/initials\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst Stack = createNativeStackNavigator<RootStack>();\r\nconst Drawer = createDrawerNavigator<DrawerParamList>();\r\n\r\nfunction DrawerNavigator() {\r\n  const { colors } = useTheme();\r\n  const { user } = useAuth();\r\n  const memoizedUser = useMemo(() => user, [user]);\r\n\r\n  return (\r\n    <Drawer.Navigator\r\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\r\n      screenOptions={({ navigation }) => ({\r\n        headerStyle: {\r\n          backgroundColor: colors.elevation.level2,\r\n        },\r\n        headerTintColor: colors.primary,\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n\r\n        headerRight: () => (\r\n          <View style={{ padding: 2 }}>\r\n            <Pressable onPress={() => navigation.navigate(\"Perfil\")} style={{}}>\r\n              <Avatar.Text\r\n                label={getInitials(\r\n                  memoizedUser?.nombre,\r\n                  memoizedUser?.apellido\r\n                )}\r\n                size={40}\r\n                style={{\r\n                  backgroundColor: colors.primary,\r\n                  width: 40,\r\n                  height: 40,\r\n                  marginRight: 10,\r\n                }}\r\n              />\r\n            </Pressable>\r\n          </View>\r\n        ),\r\n      })}\r\n    >\r\n      <Drawer.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{ title: \"adminAulas | Dashboard\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"MateriasStack\"\r\n        component={MateriasStack}\r\n        options={{ title: \"adminAulas | Mis Materias\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Perfil\"\r\n        component={Profile}\r\n        options={{ title: \"adminAulas | Mi Perfil\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Alarcoin\"\r\n        component={Alarcoin}\r\n        options={{ title: \"adminAulas | Mis Alarcoin\" }}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nconst StackNavigation = () => {\r\n  const { user } = useAuth();\r\n  const { theme } = useThemeContext();\r\n\r\n  // Integrar con React Navigation\r\n  const navigationTheme = theme.dark\r\n    ? {\r\n        ...NavigationDarkTheme,\r\n        colors: {\r\n          ...NavigationDarkTheme.colors,\r\n          ...theme.colors,\r\n        },\r\n      }\r\n    : {\r\n        ...NavigationDefaultTheme,\r\n        colors: {\r\n          ...NavigationDefaultTheme.colors,\r\n          ...theme.colors,\r\n        },\r\n      };\r\n\r\n  return (\r\n    <NavigationContainer theme={navigationTheme}>\r\n      <Stack.Navigator>\r\n        {!user ? (\r\n          <Stack.Screen\r\n            name=\"Login\"\r\n            component={LoginScreen}\r\n            options={{ headerShown: false }}\r\n          />\r\n        ) : user.cambiarContrasena ? (\r\n          <Stack.Screen\r\n            name=\"CambiarContra\"\r\n            component={ChangePassword}\r\n            options={{\r\n              title: \"adminAulas | Cambiar Contraseña\",\r\n              headerShown: false,\r\n            }}\r\n          />\r\n        ) : (\r\n          <Stack.Screen\r\n            name=\"Main\"\r\n            component={DrawerNavigator}\r\n            options={{ headerShown: false }}\r\n          />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default function Router() {\r\n  return (\r\n    <AuthProvider>\r\n      <AppDataProvider>\r\n        <StackNavigation />\r\n      </AppDataProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n","// src/screens/SplashScreen.tsx\r\nimport React, { useEffect } from \"react\";\r\nimport { StyleSheet, Animated } from \"react-native\";\r\nimport { useTheme, Text } from \"react-native-paper\";\r\nimport { PrimaryColor } from \"../utils/colors\";\r\n\r\nconst SplashScreen = ({ onFinish }: { onFinish: () => void }) => {\r\n  const { colors } = useTheme();\r\n  const opacity = new Animated.Value(0);\r\n\r\n  useEffect(() => {\r\n    Animated.timing(opacity, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start(() => {\r\n      setTimeout(() => {\r\n        Animated.timing(opacity, {\r\n          toValue: 0.5,\r\n          duration: 500,\r\n          useNativeDriver: true,\r\n        }).start(() => {\r\n          onFinish();\r\n        });\r\n      }, 1000);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[styles.container, { opacity }, { backgroundColor: PrimaryColor }]}\r\n    >\r\n      <Text variant=\"titleLarge\" style={styles.title}>\r\n        AdminAulas 🚀\r\n      </Text>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default SplashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","// import Router from \"./src/navigations/router\";\n// import { PaperProvider } from \"react-native-paper\";\n// import { ThemeProvider, useThemeContext } from \"./src/context/themeContext\";\n// import { StatusBar } from \"expo-status-bar\";\n// import { useFonts } from \"expo-font\";\n// import { MaterialCommunityIcons } from \"@expo/vector-icons\";\n// import { useCallback } from \"react\";\n\n// export default function App() {\n//   const [fontsLoaded] = useFonts({\n//     ...MaterialCommunityIcons.font,\n//   });\n\n//   const onLayoutRootView = useCallback(async () => {\n//     if (fontsLoaded) {\n\n//     }\n//   }, [fontsLoaded]);\n\n//   if (!fontsLoaded) return null;\n//   return (\n//     <ThemeProvider>\n//       <AppWithTheme />\n//     </ThemeProvider>\n//   );\n// }\n\n// function AppWithTheme() {\n//   const { theme, isDarkMode } = useThemeContext();\n//   return (\n//     <PaperProvider theme={theme}>\n//       <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n//       <Router />\n//     </PaperProvider>\n//   );\n// }\nimport Router from \"./src/navigations/router\";\nimport { PaperProvider } from \"react-native-paper\";\nimport { ThemeProvider, useThemeContext } from \"./src/context/themeContext\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useFonts } from \"expo-font\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Splash from \"./src/screens/splashScreen\"; // 👈\n\nSplashScreen.preventAutoHideAsync(); // 👈\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    ...MaterialCommunityIcons.font,\n  });\n\n  const [showSplash, setShowSplash] = useState(true);\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      // podés validar token acá si querés\n    }\n  }, [fontsLoaded]);\n\n  useEffect(() => {\n    if (fontsLoaded) onLayoutRootView();\n  }, [fontsLoaded]);\n\n  const handleSplashFinish = async () => {\n    setShowSplash(false);\n    await SplashScreen.hideAsync(); // 👈 Oculta el splash nativo\n  };\n\n  if (!fontsLoaded) return null;\n\n  return (\n    <ThemeProvider>\n      {showSplash ? <Splash onFinish={handleSplashFinish} /> : <AppWithTheme />}\n    </ThemeProvider>\n  );\n}\n\nfunction AppWithTheme() {\n  const { theme, isDarkMode } = useThemeContext();\n  return (\n    <PaperProvider theme={theme}>\n      <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n      <Router />\n    </PaperProvider>\n  );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [404], () => (__webpack_require__(776)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["saveUser","async","AsyncStorage","setItem","JSON","stringify","user","error","console","saveToStorage","key","value","getFromStorage","getItem","removeFromStorage","removeItem","saveAula","aulas","log","getAulaStorage","aula","parse","getAlarcoinsProfe","json","getAlarcoinsAlumno","saveClases","materiaId","data","getClasesStorage","AuthContext","createContext","setUser","token","setToken","logout","loading","AuthProvider","children","useState","setLoading","useEffect","users","getUser","loadUser","_jsx","Provider","useAuth","useContext","Layout","colors","useTheme","LinearGradient","primary","background","start","x","y","end","style","styles","gradient","SafeAreaView","safeArea","KeyboardAvoidingView","flex","behavior","keyboardVerticalOffset","StatusBar","currentHeight","ScrollView","contentContainerStyle","scrollContainer","keyboardShouldPersistTaps","View","innerContainer","StyleSheet","create","paddingTop","flexGrow","padding","urlBase","AppDataContext","undefined","AppDataProvider","setAulas","alumnosMap","setAlumnosMap","isLoading","setIsLoading","alarcoins","setAlarcoins","alarcoinsError","setAlarcoinsError","alarcoinProfe","alarcoinsData","nuevoMap","Object","assign","keys","forEach","id","alarcoin","alumnos","alumno","cantidad","reduce","acc","item","suma","calcularCantidadAlarcoins","actualizarCantidadAlarcoins","saveAlarcoinsProfe","alarcoinAlumno","saveAlarcoinsAlumno","loadDataAlumno","cachedAulas","aulasData","response","fetch","method","headers","Authorization","ok","errorData","Error","detail","getMisAulas","tokenParam","aulasProcesadas","map","alumnoIds","loadDataProfe","cachedAulumnosMap","alumnosArray","getAlumnosStorage","getalumnosAulas","alumnosMapTemp","aulasSinAlumnos","nombre","ano","division","especialidad","profesor_id","cantidad_clases","saveAlumnos","values","loadData","effectiveToken","is_teacher","loadAlarcoins","efectiveToken","getHistorialProfesor","local","getAlarcoinsProfeFromStorage","getAlarcoinsAlumnoFromStorage","e","useAppData","context","PrimaryColor","ResumenMiniCard","title","icon","color","Card","card","mode","_jsxs","Content","cardContent","Avatar","size","Ionicons","name","backgroundColor","marginLeft","Text","variant","fontWeight","width","maxWidth","minWidth","marginBottom","elevation","borderRadius","alignSelf","flexDirection","alignItems","AlumnosList","List","length","left","props","MaterialCommunityIcons","right","isExpanded","titleStyle","accordionTitle","accordion","idx","description","email","label","toUpperCase","avatar","itemTitle","descriptionStyle","itemDescription","listItem","Divider","overflow","fontSize","paddingVertical","paddingHorizontal","marginRight","HomeScreen","useWindowDimensions","isSmallScreen","cargando","totalClasesDictadas","total","saludo","fecha","getSaludoFecha","now","Date","hora","getHours","toLocaleDateString","day","month","year","ActivityIndicator","_Fragment","header","headerSmall","marginTop","cardsContainer","justifyContent","gap","flexWrap","alignContent","alumnosListContainer","LoginSchema","Yup","shape","required","password","min","LoginScreen","navigation","useNavigation","handleLogin","setSubmitting","setError","resetForm","body","loginUser","access_token","navigate","container","Formik","initialValues","validationSchema","onSubmit","setErrors","msg","handleChange","handleBlur","handleSubmit","errors","touched","isSubmitting","TextInput","input","placeholder","onChangeText","onBlur","keyboardType","autoCapitalize","secureTextEntry","Button","onPress","backdrop","buttonText","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","textAlign","borderColor","borderWidth","currentPassword","newPassword","minHeight","letterSpacing","subheader","opacity","avatarContainer","marginVertical","cardheader","paddingRight","cardTitle","cardSubtitle","editButton","form","buttonGroup","saveButton","cancelButton","logoutButton","Profile","editable","setEditable","setNombre","apellido","setApellido","setPassword","confirmPassword","setConfirmPassword","handleEdit","handleCancel","onSurfaceVariant","surface","Title","subtitle","subtitleStyle","outlineVariant","Alert","alert","enableReinitialize","surfaceDisabled","Icon","textContentType","outline","labelStyle","onPrimary","contentStyle","getInitials","trim","profile","margin","role","AvatarCard","isalarcoins","lightTheme","MD3LightTheme","text","secondary","accent","asistenciaBuena","asistenciaMedia","asistenciaMala","darkTheme","MD3DarkTheme","ThemeContext","isDarkMode","toggleTheme","theme","ThemeProvider","systemColorScheme","useColorScheme","useSystemTheme","setUseSystemTheme","setIsDarkMode","stored","loadTheme","listener","Appearance","addChangeListener","colorScheme","remove","newValue","useThemeContext","CustomDrawerContent","drawerItems","screen","DrawerContentScrollView","Drawer","nav","index","DrawerItem","bottom","themeItem","Switch","onValueChange","Feather","dispatch","CommonActions","routes","switchRow","SelectMateria","historial","onSeleccionar","visible","setVisible","selected","setSelected","closeMenu","handleSelect","Menu","onDismiss","anchor","openMenu","buttonContent","button","labelWithIcon","onSurface","iconLeft","labelTextWrapper","iconRight","innerLabel","disabled","Item","leadingIcon","aula_id","HelperText","type","AlarcoinModal","selectedAula","tab","setTab","setCantidad","concepto","setConcepto","tipo","setTipo","materiaSeleccionada","setMateriaSeleccionada","visibleSnack","setVisibleSnack","mensaje","setMensaje","historialPorAula","useMemo","find","a","filter","Portal","Snackbar","duration","action","Modal","SegmentedButtons","buttons","prev","String","Math","max","Number","RadioButton","Group","alumno_id","detalle","crearAlarcoin","every","totalAlarcoins","entry","LoadError","hasError","reLoad","errorMessage","Image","source","require","resizeMode","MateriasCard","materia","porcentaje","is_alumno","getColorFromPorcentaje","infoLeft","scheduleRow","infoRight","classCount","marginHorizontal","ResponsiveGrid","items","renderItem","getKey","numColumns","refreshing","onRefresh","ListEmptyComponent","ListFooterComponent","computedColumns","FlatList","keyExtractor","toString","paddingBottom","columnWrapperStyle","Alarcoin","selectedAlumno","setSelectedAlumno","setSelectedAula","coin","setCoin","fetchData","Array","isArray","handleOpenModal","dataList","Pressable","pressed","handleCloseModal","ChangePassword","navigator","apiError","setApiError","validToken","setValidToken","tokenToStorage","matches","oneOf","updatedUser","updateUser","cambiarContrasena","message","Materias","numColums","asistencias","setAsistencias","getAsistencias","getAsistenciasPorClase","saveAsistencias","getAsistenciasStorage","fetchAsistencias","asistenciaAula","porcentaje_asistencia","asistenciaAulaClases","asistenciasA","handlerNavigation","asistencia","params","scheduleText","ModalAsistencia","onClose","clase","asistenciasEditadas","setAsistenciasEditadas","isMobile","columns","Boolean","clase_id","AsistenciasClase","todosPresentes","presente","modalContainer","headerTitle","tema","scroll","grid","asistenciaExistente","asistenciaEditada","valuePresente","valueJustificado","justificado","cardWrapper","alumnoCard","nombreAlumno","parseInt","radioRowFixed","radioItemPressable","status","radioLabelMobile","radioLabel","radioLabelText","handleJustificacionChange","buttonRow","payload","editada","setClaseAsistencia","maxHeight","radioRow","radioItemFixed","flexShrink","ClaseCard","modalVisible","setModalVisible","getColorFromAsistencia","headerRow","iconButtons","iconMargin","attendanceButton","modalBackdrop","modalCloseButton","modalCloseText","DetallesMaterias","route","useRoute","clases","setClases","getClases","forzarBackend","aulaId","clasesMateria","clasesFiltradas","test","isSmallDevice","handleAddClass","sectionHeader","handleGoBack","goBack","compact","backButton","backButtonText","display","subjectTitle","numberOfLines","ellipsizeMode","addButton","addButtonContent","showsVerticalScrollIndicator","getRows","rows","i","push","slice","row","rowIndex","asistenciaDeEstaClase","from","_","paddingLeft","subjectSchedule","Stack","createNativeStackNavigator","MateriasStack","Navigator","screenOptions","headerShown","Screen","component","options","DetalleMateria","createDrawerNavigator","DrawerNavigator","memoizedUser","drawerContent","headerStyle","level2","headerTintColor","headerTitleStyle","headerRight","StackNavigation","navigationTheme","dark","NavigationDarkTheme","NavigationDefaultTheme","NavigationContainer","Router","SplashScreen","onFinish","Animated","Value","timing","toValue","useNativeDriver","setTimeout","AppWithTheme","PaperProvider","registerRootComponent","fontsLoaded","useFonts","font","showSplash","setShowSplash","onLayoutRootView","useCallback","Splash","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}