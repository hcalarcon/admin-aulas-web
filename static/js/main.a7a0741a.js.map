{"version":3,"file":"static/js/main.a7a0741a.js","mappings":"+GAYO,MAAMA,EAAWC,UACtB,UACQC,EAAAA,QAAaC,QAAQ,OAAQC,KAAKC,UAAUC,GACpD,CAAE,MAAOC,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,GAgBWE,EAAgBR,MAAOS,EAAaC,KAC/C,UACQT,EAAAA,QAAaC,QAAQO,EAAKC,EAClC,CAAE,MAAOJ,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,GAGWK,EAAiBX,UAC5B,IACE,aAAaC,EAAAA,QAAaW,QAAQH,EACpC,CAAE,MAAOH,GAEP,OADAC,QAAQD,MAAM,+BAAgCA,GACvC,IACT,GAWWO,EAAWb,UACtB,UACQC,EAAAA,QAAaC,QAAQ,QAASC,KAAKC,UAAUU,GACrD,CAAE,MAAOR,GACPC,QAAQQ,IAAI,4BAA6BT,EAC3C,GAGWU,EAAiBhB,UAC5B,IACE,MAAMiB,QAAahB,EAAAA,QAAaW,QAAQ,SACxC,OAAY,MAARK,EAAqBd,KAAKe,MAAMD,GAC7B,IACT,CAAE,MAAOX,GAEP,OADAC,QAAQQ,IAAI,eAAgBT,GACrB,IACT,GAkCWa,EAAkBnB,UAC7B,UACQC,EAAAA,QAAaC,QAAQ,cAAeC,KAAKC,UAAUgB,GAC3D,CAAE,MAAOd,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,GAGWe,EAAwBrB,UAGnC,IACE,MAAMoB,QAAanB,EAAAA,QAAaW,QAAQ,eACxC,OAAOQ,EAAOjB,KAAKe,MAAME,GAAQ,IACnC,CAAE,MAAOd,GAEP,OADAC,QAAQD,MAAM,6BAA8BA,GACrC,IACT,GAGWgB,EAAatB,MACxBuB,EACAH,KAEA,UACQnB,EAAAA,QAAaC,QAAS,UAASqB,IAAapB,KAAKC,UAAUgB,GACnE,CAAE,MAAOd,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,GAGWkB,EAAmBxB,UAG9B,IACE,MAAMoB,QAAanB,EAAAA,QAAaW,QAAS,UAASW,KAClD,OAAOH,EAAOjB,KAAKe,MAAME,GAAQ,IACnC,CAAE,MAAOd,GAEP,OADAC,QAAQD,MAAM,wBAAyBA,GAChC,IACT,GAqBWmB,EAA2BzB,UAGtC,IACE,MAAM0B,EAAOvB,KAAKC,UAAUgB,SACtBZ,EAAc,oBAAqBkB,EAC3C,CAAE,MAAOpB,GACPC,QAAQD,MAAM,wCAAyCA,EACzD,GAgBWqB,EAA4B3B,UAGvC,IACE,MAAM0B,EAAOvB,KAAKC,UAAUgB,SACtBZ,EAAc,qBAAsBkB,EAC5C,CAAE,MAAOpB,GACPC,QAAQD,MAAM,wCAAyCA,EACzD,GAeWsB,EAAa5B,UACxB,UACQC,EAAAA,QAAaC,QAAQ,SAAUC,KAAKC,UAAUyB,GACtD,CAAE,MAAOvB,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,G,cCzMF,MAAMwB,GAAcC,EAAAA,EAAAA,eAA+B,CACjD1B,KAAM,KACN2B,QAASA,OACTC,MAAO,KACPC,SAAUA,OACVC,OAAQA,OACRC,SAAS,IAGEC,EAAeA,EAAGC,eAC7B,MAAOjC,EAAM2B,IAAWO,EAAAA,EAAAA,UAAsB,OACvCH,EAASI,IAAcD,EAAAA,EAAAA,WAAS,IAChCN,EAAOC,IAAYK,EAAAA,EAAAA,UAAwB,OAWlDE,EAAAA,EAAAA,YAAU,KACSzC,WACf,MAAM0C,ODzBW1C,WACrB,IACE,MAAMK,QAAaJ,EAAAA,QAAaW,QAAQ,QACxC,OAAa,OAATP,EACKF,KAAKe,MAAMb,GAEb,IACT,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAM,+BAAgCA,GACvC,IACT,GCewBqC,GACdV,QAActB,EAAe,SAC/B+B,GAAOV,EAAQU,GACfT,GAAOC,EAASD,GACpBO,GAAW,EAAM,EAEnBI,EAAU,GACT,IAaH,OACEC,EAAAA,EAAAA,KAACf,EAAYgB,SAAQ,CACnBpC,MAAO,CACLL,OACA2B,QAnCoBhC,UACxBgC,EAAQe,GACJA,QACIhD,EAASgD,QDaY/C,WAC/B,UACQC,EAAAA,QAAa+C,WAAWvC,EAChC,CAAE,MAAOH,GACPC,QAAQD,MAAM,+BAAgCA,EAChD,GChBU2C,CAAkB,OAC1B,EA8BIb,UACAH,QACAC,WACAC,OAnBSnC,UACb,UACQC,EAAAA,QAAaiD,OACrB,CAAE,MAAO5C,GACPC,QAAQQ,IAAI,wBAAyBT,EACvC,CAEA0B,EAAQ,MACRE,EAAS,KAAK,GAYVI,SAEDA,GACoB,EAIda,EAAUA,KAAMC,EAAAA,EAAAA,YAAWtB,G,6FChEjC,MAAMuB,EAASA,EAAGf,eACvB,MAAM,OAAEgB,IAAWC,EAAAA,EAAAA,YACnB,OACEV,EAAAA,EAAAA,KAACW,EAAAA,eAAc,CACbF,OAAQ,CAACA,EAAOG,QAASH,EAAOI,YAChCC,MAAO,CAAEC,EAAG,GAAKC,EAAG,GACpBC,IAAK,CAAEF,EAAG,GAAKC,EAAG,GAClBE,MAAOC,EAAOC,SAAS3B,UAEvBO,EAAAA,EAAAA,KAACqB,EAAAA,QAAY,CAACH,MAAOC,EAAOG,SAAS7B,UACnCO,EAAAA,EAAAA,KAACuB,EAAAA,QAAoB,CACnBL,MAAOC,EAAOK,KACdC,SAA8C,SAC9CC,uBAC8BC,EAAAA,QAAUC,eAAiB,EACxDnC,UAEDO,EAAAA,EAAAA,KAAC6B,EAAAA,QAAU,CACTC,sBAAuBX,EAAOY,gBAC9BC,0BAA0B,UAASvC,UAEnCO,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAOC,EAAOe,eAAezC,SAAEA,WAI5B,EAIf0B,EAASgB,EAAAA,QAAWC,OAAO,CAC/BhB,SAAU,CACRI,KAAM,GAERF,SAAU,CACRE,KAAM,EACNa,WAAkE,GAEpEb,KAAM,CACJA,KAAM,GAERO,gBAAiB,CACfO,SAAU,GAEZJ,eAAgB,CACdV,KAAM,EACNe,QAAS,MC9DAC,EAAU,kCCGVC,EAAYtF,MACvBuF,EACAC,EAAuB,CAAC,KAExB,IAAIvD,QAActB,EAAe,SACjC,MAAM8E,EAAUD,EAAQC,SAAW,CAAC,EAE9BC,EAAa,IAAIC,QAAQF,GAC/BC,EAAWE,IAAI,gBAAkB,UAAS3D,KAE1C,IAAI4D,QAAiBC,MAAMP,EAAKQ,OAAAC,OAAA,GAC3BR,EAAQ,CACXC,QAASC,KAGX,GAAwB,MAApBG,EAASI,OAAgB,CAC3B,MAAMC,QAAsBvF,EAAe,iBAE3C,IAAKuF,EAAe,MAAM,IAAIC,MAAM,wBACpC,MAAMC,QAAmBN,MAAO,GAAET,kBAAyB,CACzDgB,OAAQ,OACRZ,QAAS,CACP,eAAgB,oBAElBa,KAAMnG,KAAKC,UAAU,CAAE8F,oBAGzB,IAAKE,EAAWG,GACd,MAAM,IAAIJ,MAAM,iCAGlB,MAAM/E,QAAagF,EAAW1E,OAC9BlB,EAAc,eAAgBY,EAAKoF,cAGnC,MAAMC,EAAe,IAAId,QAAQF,GACjCgB,EAAab,IAAI,gBAAkB,UAASxE,EAAKoF,gBAEjDX,QAAiBC,MAAMP,EAAKQ,OAAAC,OAAA,GACvBR,EAAQ,CACXC,QAASgB,IAEb,CAEA,OAAOZ,CAAQ,ECLV7F,eAAe0G,IAGpB,MAAMb,QAAiBP,EAAW,GAAED,wBAA+B,CAAC,GAEpE,IAAKQ,EAASU,GAAI,CAChB,MAAMI,QAAkBd,EAASnE,OACjC,MAAM,IAAIyE,MAAMQ,EAAUC,QAAU,6BACtC,CAEA,aAAaf,EAASnE,MACxB,CAmBO1B,eAAe6G,IAGpB,MAAMhB,QAAiBP,EAAW,GAAED,wBAA+B,CAAC,GAEpE,IAAKQ,EAASU,GAAI,CAChB,MAAMI,QAAkBd,EAASnE,OACjC,MAAM,IAAIyE,MAAMQ,EAAUC,QAAU,6BACtC,CAEA,aAAaf,EAASnE,MACxB,CCnFO,SAASoF,EAAiBC,GAC/B,MACMC,EAAQD,EAAQC,MADR,+BAEd,IAAKA,EAAO,OAAO,KAEnB,MAAO,CAAEC,EAAIC,EAAIC,GAAQH,EACnBI,EAAMC,SAASJ,EAAI,IACnBK,EAAQD,SAASH,EAAI,IAC3B,OAAIE,EAAM,GAAKA,EAAM,IAAME,EAAQ,GAAKA,EAAQ,GAAW,KAEnD,GAAEH,KAAQD,KAAMD,GAC1B,CAEO,SAASM,EAAiBC,GAC/B,IAAKA,GAA8B,kBAAZA,EAAsB,OAAO,KAEpD,MACMR,EAAQQ,EAAQR,MADR,6BAEd,IAAKA,EAAO,OAAO,KAEnB,MAAO,CAAEG,EAAMD,EAAID,GAAMD,EAEnBI,EAAMC,SAASJ,EAAI,IACnBK,EAAQD,SAASH,EAAI,IAC3B,OAAIE,EAAM,GAAKA,EAAM,IAAME,EAAQ,GAAKA,EAAQ,GAAW,KAEnD,GAAEL,KAAMC,KAAMC,GACxB,CCvBO,MAAMM,EAAqBzH,MAChC0H,EACAC,KAEA,MAAMC,QAAYtC,EAAW,GAAED,yBAAgC,CAC7DgB,OAAQ,OACRZ,QAAS,CACP,eAAgB,oBAElBa,KAAMnG,KAAKC,UAAU,CACnBsH,WACAG,QAASF,MAIb,IAAKC,EAAIrB,GAAI,MAAM,IAAIJ,MAAM,oCAC7B,aAAayB,EAAIlG,MAAM,EAGZoG,EAAW9H,UACtB,IACE,MAAM6F,QAAiBP,EAAW,GAAED,iBAAuBqC,IAAY,CACrErB,OAAQ,QAGV,aAAaR,EAASnE,MACxB,CAAE,MAAOpB,GACPC,QAAQQ,IAAI,yBACd,GCkCF,MAAMgH,GAAiBhG,EAAAA,EAAAA,oBAA8CiG,GAExDC,EAAkBA,EAC7B3F,eAIA,MAAM,MAAEL,EAAK,KAAE5B,GAAS8C,KACjBrC,EAAOoH,IAAY3F,EAAAA,EAAAA,UAA+B,KAClD4F,EAAYC,IAAiB7F,EAAAA,EAAAA,UAAqC,CAAC,IACnE8F,EAAWC,IAAgB/F,EAAAA,EAAAA,WAAS,IACpCgG,EAAkBC,IAAuBjG,EAAAA,EAAAA,UAK9C,OACKkG,EAAgBC,IAAqBnG,EAAAA,EAAAA,WAAS,IAC9CoG,EAAUC,IAAerG,EAAAA,EAAAA,WAAuC,IAChEV,EAAQgH,IAAatG,EAAAA,EAAAA,UAAsB,KAC3CuG,EAAaC,IAAkBxG,EAAAA,EAAAA,WAAkB,IACjDyG,EAAeC,IAAoB1G,EAAAA,EAAAA,WAAkB,IACrD2G,EAAOC,IAAY5G,EAAAA,EAAAA,UAAqB,KACxC6G,EAAYC,IAAiB9G,EAAAA,EAAAA,WAAkB,IAC/C+G,EAAcC,IAAmBhH,EAAAA,EAAAA,WAAkB,GAUpDiH,EAAuBxJ,UAIzByJ,KAEA,MAAMC,EAAoC3D,OAAAC,OAAA,GAAQmC,GAElDpC,OAAO4D,KAAKD,GAAUE,SAASC,IAC7BH,GAAUG,GAAG9D,OAAAC,OAAA,GACR0D,GAAUG,GAAI,CACjBC,SAAU,GACX,IAGHL,EAAcG,SAAS3I,IACrBA,EAAK4G,QAAQ+B,SAASG,IACpB,MAAMC,EAxBqBrB,IAC1BA,EAASsB,QAAO,CAACC,EAAKC,IACpBD,GAAOC,EAAKC,KAAOD,EAAKH,UAAYG,EAAKH,WAC/C,GAqBoBK,CAA0BN,GAAQO,WAC/CZ,EAASK,EAAOF,MAClBH,EAASK,EAAOF,IAAIC,UACjBJ,EAASK,EAAOF,IAAIC,UAAY,GAAKE,EAC1C,GACA,IAGJ5B,EAAcsB,EAAS,EAEzBa,CAA4BnJ,GAC5BoH,EAAoBpH,SACdK,EAAyBL,EAAK,EAEhCoJ,EAAwBxK,UAG5BwI,EAAoBpH,SACdO,EAA0BP,EAAK,EAIjCqJ,EAAezK,UACnB,IACE,MAAM0K,ORUwB1K,WAClC,IACE,MAAMoB,QAAanB,EAAAA,QAAaW,QAAQ,YACxC,OAAOQ,EAAOjB,KAAKe,MAAME,GAAQ,IACnC,CAAE,MAAOd,GAEP,OADAC,QAAQD,MAAM,0BAA2BA,GAClC,IACT,GQjB6BqK,GACzB,GAAID,EAEF,OADA9B,EAAY8B,IACL,EAET,MAAMtJ,QHvILpB,iBACL,UACsBW,EAAe,SAAnC,MACMkF,QAAiBP,EAAW,GAAED,iBAAwB,CAAC,GAE7D,aAAaQ,EAASnE,MACxB,CAAE,MAAOpB,GAEP,YADAC,QAAQD,MAAM,yBAA0BA,EAE1C,CACF,CG6HyBsK,GACnB,GAAIxJ,GAAMyJ,KACR,OAAO,ORaa7K,WAC1B,UACQC,EAAAA,QAAaC,QAAQ,WAAYC,KAAKC,UAAUuI,GACxD,CAAE,MAAOrI,GACPC,QAAQD,MAAM,4BAA6BA,EAC7C,GQhBUwK,CAAa1J,GACnBwH,EAAYxH,EACd,CAAE,MAAOd,GACP,OAAgC,MAA5BA,GAAOuF,UAAUI,QACnB2C,GAAY,IACL,IAETrI,QAAQD,MAAM,8BAA+BA,IACtC,EACT,GAqHIyK,EAAiB/K,UACrB,IACE,MAAMgL,QAAoBhK,IAC1B,GAAIgK,EAGF,OAFA9C,EAAS8C,QACT1C,GAAa,GAIf,MACM2C,SC7QLjL,iBACL,MAAM6F,QAAiBP,EAAW,GAAED,oBAA2B,CAC7DgB,OAAQ,QAGV,IAAKR,EAASU,GAAI,CAChB,MAAMI,QAAkBd,EAASnE,OACjC,MAAM,IAAIyE,MAAMQ,EAAUC,QAAU,6BACtC,CAEA,aAAaf,EAASnE,MACxB,CDiQ8CwJ,IACNC,KAAKlK,GAAI8E,OAAAC,OAAA,GACtC/E,EAAK,CACR4G,QAAS,CAACxH,GACVsH,UAAW,CAACtH,EAAKwJ,QAGnB3B,EAAS+C,SACHpK,EAASoK,EACjB,CAAE,MAAO3K,GAAQ,GAGb8K,EAAgBpL,UACpB,IACE,MAAMgL,QAAoBhK,IACpBqK,ORtNqBrL,WAI/B,IACE,MAAMoB,QAAanB,EAAAA,QAAaW,QAAQ,WACxC,IAAKQ,EAAM,OAAO,KAElB,MAAMkK,EAA8BnL,KAAKe,MAAME,GACzC+G,EAA0C,CAAC,EAMjD,OAJAmD,EAAa1B,SAASG,IACpB5B,EAAW4B,EAAOF,IAAME,CAAM,IAGzB5B,CACT,CAAE,MAAO7H,GAEP,OADAC,QAAQD,MAAM,uCAAwCA,GAC/C,IACT,GQmMoCiL,GAEhC,GAAIP,GAAeK,EAIjB,OAHAnD,EAAS8C,GACT5C,EAAciD,QACd/C,GAAa,GAIf,MAAMkD,QCjTLxL,iBACL,MAAM6F,QAAiBP,EAAW,GAAED,gCAAuC,CACzEgB,OAAQ,QAGV,IAAKR,EAASU,GAAI,CAChB,MAAMI,QAAkBd,EAASnE,OACjC,MAAM,IAAIyE,MAAMQ,EAAUC,QAAU,6BACtC,CAEA,aAAaf,EAASnE,MACxB,CDsSqD+J,GACzCC,EAA6C,CAAC,EAC9CC,EAAkBH,EAAUL,KAAKlK,IACrCA,EAAK4G,QAAQ+B,SAASG,IACpB2B,EAAe3B,EAAOF,IAAME,CAAM,IAE7B,CACLF,GAAI5I,EAAK4I,GACT+B,OAAQ3K,EAAK2K,OACbC,IAAK5K,EAAK4K,IACVC,SAAU7K,EAAK6K,SACfC,aAAc9K,EAAK8K,aACnBC,YAAa/K,EAAK+K,YAClBC,gBAAiBhL,EAAKgL,gBACtBC,KAAMjL,EAAKiL,KACXvE,UAAW1G,EAAK4G,QAAQsD,KAAKpB,GAAWA,EAAOF,SAGnD3B,EAASyD,GACTvD,EAAcsD,SACR7K,EAAS8K,QR5PM3L,WACzB,IACE,MAAM0B,EAAOvB,KAAKC,UAAUyH,SACtB5H,EAAAA,QAAaC,QAAQ,UAAWwB,EACxC,CAAE,MAAOpB,GACPC,QAAQD,MAAM,4BAA6BA,EAC7C,GQwPU6L,CAAYpG,OAAOqG,OAAOV,GAClC,CAAE,MAAOpL,GACPC,QAAQD,MAAM,sCAAuCA,EACvD,CAAC,QACCgI,GAAa,EACf,GAGI+D,EAAWrM,WACQsM,GAAcrK,KAGjC5B,GAAMkM,iBACFnB,UAEAL,IACR,EAOF,OAJAtI,EAAAA,EAAAA,YAAU,KACR4J,GAAU,GACT,CAACpK,KAGFY,EAAAA,EAAAA,KAACkF,EAAejF,SAAQ,CACtBpC,MAAO,CACLI,QACAqH,aACAE,YACAgE,WACA9D,mBACAiE,cArIgBxM,MAAOyM,GAAwB,KACnD/D,GAAkB,GAElB,IACE,GAAIrI,GAAMkM,WAAY,CAEpB,UAD0B9B,IAExB,OAAO,EAET,GAAIgC,EAAc,CAChB,MAAMrL,QAAasF,IACnB8C,EAAqBpI,SACfK,EAAyBL,EACjC,KAAO,CACL,MAAMsL,OR/DuB1M,WAGrC,IACE,MAAM0B,QAAaf,EAAe,qBAClC,OAAOe,EAAOvB,KAAKe,MAAMQ,GAAQ,IACnC,CAAE,MAAOpB,GAEP,OADAC,QAAQD,MAAM,iCAAkCA,GACzC,IACT,GQsD4BqM,GACpB,GAAID,EACFlD,EAAqBkD,OAChB,CACL,MAAMtL,QAAasF,IACnB8C,EAAqBpI,SACfK,EAAyBL,EACjC,CACF,CACF,MACE,GAAIqL,EAAc,CAChB,MAAMrL,QAAayF,IACnB2D,EAAsBpJ,SAChBO,EAA0BP,EAClC,KAAO,CACL,MAAMsL,ORtDwB1M,WAGtC,IACE,MAAM0B,QAAaf,EAAe,sBAClC,OAAOe,EAAOvB,KAAKe,MAAMQ,GAAQ,IACnC,CAAE,MAAOpB,GAEP,OADAC,QAAQD,MAAM,qCAAsCA,GAC7C,IACT,GQ6C4BsM,GACpB,GAAIF,EACFlC,EAAsBkC,OACjB,CACL,MAAMtL,QAAayF,IACnB2D,EAAsBpJ,SAChBO,EAA0BP,EAClC,CACF,CAEJ,CAAE,MAAOyL,GACPtM,QAAQD,MAAM,4BAA6BuM,GAC3CnE,GAAkB,EACpB,CAAC,QACCJ,GAAa,EACf,GA0FIG,iBACAE,WACA9G,SACAiL,WA3Ma9M,MAAOyM,GAAwB,KAChD,IAEE,GADAxD,GAAiB,IACZwD,EAAc,CACjB,MAAMC,ORyDkB1M,WAC9B,IACE,MAAM+M,QAAkB9M,EAAAA,QAAaW,QAAQ,UAC7C,OAAOmM,EAAY5M,KAAKe,MAAM6L,GAAa,IAC7C,CAAE,MAAOzM,GAEP,OADAC,QAAQD,MAAM,wBAAyBA,GAChC,IACT,GQhE0B0M,GACpB,GAAIN,EAGF,OAFA7D,EAAU6D,QACVzD,GAAiB,EAGrB,CAEA,MAAM7H,QE9JLpB,iBACL,MAAM6F,QAAiBP,EAAW,GAAED,cAAqB,CAAC,GAE1D,IAAKQ,EAASU,GAAI,CAChB,MAAMI,QAAkBd,EAASnE,OACjC,MAAM,IAAIyE,MAAMQ,EAAUC,QAAU,sCACtC,CASA,aAPmBf,EAASnE,QAEUyJ,KAAK8B,GAAYlH,OAAAC,OAAA,GAClDiH,EAAE,CACLC,aAAcD,EAAEC,aAAe3F,EAAiB0F,EAAEC,cAAgB,QAItE,CF8IyBC,GACnBtE,EAAUzH,SACJQ,EAAWR,GACjB2H,GAAe,EACjB,CAAE,MAAOzI,GACPyI,GAAe,GACfxI,QAAQD,MAAM,yBAA0BA,EAC1C,CAAC,QACC2I,GAAiB,EACnB,GAuLIH,cACAE,gBACAE,QACAkE,UArKYpN,MAAOyM,GAAwB,KAC/C,IAGE,GAFAlD,GAAgB,IAEXkD,EAAc,CACjB,MAAMC,ORwBuB1M,WACnC,IACE,MAAM0B,QAAazB,EAAAA,QAAaW,QAAQ,eACxC,OAAOc,EAAOvB,KAAKe,MAAMQ,GAAQ,IACnC,CAAE,MAAOpB,GAEP,OADAC,QAAQD,MAAM,uBAAwBA,GAC/B,IACT,GQ/B0B+M,GACpB,GAAIX,EAGF,OAFAvD,EAASuD,QACTnD,GAAgB,EAGpB,CAEA,MAAMnI,ODvLcpB,WACxB,IACE,MAAM6F,QAAiBP,EAAW,GAAED,aAAoB,CACtDgB,OAAQ,QAGV,aAAaR,EAASnE,MACxB,CAAE,MAAOpB,GACPC,QAAQQ,IAAI,yBACd,GC8KuBuM,GACnBnE,EAAS/H,QRyBgBpB,WAC7B,UACQC,EAAAA,QAAaC,QAAQ,cAAeC,KAAKC,UAAUgB,GAC3D,CAAE,MAAOd,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,GQ7BUiN,CAAgBnM,EACxB,CAAE,MAAOd,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,CAAC,QACCiJ,GAAgB,EAClB,GAkJID,eACAF,cACA9G,SAEDA,GACuB,EAIjBkL,EAAaA,KACxB,MAAMC,GAAUrK,EAAAA,EAAAA,YAAW2E,GAC3B,IAAK0F,EACH,MAAM,IAAItH,MAAM,oDAClB,OAAOsH,CAAO,EGhYHC,EAAiBA,KAC5B,MAAMC,EAAM,IAAIC,KACVC,EAAOF,EAAIG,WAEjB,IAAIC,EAGFA,EADEF,GAAQ,GAAKA,EAAO,GACb,iBACAA,GAAQ,IAAMA,EAAO,GACrB,gBAEA,gBAYX,MAAO,CACLE,SACAC,MAJYL,EAAIM,mBAAmB,QANa,CAChD7G,IAAK,UACLE,MAAO,OACP4G,KAAM,YAQP,E,2CCdY,SAASC,GAAU,UAChC9F,EAAS,SACT+F,EAAQ,OACRC,EAAM,SACN/L,EAAQ,aACRgM,EAAe,4CAEf,OAAIjG,GAEAxF,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAM,EAAGkK,eAAgB,SAAUC,WAAY,UAAWlM,UACvEO,EAAAA,EAAAA,KAAC4L,EAAAA,QAAiB,CAACC,KAAK,QAAQC,MAAM,aAKxCP,GAEAQ,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAM,EAAGkK,eAAgB,SAAUC,WAAY,UAAWlM,SAAA,EACvEO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACHC,QAAQ,aACR/K,MAAO,CAAEgL,aAAc,GAAIJ,MAAO,UAAWK,UAAW,UAAW1M,SAElEgM,KAEHzL,EAAAA,EAAAA,KAACoM,EAAAA,QAAK,CACJC,OAAQC,EAAQ,MAChBpL,MAAO,CACLqL,MAAO,IACPC,OAAQ,IACRN,aAAc,GACdO,aAAc,KAEhBC,WAAW,aAEb1M,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CAACC,KAAK,YAAYC,QAASrB,EAAO/L,SAAC,mBAOzCO,EAAAA,EAAAA,KAAA8M,EAAAA,SAAA,CAAArN,SAAGA,GACZ,CCnDA,MAQA,EARqBsN,KAEjB/M,EAAAA,EAAAA,KAACsL,EAAS,CAAA7L,UACRO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAAvM,SAAC,iB,qCCNL,MAAMuN,GAAe,UCab,SAASC,IAAgB,MACtCC,EAAK,MACLrP,EAAK,KACLsP,EAAI,QACJC,EAAU,YAEV,OACEpN,EAAAA,EAAAA,KAACqN,GAAAA,QAAI,CAACnM,MAAO,CAACC,GAAOmM,MAAM7N,UACzBO,EAAAA,EAAAA,KAACqN,GAAAA,QAAKE,QAAO,CAAA9N,UACXsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOqM,YAAY/N,SAAA,EAC9BsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAAAxC,SAAA,EACHO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAOC,GAAOsM,UAAUhO,SAAEyN,KAChClN,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAOC,GAAOuM,UAAUjO,SAAE5B,QAElCmC,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAMT,EAAMtB,KAAM,GAAIC,MAAOkB,WAKjD,CAEA,MAAM7L,GAASgB,EAAAA,QAAWC,OAAO,CAC/BkL,KAAM,CACJ9L,KAAM,EACNiL,aAAc,GACdP,aAAc,GACd2B,gBAAiB,EACjBC,kBAAmB,EACnBC,SAAU,IACVC,SAAU,KAEZR,YAAa,CACXS,cAAe,MACfvC,eAAgB,gBAChBC,WAAY,UAEd8B,UAAW,CACTS,SAAU,GACVpC,MAAO,QAET4B,UAAW,CACTQ,SAAU,GACVC,WAAY,OACZC,UAAW,KClCRjR,eAAekR,KAGpB,MAAMrL,QAAiBP,EAAW,GAAED,gCAAuC,CACzEgB,OAAQ,QAGV,IAAKR,EAASU,GAAI,CAChB,MAAMI,QAAkBd,EAASnE,OACjC,MAAM,IAAIyE,MAAMQ,EAAUC,QAAU,+BACtC,CAEA,aAAaf,EAASnE,MACxB,CCrBA,MAiJA,GAjJoByP,KAClB,MAAM,KAAE9Q,EAAI,MAAE4B,GAAUkB,KAClB,cACJqJ,EAAa,UACbY,EAAS,WACTN,EAAU,OACVjL,EAAM,MACNqH,EAAK,SACLP,EAAQ,iBACRJ,EAAgB,MAChBzH,GACE0M,KACE,OAAEO,EAAM,MAAEC,GAAUN,KACpB,MAAE0B,IAAUgC,EAAAA,EAAAA,YAEX/I,EAAWC,IAAgB/F,EAAAA,EAAAA,WAAkB,IAC7CjC,EAAO+Q,IAAY9O,EAAAA,EAAAA,WAAkB,IACrC+O,EAAYC,IAAkBhP,EAAAA,EAAAA,UAAiC,KAC/DiP,EAAUC,IAAelP,EAAAA,EAAAA,aACzBmP,EAAoBC,IAAyBpP,EAAAA,EAAAA,YAuB9C8J,EAAWrM,MAAO4R,GAAU,KAChCtJ,GAAa,GACb,IAKE,GAJAkE,EAAcoF,GACdxE,EAAUwE,GACV9E,EAAW8E,IAENA,EAAS,CACZ,MAAMlF,QAAcrL,IACpB,GAAIqL,EAGF,OAFA6E,EAAe7E,QACfiF,EAAsBE,EAA2BnF,GAGrD,MAnCmB1M,WACrB,IACE,MAAMoB,QAAa8P,KACnBK,EAAenQ,SACTD,EAAgBC,GACtBuQ,EAAsBE,EAA2BzQ,GACnD,CAAE,MAAOd,GACPC,QAAQD,MAAM,+BAAgCA,EAChD,GA4BQwR,EACR,CAAE,MAAOxR,GACP+Q,GAAS,GACT9Q,QAAQQ,IAAI,wBAAyBT,EACvC,CAAC,QACCgI,GAAa,EACf,GAGIuJ,EACJE,IAGA,MAAMC,EAAkBD,EAAsBE,QAC3CC,GAAMA,EAAEC,uBAAyB,KAGpC,GAA+B,IAA3BH,EAAgBI,OAAc,OAAO,EAEzC,MAKMZ,EALkBQ,EAAgB/H,QACtC,CAACC,EAAKgI,IAAMhI,EAAMgI,EAAEC,uBACpB,GAGiCH,EAAgBI,OACnD,OAAOC,KAAKC,MAAiB,IAAXd,GAAkB,GAAG,EAGnCe,EAAahK,GAAkB0B,QACnC,CAACC,EAAKC,IAASD,EAAMC,EAAKG,UAAU8H,QACpC,GAEII,EAAsB1R,EAAMmJ,QAAO,CAACwI,EAAOxR,IACxCwR,GAASxR,EAAKgL,iBAAmB,IACvC,GAWH,OATAxJ,EAAAA,EAAAA,YAAU,KACR4J,GAAU,GACT,KAEH5J,EAAAA,EAAAA,YAAU,KACR,IAAKyG,GAA0B,IAAjBA,EAAMkJ,OAAc,OAClC,MAAMZ,EAnEuBkB,KAC7B,MAAMC,EAAgB5M,OAAOqG,OAAOsG,GAAUE,OACxCxI,EAAOuI,EAAc1I,QAAO,CAACC,EAAK2I,IAAS3I,EAAM2I,EAAKA,MAAM,GAC5D7I,EAAW2I,EAAcP,OAE/B,GAAiB,IAAbpI,EAAgB,OAAO,EAC3B,MAAM8I,EAAO1I,EAAOJ,EACpB,OAAO+I,OAAOC,WAAWF,EAAKG,QAAQ,GAAG,EA4DxBC,CAAsBhK,GACvCuI,EAAYD,EAAS,GACpB,CAACtI,KAEF0F,EAAAA,EAAAA,MAACT,EAAS,CAACC,SAAU9N,EAAO+H,UAAWA,EAAWgG,OAAQhC,EAAS/J,SAAA,EACjEsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAACC,GAAOmP,QAAQ7Q,SAAA,EAC3BsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAAAxC,SAAA,EACHO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAaxM,SAAG,GAAEyL,MAAW1N,GAAMuL,YAEjD/I,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAaxM,SAAC,eAE9BO,EAAAA,EAAAA,KAACuQ,GAAAA,QAAU,CACTpD,KAAMA,EAAGtB,OAAMC,YACb9L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,UAAU/B,KAAMA,EAAMC,MAAOA,IAE9Cc,KAAK,YACLC,QAASA,IAAMrD,GAAS,GACxBtI,MAAO,CAAEqB,QAAS,EAAGiO,OAAQ,SAGjCzE,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOsP,iBAAiBhR,SAAA,EACnCO,EAAAA,EAAAA,KAACiN,GAAe,CACdC,MAAM,YACNC,KAAK,eACLtP,MAAO6R,KAET1P,EAAAA,EAAAA,KAACiN,GAAe,CACdC,MAAM,SACNC,KAAK,iBACLtP,MAAO8R,KAET3P,EAAAA,EAAAA,KAACiN,GAAe,CACdC,MAAM,cACNC,KAAK,mBACLtP,MAAOgR,KAET7O,EAAAA,EAAAA,KAACiN,GAAe,CACdC,MAAM,QACNC,KAAK,oBACLtP,MAAO8Q,SAGD,EAMVxN,GAASgB,EAAAA,QAAWC,OAAO,CAC/BkO,OAAQ,CACNrC,cAAe,MACfvC,eAAgB,gBAChBC,WAAY,aACZO,aAAc,GACdwE,IAAK,IAEPC,YAAa,CACX1C,cAAe,SACftC,WAAY,aACZ+E,IAAK,GAEPD,iBAAkB,CAChBjP,KAAM,EACNyM,cAAe,MACf2C,SAAU,OACVlF,eAAgB,eAChBgF,IAAK,GACLxE,aAAc,IAEhB2E,qBAAsB,CACpBzC,UAAW,MCvIf,GArCmB0C,KACjB,MAAM,MAAEvE,IAAUgC,EAAAA,EAAAA,YAGZ,KAAE/Q,EAAI,QAAE+B,GAAYe,KACpB,MAAErC,EAAK,WAAEqH,EAAU,UAAEE,GAAcmF,KAMnC,OAAEO,EAAM,MAAEC,IAHYlN,EAAMmJ,QAAO,CAACwI,EAAOxR,IACxCwR,GAASxR,EAAKgL,iBAAmB,IACvC,GACuByB,KAE1B,OACE7K,EAAAA,EAAAA,KAACQ,EAAM,CAAAf,UACLO,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAOC,GAAO4P,UAAUtR,SAC3BjC,GAAMkM,YAAa1J,EAAAA,EAAAA,KAAC+M,EAAY,KAAM/M,EAAAA,EAAAA,KAACsO,GAAW,OAiB9C,EAMPnN,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2O,UAAW,CACTvP,KAAM,EACNwM,SAAU,IACVgD,UAAW,SACXzE,MAAO,OACPuB,kBAAmB,IAErBwC,OAAQ,CACNrC,cAAe,MACfvC,eAAgB,gBAChBC,WAAY,aACZO,aAAc,GACdwE,IAAK,IAEPC,YAAa,CACX1C,cAAe,SACftC,WAAY,aACZ+E,IAAK,GAEPO,eAAgB,CACdL,SAAU,OACVM,aAAc,SACdxF,eAAgB,gBAChBgF,IAAK,GACLxE,aAAc,IAEhB2E,qBAAsB,CACpBzC,UAAW,M,yDCxDf,MAAM+C,GAAcC,GAAAA,SAAaC,MAAM,CACrCC,MAAOF,GAAAA,SAAaE,MAAM,qBAAkBC,SAAS,aACrDC,SAAUJ,GAAAA,SAAaK,IAAI,EAAG,0BAAuBF,SAAS,eAGjD,SAASG,MACHC,EAAAA,EAAAA,iBAAnB,MACM,QAAEpS,EAAO,QAAEJ,EAAO,SAAEE,GAAaiB,KACjC,SAAEkJ,GAAamB,KACf,OAAElK,IAAWC,EAAAA,EAAAA,YACbkR,EAAczU,MAClBoM,EACAsI,EACArD,EACAsD,KAEA,IACE,MAAM9O,QCzBL7F,eAAyBoB,GAC9B,MAAMyE,QAAiBC,MAAO,GAAET,gBAAuB,CACrDgB,OAAQ,OACRZ,QAAS,CACP,eAAgB,oBAElBa,KAAMnG,KAAKC,UAAUgB,KAGvB,IAAKyE,EAASU,GAAI,CAChB,MAAMI,QAAkBd,EAASnE,OACjC,MAAM,IAAIyE,MAAMQ,EAAUC,QAAU,6BACtC,CAEA,aAAaf,EAASnE,MACxB,CDU6BkT,CAAUxI,GACjCuI,IACA3S,EAAQ6D,EAASxF,MACjB6B,EAAS2D,EAASW,oBACZzG,EAAS8F,EAASxF,YAClBG,EAAc,QAASqF,EAASW,oBAChChG,EAAc,gBAAiBqF,EAASK,eAC9CmG,EAASxG,EAASW,aACpB,CAAE,MAAOlG,GACP+Q,EAAS,4BACX,CAAC,QACCqD,GAAc,EAChB,GAGF,OACE7R,EAAAA,EAAAA,KAACQ,EAAM,CAAAf,SACJF,GACCS,EAAAA,EAAAA,KAACgM,GAAAA,QAAI,CAAAvM,SAAC,kBAENO,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAOC,GAAO4P,UAAUtR,UAC5BsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOmM,KAAK7N,SAAA,EACvBO,EAAAA,EAAAA,KAACgM,GAAAA,QAAI,CAAC9K,MAAOC,GAAO+L,MAAMzN,SAAC,uBAE3BO,EAAAA,EAAAA,KAACgS,GAAAA,OAAM,CACLC,cAAe,CAAEX,MAAO,GAAIE,SAAU,IACtCU,iBAAkBf,GAClBgB,SAAUA,CAAC5I,GAAUsI,gBAAeO,YAAWN,eAC7CF,EACErI,EACAsI,GACCQ,GAAQD,EAAU,CAAEZ,SAAUa,KAC/BP,GAEHrS,SAEAA,EACC6S,eACAC,aACAC,eACAjJ,SACAkJ,SACAC,UACAC,mBAEA5G,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAArN,SAAA,EACEO,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACR1R,MAAOC,GAAOuB,MACdmQ,YAAY,QACZC,aAAcR,EAAa,SAC3BS,OAAQR,EAAW,SACnB1U,MAAO0L,EAAO+H,MACd0B,aAAa,gBACbC,eAAe,SAEhBP,EAAQpB,OAASmB,EAAOnB,QACvBtR,EAAAA,EAAAA,KAACgM,GAAAA,QAAI,CAAC9K,MAAOC,GAAO1D,MAAMgC,SAAEgT,EAAOnB,SAGrCtR,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACR1R,MAAOC,GAAOuB,MACdmQ,YAAY,gBACZC,aAAcR,EAAa,YAC3BS,OAAQR,EAAW,YACnB1U,MAAO0L,EAAOiI,SACd0B,iBAAe,IAEhBR,EAAQlB,UAAYiB,EAAOjB,WAC1BxR,EAAAA,EAAAA,KAACgM,GAAAA,QAAI,CAAC9K,MAAOC,GAAO1D,MAAMgC,SAAEgT,EAAOjB,YAGrCxR,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLE,QAASA,IAAM2F,IACftR,MAAO,CACLiS,gBAAiB1S,EAAO2S,SACxBvF,gBAAiB,EACjBO,UAAW,IACX3O,SAEDkT,GACC3S,EAAAA,EAAAA,KAAC4L,GAAAA,QAAiB,CAACE,MAAM,UAEzB9L,EAAAA,EAAAA,KAACgM,GAAAA,QAAI,CAAC9K,MAAOC,GAAOkS,WAAW5T,SAAC,0BAWtD,CAEA,MAAM0B,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2O,UAAW,CACTvP,KAAM,EAENkK,eAAgB,SAChBC,WAAY,UAEd2B,KAAM,CACJf,MAAO,MACPhK,QAAS,GACTkK,aAAc,GACd0G,gBAAiB,YACjBG,UAAW,EACXC,YAAa,OACbC,aAAc,CAAEjH,MAAO,EAAGC,OAAQ,GAClCiH,cAAe,GACfC,aAAc,EACd1F,SAAU,KAEZd,MAAO,CACLgB,SAAU,GACVC,WAAY,OACZjC,aAAc,GACdC,UAAW,UAEbzJ,MAAO,CACL8J,OAAQ,GACRmH,YAAa,OACbC,YAAa,EACbnH,aAAc,EACdqB,kBAAmB,GACnBM,UAAW,GACX+E,gBAAiB,QAEnB1V,MAAO,CACLqO,MAAO,MACPoC,SAAU,GACVE,UAAW,EACXyF,WAAY,GAEdR,WAAY,CACVvH,MAAO,OACPqC,WAAY,MACZD,SAAU,M,gDE5KP/Q,eAAe2W,GAAWvV,GAC/B,MAAMyE,QAAiBP,EAAW,GAAED,aAAoB,CACtDgB,OAAQ,MAERC,KAAMnG,KAAKC,UAAUgB,KAGvB,IAAKyE,EAASU,GAAI,CAChB,MAAMI,QAAkBd,EAASnE,OACjC,MAAM,IAAIyE,MAAMQ,EAAUC,QAAU,iCACtC,CAEA,aAAaf,EAASnE,MACxB,C,2CCOMqT,GAAmBd,GAAAA,SAAaC,MAAM,CAC1CtI,OAAQqI,GAAAA,SAAaG,SAAS,4BAC9BwC,SAAU3C,GAAAA,SAAaG,SAAS,8BAChCD,MAAOF,GAAAA,SAAaE,MAAM,qBAAkBC,SAAS,mBACrDyC,YAAa5C,GAAAA,SAAaK,IAAI,EAAG,0BACjCwC,gBAAiB7C,GAAAA,SAAa8C,MAC5B,CAAC9C,GAAAA,IAAQ,eAAgB,IACzB,qCA0TEjQ,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2O,UAAW,CACTzO,SAAU,EACVC,QAAS,GACToJ,WAAY,SACZwI,UAAW,QAEb7D,OAAQ,CACNnC,WAAY,OACZD,SAAU,GACVE,UAAW,GACXlC,aAAc,EACd8E,UAAW,aACXoD,cAAe,IAEjBC,UAAW,CACTnI,aAAc,GACd8E,UAAW,aACX9C,SAAU,GACVoG,QAAS,KAEXC,gBAAiB,CACf5I,WAAY,SACZ6I,eAAgB,GAChBjI,MAAO,QAETkI,WAAY,CACVxG,cAAe,MACfvC,eAAgB,gBAChBC,WAAY,SACZ+I,aAAc,EACdrS,WAAY,GAEdoL,UAAW,CACTS,SAAU,GACVC,WAAY,QAEdwG,aAAc,CACZzG,SAAU,IAEZ0G,WAAY,CACVxG,UAAW,GACX3B,aAAc,GACdsB,SAAU,IACVuF,UAAW,EACXtC,UAAW,UAEb1D,KAAM,CACJf,MAAO,OACPyB,SAAU,IACVgD,UAAW,SACX5C,UAAW,GACXN,kBAAmB,EACnBrB,aAAc,GACd6G,UAAW,GAEbuB,KAAM,CACJnE,IAAK,EACLtC,UAAW,EACX7B,MAAO,QAET7J,MAAO,CACLwJ,aAAc,GAEhBzO,MAAO,CACLyQ,SAAU,GACVhC,aAAc,EACd2H,WAAY,GAEdiB,YAAa,CACX1G,UAAW,GACXH,cAAe,MACfvC,eAAgB,WAChBgF,IAAK,GAEPqE,WAAY,CACVlB,WAAY,EACZpH,aAAc,GACdsB,SAAU,KAEZiH,aAAc,CACZrB,YAAa,OACblH,aAAc,GACdsB,SAAU,KAEZkH,aAAc,CACZ7G,UAAW,GACX7B,MAAO,OACPyB,SAAU,IACVgD,UAAW,SACXvE,aAAc,GACdmH,YAAa,EACbD,YAAa,UACb7H,MAAO,aAIX,GAvZgBoJ,KACd,MAAM,KAAE1X,GAAS8C,KACV6U,EAAUC,IAAe1V,EAAAA,EAAAA,WAAS,IAClCqJ,EAAQsM,IAAa3V,EAAAA,EAAAA,UAASlC,GAAMuL,SACpCgL,EAAUuB,IAAe5V,EAAAA,EAAAA,UAASlC,GAAMuW,WACxCzC,EAAOiE,IAAY7V,EAAAA,EAAAA,UAASlC,GAAM8T,QACnC,OAAE7Q,IAAWC,EAAAA,EAAAA,aACb,MAAE6L,IAAUgC,EAAAA,EAAAA,YACXiD,EAAUgE,IAAe9V,EAAAA,EAAAA,UAAS,KAClCuU,EAAiBwB,IAAsB/V,EAAAA,EAAAA,UAAS,KACjD,QAAEP,GAAYmB,IAEdoV,EAAaA,IAAMN,GAAY,GAE/BO,EAAeA,KACnBP,GAAY,GACZI,EAAY,IACZC,EAAmB,GAAG,EA0BxB,OACEzV,EAAAA,EAAAA,KAACQ,EAAM,CAAAf,UACLsM,EAAAA,EAAAA,MAAClK,EAAAA,QAAU,CAACC,sBAAuB,CAACX,GAAO4P,UAAU,GAAItR,SAAA,EACvDO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACHC,QAAQ,aACR/K,MAAO,CAACC,GAAOmP,OAAQ,CAAExE,MAAOrL,EAAOG,UAAWnB,SACnD,YAGDO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACHC,QAAQ,aACR/K,MAAO,CAACC,GAAOkT,UAAW,CAAEvI,MAAOrL,EAAOmV,mBAAoBnW,SAC/D,2CAIDsM,EAAAA,EAAAA,MAACsB,GAAAA,QAAI,CAACnM,MAAO,CAACC,GAAOmM,KAAM,CAAE6F,gBAAiB1S,EAAOoV,UAAWpW,SAAA,EAC9DO,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAOC,GAAOsT,WAAWhV,UAC7BO,EAAAA,EAAAA,KAACqN,GAAAA,QAAKyI,MAAK,CACT5I,MAAM,0BACN6I,SAAS,wCACTC,WAAY,CAAC7U,GAAOsM,UAAW,CAAE3B,MAAOrL,EAAOG,UAC/CqV,cAAe,CACb9U,GAAOwT,aACP,CAAE7I,MAAOrL,EAAOmV,wBAItB5V,EAAAA,EAAAA,KAACkW,GAAAA,QAAO,CACNhV,MAAO,CAAEgL,aAAc,EAAGiH,gBAAiB1S,EAAO0V,mBAEpDnW,EAAAA,EAAAA,KAACqN,GAAAA,QAAKE,QAAO,CAAA9N,UACXO,EAAAA,EAAAA,KAACgS,GAAAA,OAAM,CACLC,cAAe,CACblJ,OAAQA,GAAU,GAClBgL,SAAUA,GAAY,GACtBzC,MAAOA,GAAS,GAChB0C,YAAa,GACbC,gBAAiB,IAEnB/B,iBAAkBA,GAClBC,SAAW5I,IAhEJpM,WACjB,MAAM,YAAE6W,EAAW,gBAAEC,GAA6B1K,EAAT6M,GAAIC,EAAAA,GAAAA,SAAK9M,EAAM+M,IAExD,GAAItC,GACEA,IAAgBC,EAClBsC,GAAAA,QAAMC,MAAM,QAAS,yCAKzB,IACE,MAAMC,QAAoB3C,GAAU5Q,OAAAC,OAAC,CAAC,EACjCiT,EAAK,CACR5E,SAAUwC,QAAe7O,KAG3BhG,EAAQsX,GACRrB,GAAY,EACd,CAAE,MAAO3X,GACP8Y,GAAAA,QAAMC,MAAM,QAAU/Y,EAAgBiZ,QACxC,GA6CYC,CAAWpN,EAAO,EAEpBqN,oBAAkB,EAAAnX,SAEjBA,EACC6S,eACAC,aACAC,eACAjJ,SACAkJ,SACAC,cAEA3G,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO0T,KAAKpV,SAAA,EACvBO,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,SACNhZ,MAAOkL,EACP+J,aAAcuC,EACdF,SAAUA,EACVvI,KAAK,OACL1L,MAAO,CACLC,GAAOuB,MACP,CACEyQ,gBAAiBgC,EACb1U,EAAOI,WACPJ,EAAOqW,kBAGfrZ,QAASgV,EAAO1J,QAAU2J,EAAQ3J,OAClCgK,OAAQR,EAAW,QACnBwE,MACE/W,EAAAA,EAAAA,KAAC4S,GAAAA,QAAUoE,KAAI,CACb7J,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,iBACL9B,MAAOA,EACPD,KAAMA,QAMfsJ,GAAY1C,EAAO1J,QAAU2J,EAAQ3J,SACpC/I,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAO,CAACC,GAAO1D,MAAO,CAAEqO,MAAOrL,EAAOhD,QAASgC,SAClDgT,EAAO1J,UAIZ/I,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,WACNhZ,MAAOkW,EACPjB,aAAcwC,EACdH,SAAUA,EACVvI,KAAK,OACL1L,MAAO,CACLC,GAAOuB,MACP,CACEyQ,gBAAiBgC,EACb1U,EAAOI,WACPJ,EAAOqW,kBAGfrZ,QAASgV,EAAOsB,UAAYrB,EAAQqB,SACpChB,OAAQR,EAAW,YACnBwE,MACE/W,EAAAA,EAAAA,KAAC4S,GAAAA,QAAUoE,KAAI,CACb7J,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,iBACL9B,MAAOA,EACPD,KAAMA,QAMfsJ,GAAY1C,EAAOsB,UAAYrB,EAAQqB,WACtC/T,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAO,CAACC,GAAO1D,MAAO,CAAEqO,MAAOrL,EAAOhD,QAASgC,SAClDgT,EAAOsB,YAIZ/T,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,QACNhZ,MAAOyT,EACP6D,SAAUA,EACVrC,aAAcyC,EACd3I,KAAK,OACL1L,MAAO,CACLC,GAAOuB,MACP,CAAEyQ,gBAAiB1S,EAAOqW,kBAE5BrZ,QAASgV,EAAOnB,OAASoB,EAAQpB,MACjCyB,OAAQR,EAAW,SACnBwE,MACE/W,EAAAA,EAAAA,KAAC4S,GAAAA,QAAUoE,KAAI,CACb7J,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,eACL9B,MAAOA,EACPD,KAAMA,QAMfsJ,GAAY1C,EAAOnB,OAASoB,EAAQpB,QACnCtR,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAO,CAACC,GAAO1D,MAAO,CAAEqO,MAAOrL,EAAOhD,QAASgC,SAClDgT,EAAOnB,QAIX6D,IACCpJ,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAArN,SAAA,EACEO,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,cACN3D,iBAAe,EACfrV,MAAO2T,EACPsB,aAAc0C,EACd3C,YAAY,WACZjG,KAAK,OACLqK,aAAa,MACbC,gBAAgB,OAChBC,qBAAqB,KACrBjW,MAAO,CACLC,GAAOuB,MACP,CAAEyQ,gBAAiB1S,EAAOI,aAE5BpD,QAASgV,EAAOuB,aAAetB,EAAQsB,YACvCjB,OAAQR,EAAW,eACnBwE,MACE/W,EAAAA,EAAAA,KAAC4S,GAAAA,QAAUoE,KAAI,CACb7J,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,sBACL9B,MAAOA,EACPD,KAAMA,QAMf4G,EAAOuB,aAAetB,EAAQsB,cAC7BhU,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAO,CAACC,GAAO1D,MAAO,CAAEqO,MAAOrL,EAAOhD,QAASgC,SAClDgT,EAAOuB,eAIZhU,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,gBACN3D,iBAAe,EACfrV,MAAOoW,EACPnB,aAAc2C,EACd5C,YAAY,WACZjG,KAAK,OACL1L,MAAO,CAACC,GAAOuB,MAAM,GACrBqU,MACE/W,EAAAA,EAAAA,KAAC4S,GAAAA,QAAUoE,KAAI,CACb7J,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,sBACL9B,MAAOA,EACPD,KAAMA,SAOhBE,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO2T,YAAYrV,SAAA,EAC9BO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,WACL1L,MAAO,CACLC,GAAO6T,aACP,CAAErB,YAAalT,EAAO2W,SACtB7K,EAAQ,KAAO,CAAE/K,KAAM,IAEzBqL,QAAS8I,EACT0B,WAAY,CAAEvL,MAAOrL,EAAOG,SAAUnB,SACvC,cAGDO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,YACL1L,MAAO,CACLC,GAAO4T,WACP,CAAE5B,gBAAiB1S,EAAOG,SAC1B2L,EAAQ,KAAO,CAAE/K,KAAM,IAEzBqL,QAAS2F,EACT6E,WAAY,CAAEvL,MAAOrL,EAAO6W,WAAY7X,SACzC,mBAOL0V,IACAnV,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLzL,MAAO,CACLC,GAAOyT,WACP,CAAEzB,gBAAiB1S,EAAOG,SAC1B2L,EAAQ,KAAO,CAAEA,MAAO,OAAQyE,UAAW,WAE7CpE,KAAK,YACLO,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,SAAS9B,MAAOA,EAAOD,KAAMA,IAE9CgB,QAAS6I,EACT2B,WAAY,CAAEvL,MAAOrL,EAAO6W,UAAWpJ,SAAU,IACjDqJ,aAAc,CAAE1J,gBAAiB,GAAIpO,SACtC,yBAUR,E,0DCtVN,MAAM+X,GAAcA,CAACzO,EAAiBgL,IAGnC,GAFEhL,GAAQ0O,SAAS,IAAIC,eAAiB,KACtC3D,GAAU0D,SAAS,IAAIC,eAAiB,KCgE9CvW,GAASgB,EAAAA,QAAWC,OAAO,CAC/BuV,QAAS,CACPhM,WAAY,SACZO,aAAc,GACd8B,SAAU,IACVwC,OAAQ,GACRjE,MAAO,QAETqL,OAAQ,CACNzE,gBAAiB,WAEnBvF,KAAM,CACJQ,UAAW,EACXD,WAAY,QAEd0J,KAAM,CACJ3J,SAAU,GACVpC,MAAO,aAIX,GAzEmBgM,EACjBC,YACAC,eAAc,EACdxa,OACA+B,UACA0Y,iBAEA,MAAM,OAAExX,IAAWC,EAAAA,EAAAA,YACnB,OACEqL,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACLC,GAAOwW,QACPK,GAAe,CACb7E,gBAAiB1S,EAAOI,WACxB4L,aAAc,GACdlK,QAAS,GACT+Q,UAAW,EACXC,YAAa,OACbC,aAAc,CAAEjH,MAAO,EAAGC,OAAQ,GAClCiH,cAAe,GACfC,aAAc,OAEhBjU,SAAA,EAEFO,EAAAA,EAAAA,KAACkY,GAAAA,QAAW,CACVrB,MAAOW,GAAYha,GAAMuL,OAAQvL,GAAMuW,UACvClI,KAAM,GACN3K,MAAOC,GAAOyW,UAEhB5X,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAa/K,MAAOC,GAAOyM,KAAKnO,SAC3CF,EAAU,WAAc,GAAE/B,GAAMuL,UAAUvL,GAAMuW,cAEjDiE,IACAhY,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,YAAY/K,MAAOC,GAAO0W,KAAKpY,SAC1CF,EAAU,WAAa/B,GAAMkM,WAAa,WAAa,WAI3DsO,IACCjM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAAAxC,SAAA,EACHO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAYxM,SACvBwY,EAAa,YAAc,mBAE9BjY,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAa/K,MAAO,CAAEiL,UAAW,UAAW1M,SACvDsY,SAIF,E,oCC5DJ,MAAMI,GAAoBjV,OAAAC,OAAA,GAC5BiV,GAAAA,cAAc,CACjB3X,OAAMyC,OAAAC,OAAA,GACDiV,GAAAA,cAAc3X,OAAO,CACxBG,QAAS,UACTC,WAAY,UACZgV,QAAS,UACTwC,KAAM,UACNC,UAAW,UACXC,OAAQ,UACRC,gBAAiB,UACjBC,gBAAiB,UACjBC,eAAgB,cAIPC,GAAmBzV,OAAAC,OAAA,GAC3ByV,GAAAA,aAAa,CAChBnY,OAAMyC,OAAAC,OAAA,GACDyV,GAAAA,aAAanY,OAAO,CACvBG,QAAS,UACTC,WAAY,UACZgV,QAAS,UACTwC,KAAM,UACNC,UAAW,UACXC,OAAQ,UACRC,gBAAiB,UACjBC,gBAAiB,UACjBC,eAAgB,c,eCxBpB,MAAMG,IAAe3Z,EAAAA,EAAAA,eAAc,CACjC4Z,YAAY,EACZC,YAAaA,OACbC,MAAOb,KAGIc,GAAgBA,EAAGxZ,eAC9B,MAAMyZ,GAAoBC,EAAAA,GAAAA,YACnBC,EAAgBC,IAAqB3Z,EAAAA,EAAAA,WAAS,IAC9CoZ,EAAYQ,IAAiB5Z,EAAAA,EAAAA,UAA+B,SAAtBwZ,IAE7CtZ,EAAAA,EAAAA,YAAU,KACUzC,WAChB,MAAMoc,QAAezb,EAAe,SACrB,UAAXyb,GAAiC,SAAXA,GACxBF,GAAkB,GAClBC,EAAyB,SAAXC,KAEdF,GAAkB,GAClBC,EAAoC,SAAtBJ,GAChB,EAEFM,EAAW,GACV,KAEH5Z,EAAAA,EAAAA,YAAU,KACJwZ,GAAkBF,GACpBI,EAAoC,SAAtBJ,EAChB,GACC,CAACA,EAAmBE,KAEvBxZ,EAAAA,EAAAA,YAAU,KACR,MAAM6Z,EAAWC,GAAAA,QAAWC,mBAAkB,EAAGC,kBAC/CN,EAA8B,SAAhBM,EAAuB,IAEvC,MAAO,IAAMH,EAASI,QAAQ,GAC7B,IAEH,MAOMb,EAAQF,EAAaH,GAAYR,GAEvC,OACEnY,EAAAA,EAAAA,KAAC6Y,GAAa5Y,SAAQ,CAACpC,MAAO,CAAEib,aAAYC,YAV1B5b,UAClB,MAAM2c,GAAYhB,EAClBQ,EAAcQ,GACdT,GAAkB,SACZ1b,EAAc,QAASmc,EAAW,OAAS,QAAQ,EAMAd,SAAQvZ,SAC9DA,GACqB,EAIfsa,GAAkBA,KAAMxZ,EAAAA,EAAAA,YAAWsY,IClDjC,SAASmB,GAAoBC,GAC1C,MAAM,WAAEnB,EAAU,YAAEC,GAAgBgB,MAC9B,KAAEvc,EAAI,QAAE+B,EAAO,OAAED,GAAWgB,KAC5B,SAAEwF,GAAa6E,IAEfuP,EAAc,CAClB,CACE/M,KAAM,eACN0J,MAAO,YACPsD,OAAQ,QAEV,CACEhN,KAAM,iBACN0J,MAAO,SACPsD,OAAQ,UAEV,CACEhN,KAAM,eACN0J,MAAO,uBACPsD,OAAQ,iBAEV,CACEhN,KAAM,oBACN0J,MAAO,SACPsD,OAAQ,UAEV,CACEhN,KAAM,eACN0J,MAAOrZ,GAAMkM,WACT5D,GAAUiD,OACRjD,GAAUiD,OACV,YACF,gBACJoR,OAAQ,eAEN3c,GAAMkM,WACN,CACE,CACEyD,KAAM,iBACN0J,MAAO,UACPsD,OAAQ,YAGZ,IAEN,OACEna,EAAAA,EAAAA,KAACoa,EAAAA,wBAAuBlX,OAAAC,OAAA,GAAK8W,EAAK,CAAEnY,sBAAuB,CAAEN,KAAM,GAAI/B,UACrEsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO4P,UAAUtR,SAAA,EAE5BO,EAAAA,EAAAA,KAAC8X,GAAU,CAACta,KAAMA,EAAM+B,QAASA,EAASyY,aAAa,KAEvDhY,EAAAA,EAAAA,KAAC6B,EAAAA,QAAU,CAAApC,UACTO,EAAAA,EAAAA,KAACqa,GAAAA,QAAc,CAACnZ,MAAOC,GAAOmZ,IAAI7a,SAC/Bya,EAAY5R,KAAI,CAAChB,EAAMiT,KACtBva,EAAAA,EAAAA,KAACwa,EAAAA,WAAU,CAETrN,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAMtG,EAAK6F,KAAarB,MAAOA,EAAOD,KAAMA,IAExDgL,MAAOvP,EAAKuP,MACZhK,QAASA,IAAMoN,EAAMQ,WAAWC,SAASpT,EAAK6S,SALzCI,UAYbxO,EAAAA,EAAAA,MAACsO,GAAAA,QAAc,CAACnZ,MAAOC,GAAOwZ,OAAOlb,SAAA,EACnCsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAACC,GAAOyZ,UAAWzZ,GAAO0Z,WAAWpb,SAAA,EAChDO,EAAAA,EAAAA,KAACwa,EAAAA,WAAU,CACTrN,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAMkL,EAAa,OAAS,QAC5BhN,MAAOA,EACPD,KAAMA,IAGVgL,MAAOiC,EAAa,cAAgB,aACpCjM,QAASkM,EACT7X,MAAO,CAAEM,KAAM,MAEjBxB,EAAAA,EAAAA,KAAC8a,GAAAA,QAAM,CAACjd,MAAOib,EAAYiC,cAAehC,QAG5C/Y,EAAAA,EAAAA,KAACwa,EAAAA,WAAU,CACTrN,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAACgb,GAAAA,QAAO,CAACpN,KAAK,UAAU9B,MAAOA,EAAOD,KAAMA,IAE9CgL,MAAM,mBACNhK,QAASA,KACPvN,GAAQ,YAOtB,CAEA,MAAM6B,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2O,UAAW,CACTvP,KAAM,EACNa,WAAY,IAEdiY,IAAK,CACHlM,UAAW,IAEbuM,OAAQ,CACNpY,QAAS,GAEXqY,UAAW,CACT3M,cAAe,MACfvC,eAAgB,gBAChBC,WAAY,SACZO,aAAc,GAEhB2O,UAAW,CACTnG,aAAc,K,iFC9GX,MAAMuG,GAAgBA,EAAGC,YAAWC,gBAAe1d,YACxD,MAAO2d,EAASC,IAAc3b,EAAAA,EAAAA,WAAS,IAChC4b,EAAUC,IAAe7b,EAAAA,EAAAA,UAG7B,CAAEmX,MAAO,iBAAkB7P,GAAI,QAE5B,OAAEvG,IAAWC,EAAAA,EAAAA,YAGb8a,EAAYA,IAAMH,GAAW,GAE7BI,EAAeA,CAAC1S,EAAgB/B,KACpCuU,EAAY,CAAE1E,MAAO9N,EAAQ/B,OAC7BwU,IACAL,EAAcnU,EAAG,EAOnB,OAJApH,EAAAA,EAAAA,YAAU,KACR2b,EAAY,CAAE1E,MAAO,iBAAkB7P,GAAI,MAAO,GACjD,CAACkU,KAGFnP,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAAAxC,SAAA,EACHsM,EAAAA,EAAAA,MAAC2P,GAAAA,QAAI,CACHN,QAASA,EACTO,UAAWH,EACXI,QACE5b,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAMnP,EAAQ,kBAAoB,WAClCoP,QArBOgP,IAAMR,GAAW,GAsBxB9D,aAAcpW,GAAO2a,cACrB5a,MAAO,CAACC,GAAO4a,OAAQte,GAAS,CAAEkW,YAAalT,EAAOhD,QAASgC,UAE/DsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO6a,cAAcvc,SAAA,EAChCO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,eACL/B,KAAM,GACNC,MAAOrO,EAAQgD,EAAOhD,MAAQgD,EAAOwb,UACrC/a,MAAOC,GAAO+a,YAEhBnQ,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOgb,iBAAiB1c,SAAA,EACnCO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAMwN,EAAU,aAAe,eAC/BvP,KAAM,GACNC,MAAOrO,EAAQgD,EAAOhD,MAAQgD,EAAOwb,UACrC/a,MAAOC,GAAOib,aAGhBpc,EAAAA,EAAAA,KAACgM,GAAAA,QAAI,CAAC9K,MAAO,CAACC,GAAOkb,WAAY,CAAEvQ,MAAOrL,EAAOwb,YAAaxc,SAC3D6b,EAASzE,gBAKnBpX,SAAA,EAEDO,EAAAA,EAAAA,KAAC0b,GAAAA,QAAKY,KAAI,CAERzP,QAASA,IAAM4O,EAAa,iBAAkB,MAC9CvO,MAAM,iBACNqP,YAAaA,KACXvc,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,kBAAkB/B,KAAM,GAAIC,MAAOrL,EAAOG,WAJvD,iBAONZ,EAAAA,EAAAA,KAACkW,GAAAA,QAAO,IACPgF,EAAU5S,KAAKhB,IACdtH,EAAAA,EAAAA,KAAC0b,GAAAA,QAAKY,KAAI,CAERzP,QAASA,IAAM4O,EAAanU,EAAKyB,OAAQzB,EAAKkV,SAC9CtP,MAAO5F,EAAKyB,OACZwT,YAAaA,KACXvc,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,iBACL/B,KAAM,GACNC,MAAOrL,EAAOG,WAPb0G,EAAKkV,cAcf/e,IACCuC,EAAAA,EAAAA,KAACyc,GAAAA,QAAU,CAACC,KAAK,QAAQtB,QAAS3d,EAAMgC,SAAC,qCAItC,EAIL0B,GAASgB,EAAAA,QAAWC,OAAO,CAC/B0Z,cAAe,CACb7N,cAAe,MACfvC,eAAgB,iBAElBqQ,OAAQ,CACNnI,YAAa,GAEfoI,cAAe,CACb/N,cAAe,MACftC,WAAY,UAEdwQ,iBAAkB,CAChBlO,cAAe,MACftC,WAAY,SACZ+E,IAAK,GAEPwL,SAAU,CACRS,YAAa,GAEfP,UAAW,CACTO,YAAa,GAEfN,WAAY,CACVvO,kBAAmB,KCmOvB,GAtUsB8O,EACpBxB,UACAO,YACAne,OACAkM,aACAmT,mBAEA,IAAKrf,EAAM,OAAO,KAClB,MAAM,OAAEiD,IAAWC,EAAAA,EAAAA,aACZoc,EAAKC,IAAUrd,EAAAA,EAAAA,UAASgK,EAAa,UAAY,cACjDvC,EAAU6V,IAAetd,EAAAA,EAAAA,UAAS,MAClCud,EAAUC,IAAexd,EAAAA,EAAAA,UAAS,KAClC2J,EAAM8T,IAAWzd,EAAAA,EAAAA,UAAiB,MAClC0d,EAAqBC,IAA0B3d,EAAAA,EAAAA,UACpD,OAEK4d,EAAcC,IAAmB7d,EAAAA,EAAAA,WAAS,IAC1C8d,EAASC,IAAc/d,EAAAA,EAAAA,UAAS,KACjC,iBAAEgG,EAAgB,cAAEiE,EAAa,SAAE7D,GAAa6E,KAC/CpL,EAASI,IAAcD,EAAAA,EAAAA,WAAS,GAEjCge,GAAmBC,EAAAA,EAAAA,UAAQ,IAC1BngB,EAEDkM,GAEMhE,GAAoB,IACzB4C,KAAKlK,IACJ,GAAI,YAAaA,GAAQwf,MAAMC,QAAQzf,EAAK4G,SAAU,CACpD,MAAMkC,EAAS9I,EAAK4G,QAAQ8Y,MACzBC,GAAsBA,EAAE/W,KAAOxJ,EAAKwJ,KAEvC,GAAIE,EACF,MAAO,CACLsV,QAASpe,EAAKoe,QACdzT,OAAQ3K,EAAK2K,OACbtB,UAAWP,EAAOO,WAAa,GAGrC,CACA,OAAO,IAAI,IAEZ2H,QAEGhR,GAKY,OAATA,IAEAye,EACF,CACL,CACEL,QAASK,EAAa7V,GACtB+B,OAAQ8T,EAAa9T,OACrBtB,UAAWoV,EAAapV,YAKvB,GAvCW,IAwCjB,CAAC/B,EAAkBlI,EAAMkM,EAAYmT,IA0CxC,OACE9Q,EAAAA,EAAAA,MAACiS,GAAAA,QAAM,CAAAve,SAAA,EACLO,EAAAA,EAAAA,KAACie,GAAAA,QAAQ,CACP7C,QAASkC,GAA4B,KAAZE,EACzBU,SAAU,IACVvC,UAAWA,KACT4B,GAAgB,GAChBE,EAAW,GAAG,EAEhBU,OAAQ,CACNtH,MAAO,OACPhK,QAASA,IAAM0Q,GAAgB,IAC/B9d,SAED+d,KAEHzR,EAAAA,EAAAA,MAACqS,GAAAA,QAAK,CACJhD,QAASA,EACTO,UAAWA,EACX7Z,sBAAuB,CACrBqR,gBAAiB1S,EAAOoV,QACxBtT,QAAS,GACTiO,OAAQ,GACR/D,aAAc,GACdF,MAAO,MACPyB,SAAU,IACVtC,eAAgB,aAChBsF,UAAW,UACXvR,SAAA,EAEFO,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CACHf,MAAO,CACL+M,cAAe,MACfvC,eAAgB,SAChBC,WAAY,SACZY,MAAO,OACPqE,SAAU,SACVyN,SAAU,SACVnS,aAAc,GACdzM,UAEFO,EAAAA,EAAAA,KAACse,GAAAA,QAAgB,CACfzgB,MAAOif,EACP/B,cAAegC,EACfwB,QAAS,CACP,CAAE1gB,MAAO,YAAagZ,MAAO,gBACzBnN,EAAa,CAAC,CAAE7L,MAAO,UAAWgZ,MAAO,YAAe,IAE9D3V,MAAO,CACLM,KAAM,EACNuM,SAAU,EACVC,SAAU,OACVvB,aAAc,GACd4R,SAAU,cAIP,YAARvB,GAAqBpT,IACpBqC,EAAAA,EAAAA,MAACsB,GAAAA,QAAI,CAACT,KAAK,YAAY1L,MAAO,CAAEkN,UAAW,GAAI7L,QAAS,GAAI9C,SAAA,EAC1DO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAc/K,MAAO,CAAEgL,aAAc,GAAIzM,SACnD,2BAA0BjC,EAAKuL,UAAUvL,EAAKuW,cAGlD/T,EAAAA,EAAAA,KAACib,GAAa,CACZC,UAAWwC,EACXvC,cAAekC,KAGjBrd,EAAAA,EAAAA,KAACkW,GAAAA,QAAO,CAAChV,MAAO,CAAEsT,eAAgB,OAElCxU,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAa/K,MAAO,CAAEgL,aAAc,GAAIzM,SAAC,cAGvDsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CAAE+M,cAAe,MAAOtC,WAAY,SAAU+E,IAAK,GAAIjR,SAAA,EAE9DO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,WACLC,QAASA,IACPmQ,GAAawB,GAASC,OAAOjP,KAAKkP,IAAI,EAAGxO,OAAOsO,GAAQ,MACzD/e,SACF,OAIDO,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACR/U,MAAOsJ,EACP2L,aAAckK,EACdhK,aAAa,UACbpG,KAAK,WACL1L,MAAO,CAAEM,KAAM,MAGjBxB,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,WACLC,QAASA,IAAMmQ,GAAawB,GAASC,OAAOvO,OAAOsO,GAAQ,KAAI/e,SAChE,UAKHO,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,WACNjK,KAAK,WACL/O,MAAOof,EACPnK,aAAcoK,EACdhc,MAAO,CAAEkN,UAAW,OAGtBpO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAa/K,MAAO,CAAEkN,UAAW,IAAK3O,SAAC,0BAGrDO,EAAAA,EAAAA,KAAC2e,GAAAA,QAAYC,MAAK,CAChB7D,cAAgBld,GAAUsf,EAAQtf,GAClCA,MAAOwL,EAAK5J,UAEZsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACL+M,cAAe,MACfvC,eAAgB,YAChBjM,SAAA,EAEFO,EAAAA,EAAAA,KAAC2e,GAAAA,QAAYrC,KAAI,CAACzF,MAAM,QAAQhZ,MAAM,OACtCmC,EAAAA,EAAAA,KAAC2e,GAAAA,QAAYrC,KAAI,CAACzF,MAAM,SAAShZ,MAAM,YAI3CmC,EAAAA,EAAAA,KAACkW,GAAAA,QAAO,CAAChV,MAAO,CAAEsT,eAAgB,OAElCxU,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAO,CAAE+M,cAAe,MAAOvC,eAAgB,YAAajM,UAChEO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CAACC,KAAK,YAAYC,QA1Kf1P,UACpB,IAAKigB,GAA+C,IAAxBA,EAG1B,OAFAK,EAAW,iDACXF,GAAgB,GAIlB,IAAKN,EAASxF,OAEZ,YADAlB,GAAAA,QAAMC,MAAM,cAAY,+BAI1B7W,GAAW,GAEX,MAAMkf,EAA6C,CACjDrC,QAASY,EACT0B,UAAWthB,EAAKwJ,GAChB+X,QAAS9B,EACT1V,KAAM2I,OAAO7G,GACblC,SAAU+I,OAAO/I,GACjB6X,UAAWlZ,GAAUkB,IAEvB,UxBhEG7J,eACLoB,GAEA,MAAMyE,QAAiBP,EAAW,GAAED,0BAAiC,CACnEgB,OAAQ,OAERC,KAAMnG,KAAKC,UAAUgB,KAGvB,IAAKyE,EAASU,GAAI,CAChB,MAAMI,QAAkBd,EAASnE,OACjC,MAAM,IAAIyE,MAAMQ,EAAUC,QAAU,4BACtC,CAEA,aAAaf,EAASnE,MACxB,CwBkDYogB,CAAiBJ,GACvB7B,EAAY,KACZE,EAAY,IACZC,EAAQ,KACRE,EAAuB,MACvB1B,IACAhS,GAAc,GACd8T,EAAW,0CACXF,GAAgB,EAClB,CAAE,MAAO9f,GACPggB,EAAW,oBACXF,GAAgB,EAClB,CAAC,QACC5d,GAAW,EACb,GAqI0DF,SAC7CF,EAAU,eAAiB,iBAK3B,cAARud,IACC/Q,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAAEkN,UAAW,IAAK3O,SAAA,EAC7BO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAc/K,MAAO,CAAEgL,aAAc,GAAIzM,SAAC,2BAGvDie,EAAiBwB,OACf5X,GAA2C,KAAjCA,EAAKG,WAAa,IAAI8H,UAEjCvP,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAO,CAAEkN,UAAW,GAAI3O,SAAC,6BAE/BO,EAAAA,EAAAA,KAAC6B,EAAAA,QAAU,CAAApC,SACRie,EACEtO,QAAQhR,IAAUA,EAAKqJ,WAAa,IAAI8H,OAAS,IAEjDjH,KAAKlK,IAEJ,MAAM+gB,EAAiB/gB,EAAKqJ,UAAUL,QACpC,CAACC,EAAK+X,IACJ/X,GAAO+X,EAAM7X,KAAO6X,EAAMjY,UAAYiY,EAAMjY,WAC9C,GAEF,OACE4E,EAAAA,EAAAA,MAACsB,GAAAA,QAAI,CAAoBnM,MAAO,CAAEgL,aAAc,IAAKzM,SAAA,EACnDO,EAAAA,EAAAA,KAACqN,GAAAA,QAAKyI,MAAK,CACT5I,OACEnB,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAEHf,MAAO,CACL+M,cAAe,MACftC,WAAY,UACZlM,SAAA,EAEFO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAAvM,SAAErB,EAAK2K,UACZ/I,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACH9K,MAAO,CACL2S,WAAY,EACZ1F,WAAY,OACZrC,MAAOqT,GAAkB,EAAI,QAAU,OACvC1f,SAEA,IAAG0f,SAdF/gB,EAAKoe,YAmBhBxc,EAAAA,EAAAA,KAACqN,GAAAA,QAAKE,QAAO,CAAA9N,SACVrB,EAAKqJ,UAAUa,KAAK8W,IACnBrT,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAAAxC,SAAA,EACHsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAEHf,MAAO,CACL+M,cAAe,MACfvC,eAAgB,gBAChB8I,eAAgB,GAChB/U,SAAA,EAEFO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAAvM,SACF,IAAIsL,KAAKqU,EAAMjU,OAAOC,wBAEzBpL,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAAvM,SAAE2f,EAAML,WACb/e,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACH9K,MAAO,CACL4K,MAAOsT,EAAM7X,KAAO,QAAU,OAC9B9H,SAED2f,EAAM7X,KACF,IAAG6X,EAAMjY,WACT,IAAGiY,EAAMjY,eAlBXiY,EAAMpY,KAqBbhH,EAAAA,EAAAA,KAACkW,GAAAA,QAAO,MAvBCkJ,EAAMpY,UAzBZ5I,EAAKoe,QAoDT,cAQhB,ECtVE,SAAS6C,IAAa,QACnCC,EAAO,QACPzS,EAAO,WACP0S,EAAa,EAAC,UACdC,EAAS,SACTC,EAAQ,KACRzX,IAEA,MAAM,OAAEvH,IAAWC,EAAAA,EAAAA,YASnB,OACEV,EAAAA,EAAAA,KAACqN,GAAAA,QAAI,CACHnM,MAAO,CAACC,GAAOmM,MACfV,KAAK,WACLC,QAASA,EAAU,IAAMA,EAAQyS,QAAWna,EAAU1F,UAEtDO,EAAAA,EAAAA,KAACW,EAAAA,eAAc,CACbF,OACE+e,IAAcC,EAhBUF,IACX,IAAfA,EAAyB,CAAC,cAAe,eACzCA,EAAa,GAAW,CAAC9e,EAAOI,WAAYJ,EAAOiY,gBACnD6G,EAAa,GAAW,CAAC9e,EAAOI,WAAYJ,EAAOgY,iBAEhD,CAAChY,EAAOI,WAAYJ,EAAO+X,iBAYxBkH,CAAuBH,GACvB,CAAC,eAAgB,eAEvBze,MAAO,CAAEC,EAAG,GAAKC,EAAG,IACpBC,IAAK,CAAEF,EAAG,EAAGC,EAAG,GAChBE,MAAO,CAAEuL,aAAc,EAAGlK,QAAS,IAAK9C,UAExCsM,EAAAA,EAAAA,MAACsB,GAAAA,QAAKE,QAAO,CAACrM,MAAOC,GAAOqM,YAAY/N,SAAA,EACtCsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOwe,SAASlgB,SAAA,EAC3BO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAaxM,SAAE6f,EAAQvW,UACrC/I,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAOC,GAAOye,YAAYngB,UAC9BO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,YAAWxM,SACrB,GAAE6f,EAAQtW,WAAQsW,EAAQrW,kBAAeqW,EAAQpW,uBAIzD6C,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO0e,UAAUpgB,SAAA,EAC5BO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAYxM,SACvB+f,GAAyB,MAAZC,EACV,cACY,MAAZA,EACAzX,EACA,sBAENhI,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAc/K,MAAOC,GAAO2e,WAAWrgB,SAClD+f,GAAyB,MAAZC,EACT,GAAEF,KACS,MAAZE,EACAA,EACAH,EAAQlW,2BAO1B,CAEA,MAAMjI,GAASgB,EAAAA,QAAWC,OAAO,CAC/BkL,KAAM,CACJpB,aAAc,GACdK,MAAO,OACPwT,iBAAkB,GAClB/R,SAAU,IACVvB,aAAc,EACd6G,UAAW,EACXtC,UAAW,UAEbxD,YAAa,CACXS,cAAe,MACfvC,eAAgB,gBAChBC,WAAY,cAEdgU,SAAU,CACRne,KAAM,EACNkP,IAAK,GAEPkP,YAAa,CACX3R,cAAe,MACftC,WAAY,SACZyC,UAAW,EACXsC,IAAK,GAGPmP,UAAW,CACTlU,WAAY,YAGdmU,WAAY,CACV1R,UAAW,EACXD,WAAY,S,eC9FD,SAAS6R,IAAkB,MACxCC,EAAK,WACLC,EAAU,OACVC,EAAM,WACNC,EAAU,WACVC,EAAU,UACVC,EAAS,mBACTC,EAAkB,oBAClBC,EAAmB,OACnBtZ,IAEA,MAAM,MAAEqF,IAAUgC,EAAAA,EAAAA,WAEZkS,GACO,IAAXvZ,EAAkB,EAAIkZ,IAA0B7T,GAAS,IAAM,EAAI,GAErE,OACEvM,EAAAA,EAAAA,KAAC0gB,GAAAA,QAAQ,CACPniB,KAAM0hB,EAENU,aAAerZ,GAAS6Y,EAAO7Y,GAAMsZ,WACrCR,WAAYK,EACZJ,WAAYA,EACZC,UAAWA,EACXxe,sBAAuB,CACrBS,QAAS,GACTmO,IAAK,GACLmQ,cAAe,IAEjBC,mBACEL,EAAkB,EACd,CACE/P,IAAK,GACLhF,eAAgB,gBAChBQ,aAAc,SAEhB/G,EAEN+a,WAAYA,EAAG5Y,WACbtH,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAM,EAAG0K,aAAc,IAAKzM,SAAEygB,EAAW5Y,KAE1DiZ,mBAAoBA,EACpBC,oBAAqBA,GAvBhBC,EA0BX,CCtDA,MAqDA,GArD0BM,EAAGC,gBAC3B,MAAM,KAAExjB,GAAS8C,IAEX2gB,EAAY,GADDzjB,GAAMuW,UAAY,YAG5BhL,EAAQsM,IAAa3V,EAAAA,EAAAA,UAASuhB,IAC9B1hB,EAASI,IAAcD,EAAAA,EAAAA,WAAS,IAChCjC,EAAO+Q,IAAY9O,EAAAA,EAAAA,UAAS,IAqBnC,OACEqM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAAEwP,IAAK,GAAInO,QAAS,IAAK9C,SAAA,EACpCO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAaxM,SAAC,qCAE5BO,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,sBACNhZ,MAAOkL,EACP+J,aAAcuC,EACdzI,KAAK,aAGNnP,GAAQuC,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAO,CAAE4K,MAAO,OAAQrM,SAAEhC,IAAgB,MAEzDuC,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,YACLC,QAlCc1P,UAClB,GAAK4L,EAAO0O,OAAZ,CAKAjJ,EAAS,IACT7O,GAAW,GACX,U3BCGxC,eACL4L,GAEA,UACsBjL,EAAe,SAAnC,MACMkF,QAAiBP,EAAW,GAAED,eAAsB,CACxDgB,OAAQ,OAERC,KAAMnG,KAAKC,UAAU,CAAEwL,aAGzB,aAAa/F,EAASnE,MACxB,CAAE,MAAOpB,GAEP,YADAC,QAAQD,MAAM,yBAA0BA,EAE1C,CACF,C2BhBYyjB,CAAcnY,GACpBiY,GACF,CAAE,MAAOhX,GACPwE,EAAS,4BACT9Q,QAAQD,MAAMuM,EAChB,CAAC,QACCrK,GAAW,EACb,CAZA,MAFE6O,EAAS,qCAcX,EAmBIjP,QAASA,EACT4hB,SAAU5hB,EAAQE,SACnB,qBAGI,ECoKX,GAvMiB2hB,KACf,MAAM,KAAE5jB,GAAS8C,KACX,WACJgF,EAAU,cACVqE,EAAa,eACb/D,EAAc,MACd3H,EAAK,SACL6H,EAAQ,iBACRJ,GACEiF,KACG0W,EAAgBC,IAAqB5hB,EAAAA,EAAAA,UAAsB,OAC3Dmd,EAAc0E,IACnB7hB,EAAAA,EAAAA,aACK0b,EAASC,IAAc3b,EAAAA,EAAAA,WAAS,IAChC8F,EAAWC,IAAgB/F,EAAAA,EAAAA,WAAS,IAErC,MAAE6M,IAAUgC,EAAAA,EAAAA,WAEZ6R,GAAazC,EAAAA,EAAAA,UAAQ,IACrBpR,GAAS,IAAa,EACtBA,GAAS,IAAY,EAClB,GACN,CAACA,KAEJ3M,EAAAA,EAAAA,YAAU,KACMzC,WACZsI,GAAa,GACbkE,IACAlE,GAAa,EAAM,EAGrBxC,EAAO,GACN,IACH,MAAMue,EAAmBla,IACnB9J,GAAMkM,WACR4X,EAAkBha,IAElBga,EAAkB9jB,GAClB+jB,EAAgBja,IAElB+T,GAAW,EAAK,EAoDZoG,EAIAjkB,GAAMkM,WAAaxG,OAAOqG,OAAOjE,GAAcI,GAAoB,GAEzE,OACE1F,EAAAA,EAAAA,KAACQ,EAAM,CAAAf,UACLO,EAAAA,EAAAA,KAACsL,EAAS,CACR9F,UAAWA,EACX+F,SAAU3F,EACV6F,aAAa,gCACbD,OAAQA,IAAM7B,GAAc,GAAMlK,SAEjC+F,GACCuG,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACLM,KAAM,EACNkK,eAAgB,SAChBC,WAAY,SACZ6I,eAAgB,IAChB/U,SAAA,EAEFO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,iBACL/B,KAAM,GACNC,MAAM,OACN5K,MAAO,CAAEgL,aAAc,OAEzBlM,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAaxM,SAAC,oBAG9BsM,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAArN,SAAA,CACGjC,GAAMkM,WACL5D,GAAUiD,QACR/I,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAAvM,SAAEqG,EAASiD,UAEhB/I,EAAAA,EAAAA,KAAC+gB,GAAiB,CAACC,UAAWrX,IAE9B,OAEDnM,GAAMkM,YAAc5D,GAAUiD,UAC/BgD,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAArN,SAAA,EACEsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACL+M,cAAe,MACfvC,eAAgB,iBAChBjM,SAAA,EAEFO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAaxM,SACxBjC,GAAMkM,WAAa,cAAgB,kBAGpC1J,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAO,CAAEgL,aAAc,GAAIK,MAAO,KAAM9M,UAC5CO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,YACL1L,MAAO,CACLuL,aAAc,EACd+H,eAAgB,IAElB3H,QAASA,IAAMlD,GAAc,GAC7BwD,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,UAAU9B,MAAOA,EAAOD,KAAMA,IAC7CpM,SACH,mBAOLjC,GAAMkM,YAA2C,IAA7BhE,GAAkB6J,QAKtCvP,EAAAA,EAAAA,KAACggB,GAAc,CACbC,MAAOwB,EACPrB,WAAYA,EACZF,WA5HE5Y,IAClB,GAAK9J,GAAMkM,WA2BT,OACE1J,EAAAA,EAAAA,KAAC0hB,GAAAA,QAAS,CACRxgB,MAAOA,EAAGygB,aAAc,CAAC,CAAEngB,KAAM,EAAG8S,QAASqN,EAAU,GAAM,IAC7D9U,QAASA,IAAM2U,EAAgBla,GAAM7H,UAErCO,EAAAA,EAAAA,KAAC8X,GAAU,CACTta,KAAM8J,EACN/H,SAAS,EACTyY,aAAa,EACbD,UAAYzQ,EAAcL,SAC1BgR,YAAY,MArCG,CACrB,MAAMqH,EAAUrhB,EAAM6f,MACnBC,GAAMA,EAAE/W,KAAQM,EAAuCkV,UAE1D,IAAK8C,EAAS,OAAO,KAErB,MAEM1P,GAFatI,EAAuCG,WAAa,IAE/CL,QACtB,CAACC,EAAK0W,IAAM1W,GAAO0W,EAAExW,KAAOwW,EAAE5W,UAAY4W,EAAE5W,WAC5C,GAGF,OACEnH,EAAAA,EAAAA,KAAC0hB,GAAAA,QAAS,CACRxgB,MAAOA,EAAGygB,aAAc,CAAC,CAAEngB,KAAM,EAAG8S,QAASqN,EAAU,GAAM,IAC7D9U,QAASA,IAAM2U,EAAgBla,GAAM7H,UAErCO,EAAAA,EAAAA,KAACqf,GAAY,CACXrX,KAAOV,EAAmCsa,cAC1CtC,QAASA,EACTE,WAAW,EACXC,SAAU7P,KAIlB,CAeA,EAmFgBuQ,OAAS7Y,GACP9J,GAAMkM,WACDpC,EAAcN,GACdM,EAAuCkV,QAE9C6D,WAAY7a,EACZ8a,UAAWA,IAAM3W,GAAc,GAC/BzC,QAAS1J,GAAMkM,cAfjB1J,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAO,CAAEkN,UAAW,GAAIjC,UAAW,UAAW1M,SAAC,gDAqB3DO,EAAAA,EAAAA,KAAC4c,GAAa,CACZxB,QAASA,EACTO,UAhJakG,KACvBxG,GAAW,EAAM,EAgJP7d,KAAM6jB,EACN3X,WAAYlM,GAAMkM,WAClBmT,aAAcA,UAKf,EC1Fb,GA5GuBiF,KACrB,MAAM,QAAE3iB,GAAYmB,KAEbf,EAASI,KADEgS,EAAAA,EAAAA,kBACYjS,EAAAA,EAAAA,WAAS,KAChCqiB,EAAUC,IAAetiB,EAAAA,EAAAA,UAAwB,MAElDwS,EAAmBd,GAAAA,SAAaC,MAAM,CAC1C2C,YAAa5C,GAAAA,SACVK,IAAI,EAAG,qDACPwQ,QACC,QACA,kEAED1Q,SAAS,qBACZ0C,gBAAiB7C,GAAAA,SACd8C,MAAM,CAAC9C,GAAAA,IAAQ,gBAAiB,mCAChCG,SAAS,uBAwBd,OACEvR,EAAAA,EAAAA,KAACQ,EAAM,CAAAf,UACLO,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAOC,GAAO4P,UAAUtR,UAC5BsM,EAAAA,EAAAA,MAACsB,GAAAA,QAAI,CAACnM,MAAOC,GAAOmM,KAAK7N,SAAA,EACvBO,EAAAA,EAAAA,KAACqN,GAAAA,QAAKyI,MAAK,CACT5I,MAAM,0BACN6I,SAAS,uCAEX/V,EAAAA,EAAAA,KAACqN,GAAAA,QAAKE,QAAO,CAAA9N,UACXO,EAAAA,EAAAA,KAACgS,GAAAA,OAAM,CACLC,cAAe,CAAE+B,YAAa,GAAIC,gBAAiB,IACnD/B,iBAAkBA,EAClBC,SAjCShV,UAInBwC,GAAW,GACXqiB,EAAY,MACZ,IACE,MAAMvL,QAAoB3C,GAAW,CACnCtC,SAAUjI,EAAOyK,YACjBkO,mBAAmB,IAGrB/iB,EAAO+D,OAAAC,OAAC,CAAC,EAAIsT,UACPvZ,EAASuZ,EACjB,CAAE,MAAOhZ,GACPukB,EAAYvkB,EAAMiZ,SAAW,oCAC/B,CAAC,QACC/W,GAAW,EACb,GAeiCF,SAEtBA,EACC6S,eACAC,aACAC,eACAjJ,SACAkJ,SACAC,cAEA3G,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAAAxC,SAAA,EACHO,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,sBACN3D,iBAAe,EACfrV,MAAO0L,EAAOyK,YACdlB,aAAcR,EAAa,eAC3BS,OAAQR,EAAW,eACnBrR,MAAOC,GAAOuB,QAEfgQ,EAAQsB,aAAevB,EAAOuB,cAC7BhU,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAOC,GAAO1D,MAAMgC,SAAEgT,EAAOuB,eAGrChU,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,wBACN3D,iBAAe,EACfrV,MAAO0L,EAAO0K,gBACdnB,aAAcR,EAAa,mBAC3BS,OAAQR,EAAW,mBACnBrR,MAAOC,GAAOuB,QAEfgQ,EAAQuB,iBAAmBxB,EAAOwB,kBACjCjU,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAOC,GAAO1D,MAAMgC,SAAEgT,EAAOwB,kBAGpC8N,IAAY/hB,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAOC,GAAO1D,MAAMgC,SAAEsiB,KAEzC/hB,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,YACLC,QAASA,IAAM2F,IACftR,MAAOC,GAAO4a,OACdoF,SAAU5hB,EACVA,QAASA,EAAQE,SAClB,uCASN,EAMP0B,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2O,UAAW,CACTvP,KAAM,EACN+K,MAAO,OACPZ,WAAY,SACZpJ,QAAS,GACTmJ,eAAgB,UAElB4B,KAAM,CACJf,MAAO,OACPyB,SAAU,KAEZtL,MAAO,CACLwJ,aAAc,IAEhB6P,OAAQ,CACN3N,UAAW,IAEb3Q,MAAO,CACLqO,MAAO,MACPI,aAAc,MCPlB,GAzHiBiW,KACf,MAAM,MAAE5V,IAAUgC,EAAAA,EAAAA,WACZ6T,EAAY7V,GAAS,IAAM,EAAI,GAC/B,KAAE/O,GAAS8C,IACXma,GAAa9I,EAAAA,EAAAA,kBACb,MAAE1T,GAAU0M,KAEXnF,EAAWC,IAAgB/F,EAAAA,EAAAA,WAAS,IACpC2iB,EAAa3T,IAAkBhP,EAAAA,EAAAA,UAAiC,IAEjEuP,EAAiB9R,UACrBsI,GAAa,GACb,IACE,MAAMlH,QAAa8P,KACnBK,EAAenQ,SACTD,EAAgBC,EACxB,CAAE,MAAOd,GACPC,QAAQD,MAAM,+BAAgCA,EAChD,CAAC,QACCgI,GAAa,EACf,IAGF7F,EAAAA,EAAAA,YAAU,KAgBHpC,GAAMkM,YAfcvM,WACvBsI,GAAa,GAGb,MAAMoE,QAAcrL,IACpB,GAAIqL,EAGF,OAFA6E,EAAe7E,QACfpE,GAAa,GAKfwJ,GAAgB,EAGKqT,EAAkB,GACxC,CAAC9c,IAYJ,OACEuG,EAAAA,EAAAA,MAACvL,EAAM,CAAAf,SAAA,EACLsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOmP,OAAO7Q,SAAA,EACzBsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAAAxC,SAAA,EACHO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAa/K,MAAOC,GAAO+L,MAAMzN,SAAC,kBAGhDO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAa/K,MAAOC,GAAO4U,SAAStW,SAC/CjC,GAAMkM,WACH,+BACA,oCAINlM,GAAMkM,WAYN,IAXA1J,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,YACL1L,MAAOC,GAAO4a,OACdlP,QAASoC,EACT9B,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,UAAU9B,MAAOA,EAAOD,KAAMA,IAC7CpM,SACH,kBAQLO,EAAAA,EAAAA,KAAC6B,EAAAA,QAAU,CACTC,sBAAuB,CACrB+e,cAAe,GACfnQ,IAAK,GACLzC,cAAemU,EAAY,EAAI,MAAQ,SACvCxR,SAAUwR,EAAY,EAAI,OAAS,SACnC1W,eAAgB0W,EAAY,EAAI,SAAW,cAC3C3iB,SAEDxB,EAAMqK,KAAKhB,IACV,MAAMib,EAAiBF,EAAYvE,MAAMC,GAAMA,EAAEvB,UAAYlV,EAAKN,KAC5DuY,EAAagD,GAAgBjT,sBAC7BkT,EAAuBH,EAAYvE,MACtCC,GAAMA,EAAEvB,UAAYlV,EAAKN,KAEtByb,EAAeD,GAAsBH,aAAe,GAC1D,OACEriB,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAEHf,MAAO,CACLC,GAAOmM,KACP8U,EAAY,GAAK,CAAE7V,MAAOA,EAAQ,EAAI,GAAIwT,iBAAkB,IAC5DtgB,UAEFO,EAAAA,EAAAA,KAACqf,GAAY,CACXC,QAAShY,EACTuF,QAASA,IAlEG6V,EACxBpb,EACAmH,KAEAgM,EAAWC,SAAS,gBAAiB,CACnCP,OAAQ,iBACRwI,OAAQ,CAAErD,QAAShY,EAAMmH,WAAYA,IACrC,EA2DyBiU,CAAkBpb,EAAMmb,GACvClD,WAAYA,EACZC,WAAYhiB,GAAMkM,WAClB+V,cAAUta,KAXPmC,EAAKN,GAaL,QAIN,EAKP7F,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2O,UAAW,CACTxO,QAAS,GACTmJ,eAAgB,SAChBC,WAAY,UAGd2E,OAAQ,CACNpE,aAAc,GACd+B,cAAe,MACfvC,eAAgB,gBAChBwF,aAAc,UAEhBhE,MAAO,CACLiB,WAAY,QAEd4H,SAAU,CACR3H,UAAW,EACXtC,MAAO,WAETwB,KAAM,CACJpB,aAAc,IAEhBsB,YAAa,CACXS,cAAe,MACfvC,eAAgB,gBAChBC,WAAY,cAEdgU,SAAU,CACRne,KAAM,EACNkP,IAAK,GAEPkP,YAAa,CACX3R,cAAe,MACftC,WAAY,SACZyC,UAAW,EACXsC,IAAK,GAEPkS,aAAc,CACZ9W,MAAO,WAET+T,UAAW,CACTlU,WAAY,YAEdkL,MAAO,CACL/K,MAAO,WAETgU,WAAY,CACV1R,UAAW,EACXD,WAAY,OAEd4N,OAAQ,CACNtP,aAAc,EACd+H,eAAgB,MC3JL,SAASqO,IAAgB,QAAEzH,EAAO,QAAE0H,EAAO,MAAEC,IAC1D,MAAM,MAAE3jB,GAAUkB,KACZ,WAAEgF,EAAU,MAAErH,GAAU0M,KACvB0X,EAAa3T,IAAkBhP,EAAAA,EAAAA,UAA2B,KAC1D8F,EAAWC,IAAgB/F,EAAAA,EAAAA,WAAS,IACpCsjB,EAAcC,IAAmBvjB,EAAAA,EAAAA,UAAS,KAE1CwjB,EAAqBC,IAA0BzjB,EAAAA,EAAAA,UAEpD,KACI,OAAEe,IAAWC,EAAAA,EAAAA,aACb,MAAE6L,IAAUgC,EAAAA,EAAAA,WAEZ6U,EAAW7W,EAAQ,IACnB8W,EAAU9W,GAAS,IAAO,EAAIA,GAAS,IAAM,EAAI,EAEjDnO,EAAOH,EAAM6f,MAAMC,GAAMA,EAAE/W,KAAO+b,EAAMvG,UAGxCxX,EACJ5G,GAAM0G,UACHwD,KAAKtB,GAAO1B,EAAW0B,KACvBoI,OAAOkU,SACPlU,QAAQlI,IACP6b,EAAMQ,UAAWrc,EAAOqc,WAAaR,EAAMQ,YACxC,IAET3jB,EAAAA,EAAAA,YAAU,KACR,IAAKwb,EAAS,OAEd3V,GAAa,GACUtI,WACrB,IACE,MAAMoB,QpBpEPpB,eACLqmB,GAEA,MAAMxgB,QAAiBP,EACpB,GAAED,uCAA6CghB,IAChD,CACEhgB,OAAQ,QAIZ,IAAKR,EAASU,GAAI,CAChB,MAAMI,QAAkBd,EAASnE,OACjC,MAAM,IAAIyE,MAAMQ,EAAUC,QAAU,6BACtC,CAEA,aAAaf,EAASnE,MACxB,CoBoD2B4kB,CAAiBV,EAAM/b,IAE1C,GADA0H,EAAenQ,GACK,IAAhBA,EAAKgR,OAAc,CACrB,MAAMmU,EAAmC1e,EAAQsD,KAAKpB,IAAM,CAC1D4X,UAAW5X,EAAOF,GAClB2c,SAAU,MAEZR,EAAuBO,EACzB,CACF,CAAE,MAAOjmB,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,CAAC,QACCgI,GAAa,EACf,GAGFwJ,GACAkU,EAAuB,GAAG,GACzB,CAAC/H,EAAS2H,EAAM/b,MAEnBpH,EAAAA,EAAAA,YAAU,KACHwb,IACH1M,EAAe,IACfyU,EAAuB,IACzB,GACC,CAAC/H,IAEJ,MAAMwI,EAAmB5e,EAAQoK,QAAQlI,IACvC,MAAM2c,EAAQb,EAAac,cAC3B,OACE5c,EAAO6B,OAAO+a,cAAcC,SAASF,IACrC3c,EAAO6M,SAAS+P,cAAcC,SAASF,EAAM,IAI3CvR,EAAeA,CAACwM,EAAmB6E,KACvCR,GAAwB3E,GACJA,EAAKV,MAAMC,GAAMA,EAAEe,YAAcA,IAE1CN,EAAKlW,KAAKyV,GACfA,EAAEe,YAAcA,EAAS5b,OAAAC,OAAA,GAAQ4a,EAAE,CAAC4F,aAAa5F,IAG5C,IAAIS,EAAM,CAAEM,YAAW6E,cAEhC,EAuDJ,OACE3jB,EAAAA,EAAAA,KAACge,GAAAA,QAAM,CAAAve,UACLsM,EAAAA,EAAAA,MAACqS,GAAAA,QAAK,CACJhD,QAASA,EACTO,UAAWmH,EACXhhB,sBAAuB,CACrBX,GAAO6iB,eACP,CAAE7Q,gBAAiB1S,EAAOI,aAC1BpB,SAAA,EAEFsM,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,QAAQ,cAAc/K,MAAOC,GAAO8iB,YAAYxkB,SAAA,CAAC,gBACvCsjB,EAAMmB,QAGrB1e,GACCxF,EAAAA,EAAAA,KAAC4L,EAAAA,QAAiB,CAAC1K,MAAO,CAAEsT,eAAgB,OAE5CzI,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAArN,SAAA,EACEO,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,gBACNjK,KAAK,WACL/O,MAAOmlB,EACPlQ,aAAcmQ,EACd/hB,MAAO,CAAEgL,aAAc,IACvB2G,YAAY,uBAGd7S,EAAAA,EAAAA,KAAC6B,EAAAA,QAAU,CAACC,sBAAuBX,GAAOgjB,OAAO1kB,UAC/CO,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAO,CAACC,GAAOijB,KAAM,CAAE1T,IAAK,KAAMjR,SACrCmkB,EAAiBtb,KAAKpB,IACrB,MAAMmd,EAAsBhC,EAAYvE,MACrCC,GAAMA,EAAEe,YAAc5X,EAAOF,KAE1Bsd,EAAoBpB,EAAoBpF,MAC3CC,GAAMA,EAAEe,YAAc5X,EAAOF,KAE1Bud,EACJD,GAAmBX,UAAU/C,YAC7ByD,GAAqBV,UAAU/C,YAC/B,GAEI4D,EACJF,GAAmBG,aACnBJ,GAAqBI,aACrB,GAEF,OACEzkB,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAEHf,MAAO,CACLC,GAAOujB,YACP,CAAEnY,MAAU,IAAM8W,EAAU,EAAlB,MACV5jB,UAEFO,EAAAA,EAAAA,KAACqN,GAAAA,QAAI,CAACT,KAAK,WAAW1L,MAAOC,GAAOwjB,WAAWllB,UAC7CsM,EAAAA,EAAAA,MAACsB,GAAAA,QAAKE,QAAO,CAACrM,MAAO,CAAEwP,IAAK,EAAGnO,QAAS,GAAI9C,SAAA,EAC1CsM,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAC9K,MAAOC,GAAOyjB,aAAanlB,SAAA,CAC9ByH,EAAO6B,OAAO,IAAE7B,EAAO6M,aAG1B/T,EAAAA,EAAAA,KAAC2e,GAAAA,QAAYC,MAAK,CAChB7D,cAAgBld,GACdyU,EAAapL,EAAOF,GAAIxC,SAAS3G,IAEnCA,MAAO0mB,EAAc9kB,UAErBO,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAOC,GAAO0jB,cAAcplB,SAC/B,CACC,CACEoX,MAAOuM,EAAW,IAAM,WACxBvlB,MAAO,KAET,CACEgZ,MAAOuM,EAAW,IAAM,UACxBvlB,MAAO,KAET,CAAEgZ,MAAOuM,EAAW,IAAM,QAASvlB,MAAO,MAC1CyK,KAAKhB,IACLyE,EAAAA,EAAAA,MAAC2V,GAAAA,QAAS,CAERxgB,MAAOC,GAAO2jB,mBACdjY,QAASA,IACPyF,EACEpL,EAAOF,GACPxC,SAAS8C,EAAKzJ,QAEjB4B,SAAA,EAEDO,EAAAA,EAAAA,KAAC2e,GAAAA,QAAW,CACV9gB,MAAOyJ,EAAKzJ,MACZuF,OACEmhB,IAAkBjd,EAAKzJ,MACnB,UACA,YAENgP,QAASA,IACPyF,EACEpL,EAAOF,GACPxC,SAAS8C,EAAKzJ,WAIpBmC,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACH9K,MAAO,CACLkiB,EACIjiB,GAAO4jB,iBACP5jB,GAAO6jB,WACX7jB,GAAO8jB,gBACPxlB,SAED6H,EAAKuP,UA/BHvP,EAAKzJ,cAsClBmC,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,mBACNjK,KAAK,WACL/O,MAAO2mB,EACP1R,aAAeuF,IACb6M,OA7K1BpG,EA6KoD5X,EAAOF,GA5K3Dyd,EA4K+DpM,OA1K/D8K,GAAwB3E,GACJA,EAAKV,MAAMC,GAAMA,EAAEe,YAAcA,IAE1CN,EAAKlW,KAAKyV,GACfA,EAAEe,YAAcA,EAAS5b,OAAAC,OAAA,GAAQ4a,EAAE,CAAC0G,gBAAgB1G,IAG/C,IAAIS,EAAM,CAAEM,YAAW6E,SAAU,EAAGc,kBAXfS,IAChCpG,EACA2F,CA6KyB,UA3EFvd,EAAOF,GA+EP,YAQnB+E,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOgkB,UAAU1lB,SAAA,EAC5BO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CAACC,KAAK,OAAOC,QAASiW,EAAQrjB,SAAC,cAGtCO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CAACC,KAAK,YAAYC,QA/KX1P,UACpBsI,GAAa,GACb,IACE,GAAmC,IAA/Byd,EAAoB3T,OAEtB,YADAgH,GAAAA,QAAMC,MAAM,cAAe,0CAI7B,MAAM4O,EAAUpgB,EAAQsD,KAAKpB,IAC3B,MAAMme,EAAUnC,EAAoBpF,MACjCC,GAAMA,EAAEe,YAAc5X,EAAOF,KAGhC,MAAO,CACL8X,UAAW5X,EAAOF,GAClB2c,SAAU0B,GAAS1B,UAAY,EAC/Bc,YAAaY,GAASZ,aAAe,KACtC,UCrJFtnB,eACLqmB,EAEAnB,GAEA,MAAMrf,QAAiBP,EACpB,GAAED,wBAA8BghB,IACjC,CACEhgB,OAAQ,OAERC,KAAMnG,KAAKC,UAAU8kB,KAIzB,IAAKrf,EAASU,GAAI,CAChB,MAAMI,QAAkBd,EAASnE,OACjC,MAAM,IAAIyE,MAAMQ,EAAUC,QAAU,+BACtC,CACF,CDsIYuhB,CAAmBvC,EAAM/b,GAAIoe,GAEnC7O,GAAAA,QAAMC,MACJ,WACA,sDAEF2M,EAAuB,IACvBL,GACF,CAAE,MAAOrlB,GACPC,QAAQD,MAAM,gCAAiCA,GAC/C8Y,GAAAA,QAAMC,MAAM,QAAS/Y,EAAMiZ,SAAW,kCACxC,CAAC,QACCjR,GAAa,EACf,GA8IsDhG,SAC7C+F,EAAY,YAAc,mBAMvC,CAEA,MAAMrE,GAASgB,EAAAA,QAAWC,OAAO,CAC/B4hB,eAAgB,CACdxT,OAAQ,GACRjO,QAAS,GACTkK,aAAc,GACd8Y,UAAW,OAEbpB,OAAQ,CACNtW,gBAAiB,GAEnBoW,YAAa,CACX/X,aAAc,IAEhBkY,KAAM,CACJnW,cAAe,MACf2C,SAAU,OACVlF,eAAgB,iBAElBgZ,YAAa,CACXxY,aAAc,IAEhByY,WAAY,CACVlY,aAAc,IAEhBmY,aAAc,CACZzW,WAAY,MACZjC,aAAc,GAEhBsZ,SAAU,CACRvX,cAAe,MACfvC,eAAgB,gBAElByZ,UAAW,CACTlX,cAAe,MACfvC,eAAgB,WAChB0C,UAAW,GACXsC,IAAK,IAEPmU,cAAe,CACb5W,cAAe,MACfvC,eAAgB,eAChBC,WAAY,SACZiF,SAAU,UAGZ6U,eAAgB,CACdjkB,KAAM,EACNgP,OAAQ,EACRjO,QAAS,GAGXyiB,WAAY,CACV9W,SAAU,IAGZ6W,iBAAkB,CAChB7W,SAAU,IAEZ4W,mBAAoB,CAClBtjB,KAAM,EACNmK,WAAY,SACZD,eAAgB,SAChBuC,cAAe,SACfF,SAAU,GACVC,SAAU,IAGZiX,eAAgB,CACd9Y,UAAW,SACXuZ,WAAY,KEtXD,SAASC,IAAU,MAAE5C,EAAK,WAAEtU,IACzC,MAAOmX,EAAcC,IAAmBnmB,EAAAA,EAAAA,WAAS,IAC3C,KAAElC,GAAS8C,KACX,OAAEG,IAAWC,EAAAA,EAAAA,YAQnB,OACEqL,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAArN,SAAA,EACEO,EAAAA,EAAAA,KAACqN,GAAAA,QAAI,CAACnM,MAAO,CAACC,GAAOmM,MAAM7N,UACzBO,EAAAA,EAAAA,KAACW,EAAAA,eAAc,CACbF,OACGjD,GAAMkM,WAEH,CAAC,eAAgB,eAdC+E,IACX,IAAfA,EAAyB,CAAChO,EAAOI,WAAYJ,EAAO+X,iBACrC,IAAf/J,EAAyB,CAAChO,EAAOI,WAAYJ,EAAOiY,gBACrC,IAAfjK,EAAyB,CAAChO,EAAOI,WAAYJ,EAAOgY,iBACjD,CAAC,cAAe,eASXqN,CAAuBrX,GAAYkV,UAGzC7iB,MAAO,CAAEC,EAAG,GAAKC,EAAG,IACpBC,IAAK,CAAEF,EAAG,EAAGC,EAAG,GAChBE,MAAO,CAAEuL,aAAc,EAAGlK,QAAS,IAAK9C,UAExCsM,EAAAA,EAAAA,MAACsB,GAAAA,QAAKE,QAAO,CAAA9N,SAAA,EACXsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO4kB,UAAUtmB,SAAA,EAC5BO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAa/K,MAAOC,GAAOsM,UAAUhO,SAChDsjB,EAAMmB,QAGTlkB,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAOC,GAAO6kB,YAAYvmB,SAC7BjC,GAAMkM,YACLqC,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAArN,SAAA,EACEO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,iBACL/B,KAAM,GACNC,MAAM,UACN5K,MAAOC,GAAO8kB,cAEhBjmB,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,gBAAgB/B,KAAM,GAAIC,MAAM,gBAGjDC,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,QAAQ,aAAYxM,SAAA,CACvB,IACAgP,EAC2B,IAAxBA,EAAWkV,SACT,WACwB,IAAxBlV,EAAWkV,SACX,UACA,QACF,0BAMZ5X,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOye,YAAYngB,SAAA,EAC9BO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,mBACL/B,KAAM,GACNC,MAAM,UACN5K,MAAOC,GAAO8kB,cAEhBjmB,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,YAAY/K,MAAOC,GAAOwT,aAAalV,SAClDsjB,EAAM5X,MAAMyV,gBAIhBpjB,GAAMkM,aACL1J,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,WACLO,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,mBAAmB9B,MAAOA,EAAOD,KAAMA,IAExD3K,MAAOC,GAAO+kB,iBACdrZ,QAASA,IAAMgZ,GAAgB,GAAMpmB,SACtC,6BASTO,EAAAA,EAAAA,KAAC6iB,GAAe,CACdzH,QAASwK,EACT9C,QAASA,IAAM+C,GAAgB,GAC/B9C,MAAOA,MAIf,CAEA,MAAM5hB,GAASgB,EAAAA,QAAWC,OAAO,CAC/BkL,KAAM,CACJf,MAAO,OACPyB,SAAU,IACVvB,aAAc,EACd6G,UAAW,EACXtC,UAAW,SACX+O,iBAAkB,GAClB7T,aAAc,IAEhB6Z,UAAW,CACT9X,cAAe,MACfvC,eAAgB,gBAChBC,WAAY,UAEdqa,YAAa,CACX/X,cAAe,OAEjBgY,WAAY,CACVtJ,YAAa,GAEfiD,YAAa,CACX3R,cAAe,MACftC,WAAY,SACZyC,UAAW,GAEbX,UAAW,CACTU,WAAY,OACZjC,aAAc,GAEhByI,aAAc,CACZ7I,MAAO,WAEToa,iBAAkB,CAChB9X,UAAW,IAEb+X,cAAe,CACb3kB,KAAM,EACN2R,gBAAiB,kBACjBzH,eAAgB,SAChBC,WAAY,UAEdqY,eAAgB,CACdzX,MAAO,MACPhK,QAAS,GACT4Q,gBAAiB,QACjB1G,aAAc,GACd6G,UAAW,GAEb8S,iBAAkB,CAChBhY,UAAW,GACX4C,UAAW,YAEbqV,eAAgB,CACdva,MAAO,UACPqC,WAAY,UCrJD,SAASmY,KACtB,MAAM,MAAE/Z,IAAUgC,EAAAA,EAAAA,WACZgY,GAAQC,EAAAA,EAAAA,aACR,QAAElH,EAAO,WAAE7Q,GAAe8X,EAAM5D,OAChClI,GAAa9I,EAAAA,EAAAA,kBACb,MAAEvS,EAAK,KAAE5B,GAAS8C,KACjBkF,EAAWC,IAAgB/F,EAAAA,EAAAA,WAAS,IACpC+mB,EAAQC,IAAahnB,EAAAA,EAAAA,UAAsB,KAC3CjC,EAAO+Q,IAAY9O,EAAAA,EAAAA,WAAS,IAC5BinB,EAAmBC,IAAwBlnB,EAAAA,EAAAA,UAChD,OAEKmnB,EAA0BC,IAA+BpnB,EAAAA,EAAAA,UAE9D,OAEI,OAAEe,IAAWC,EAAAA,EAAAA,YAEbqmB,EAAY5pB,MAAO6pB,GAAgB,KACvC,IAAIC,EAAgB7nB,EACfA,IACH6nB,QAAsBnpB,EAAe,UAEvC,IACE,IAAKkpB,EAAe,CAClB,MAAMnd,QAAclL,EAAiB2gB,EAAQtY,IAC7C,GAAI6C,EAGF,OAFA6c,EAAU7c,QACVpE,GAAa,EAGjB,CAGA,MAAMlH,QC7CLpB,eAA6B+pB,GAClC,MAAMlkB,QAAiBP,EAAW,GAAED,kBAAwB0kB,WAAiB,CAC3E1jB,OAAQ,QAGV,IAAKR,EAASU,GAAI,CAChB,MAAMI,QAAkBd,EAASnE,OACjC,MAAM,IAAIyE,MAAMQ,EAAUC,QAAU,6BACtC,CAEA,aAAaf,EAASnE,MACxB,CDkCyBsoB,CAAc7H,EAAQtY,IACzC0f,EAAUnoB,SACJE,EAAW6gB,EAAQtY,GAAIzI,EAC/B,CAAE,MAAOd,GACPC,QAAQQ,IAAI,8BAA+BT,GAC3C+Q,GAAS,EACX,CAAC,QACC/I,GAAa,EACf,GAWI2hB,GAJiB5pB,GAAMkM,WACzB+c,EACAA,EAAOrX,QAAQ2T,IAAW,iBAAiBsE,KAAKtE,EAAMmB,SAEnB9U,QAAQ2T,IACnB,OAAtB4D,GAA8B5D,EAAMQ,WAAaoD,KAItB,OAA7BE,GACA9D,EAAMuE,eAAiBT,KAOrBzG,EAAa7T,GAAS,KAAO,EAAIA,GAAS,IAAM,EAAI,EACpDgb,EAAgBhb,EAAQ,KAC9B3M,EAAAA,EAAAA,YAAU,KACRmnB,GAAW,GACV,IAmBH,OACE/mB,EAAAA,EAAAA,KAACQ,EAAM,CAAAf,UACLsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO4P,UAAUtR,SAAA,EAC5BsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACLC,GAAOqmB,cACPD,GAAiB,CACftZ,cAAe,SACftC,WAAY,aACZ+E,IAAK,IAEPjR,SAAA,EAEFsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACLC,GAAO4kB,UACPwB,GAAiB,CAAEtZ,cAAe,MAAOtC,WAAY,WACrDlM,SAAA,EAEFO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLE,QArCS4a,KACnBhN,EAAWiN,QAAQ,EAqCT9a,KAAK,OACL+a,SAAO,EACPxa,KAAMA,EAAGtB,OAAMC,YACb9L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,aAAa/B,KAAM,GAAIC,MAAOrL,EAAOG,UAEtD2W,aAAcpW,GAAOymB,WACrBvQ,WAAY,CACVlW,GAAO0mB,eACPN,GAAiB,CAAEO,QAAS,SAC5BroB,UAEA8nB,GAAiB,YAErBvnB,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACHC,QAASsb,EAAgB,aAAe,cACxCrmB,MAAO,CACLC,GAAO4mB,aACP,CACErC,WAAY,EACZ9U,SAAU,OACV5C,SAAUuZ,EAAgB,MAAQ,SAGtCS,cAAe,EACfC,cAAc,OAAMxoB,SAEnB6f,EAAQvW,aAIbgD,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOye,YAAYngB,SAAA,EAC9BO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,YACL1L,MAAOC,GAAO+mB,UACdrb,QAASA,IAAMka,GAAU,GACzB5Z,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,UAAU9B,MAAOA,EAAOD,KAAMA,IAC7CpM,SACH,cAIAjC,GAAMkM,aACL1J,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLQ,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,qBACL9B,MAAOA,EACPD,KAAMA,IAGVe,KAAK,YACLC,QAtFSsb,OAuFT5Q,aAAcpW,GAAOinB,iBACrBlnB,MAAOC,GAAO+mB,UAAUzoB,SACzB,wBAON+F,GACCxF,EAAAA,EAAAA,KAAC4L,EAAAA,QAAiB,CAACC,KAAM,QAASC,MAAM,WACtCrO,GACFsO,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CAAEyK,WAAY,SAAUD,eAAgB,SAAUlK,KAAM,GAAI/B,SAAA,EAEnEO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACHC,QAAQ,aACR/K,MAAO,CACLgL,aAAc,GACdJ,MAAO,UACPK,UAAW,UACX1M,SACH,8CAGDO,EAAAA,EAAAA,KAACoM,EAAAA,QAAK,CACJC,OAAQC,EAAQ,MAChBpL,MAAO,CACLqL,MAAO,IACPC,OAAQ,IACRN,aAAc,GACdO,aAAc,GACd6H,QAAS,KAEX5H,WAAW,aAEb1M,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,YACLC,QAASA,KACPpH,GAAa,GACb+I,GAAS,GACTuY,GAAW,EAEb7lB,MAAO,CAAEkN,UAAW,GAAI3O,SACzB,mBAKHsM,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAArN,SAAA,EACEsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACL+M,cAAe,MACfyC,IAAK,EACLxE,aAAc,GACd0E,SAAU,QACVnR,SAAA,CAEAjC,GAAMkM,WAGW,WAAjB4V,EAAQjW,OACN0C,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAArN,SAAA,EACEO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KACwB,OAAtB+Z,EAA6B,YAAc,WAE7C9Z,QAASA,IAAM+Z,EAAqB,MAAMnnB,SAC3C,qBAGA,CAAC,EAAG,GAAG6I,KAAKtB,IACX+E,EAAAA,EAAAA,MAACY,EAAAA,QAAM,CAELC,KACE+Z,IAAsB3f,EAAK,YAAc,WAE3C6F,QAASA,IAAM+Z,EAAqB5f,GAAIvH,SAAA,CACzC,KACIuH,IANEA,SAdbhH,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAAvM,SAAC,OA0BRO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAC+B,OAA7Bia,EAAoC,YAAc,WAEpDha,QAASA,IAAMia,EAA4B,MAAMrnB,SAClD,sBAGA,CAAC,EAAG,GAAG6I,KAAK+f,IACXtc,EAAAA,EAAAA,MAACY,EAAAA,QAAM,CAELC,KACEia,IAA6BwB,EAAI,YAAc,WAEjDxb,QAASA,IAAMia,EAA4BuB,GAAG5oB,SAAA,CAC/C,KACI4oB,IANEA,SAWXroB,EAAAA,EAAAA,KAAC6B,EAAAA,QAAU,CACTC,sBAAuB,CACrB+e,cAAerjB,GAAMkM,WAAa,GAAK,GACvCoE,kBAAmB,EACnB4C,IAAK,IAEP4X,8BAA8B,EAAM7oB,SAER,IAA3B2nB,EAAgB7X,QACfxD,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAAAxC,SAAA,EACHO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,6BACL/B,KAAM,GACNC,MAAM,aAER9L,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACH9K,MAAO,CACL4K,MAAO,UACPsC,UAAW,GACXjC,UAAW,UACX1M,SACH,yCAjND8oB,EAAChqB,EAAmB8kB,KAClC,MAAMmF,EAAO,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAIlqB,EAAKgR,OAAQkZ,GAAKpF,EACpCmF,EAAKE,KAAKnqB,EAAKoqB,MAAMF,EAAGA,EAAIpF,IAE9B,OAAOmF,CAAI,EAiNCD,CAAQnB,EAAiBhH,GAAY9X,KAAI,CAACsgB,EAAKC,KAC7C9c,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAEHf,MAAO,CACL+M,cAAe,MACfvC,eAAgB0U,EAAa,EAAI,SAAW,aAC5ClU,aAAc,GACdwE,IAAK,IACLjR,SAAA,CAEDmpB,EAAItgB,KAAKhB,IACR,MAAMwhB,EAAwBra,EAAWqP,MACtCrP,GAAeA,EAAWzH,KAAOM,EAAKN,KAEzC,OACEhH,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAEHf,MAAO,CACLM,KAAM,EACNwM,SAAa,IAAMoS,EAAR,KACX3gB,UAEFO,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAAAxC,UACHO,EAAAA,EAAAA,KAAC2lB,GAAS,CACR5C,MAAOzb,EACPmH,WAAYqa,OATXxhB,EAAKN,GAYL,IAGV4hB,EAAIrZ,OAAS6Q,GACZxC,MAAMmL,KAAK,CAAExZ,OAAQ6Q,EAAawI,EAAIrZ,SAAUjH,KAC9C,CAAC0gB,EAAGC,KACFjpB,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAEHf,MAAO,CACLM,KAAM,EACNwM,SAAa,IAAMoS,EAAR,IACXjM,UAAW,MAJP,SAAQ8U,SAjCjBJ,cAmDzB,CAEA,MAAM1nB,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2O,UAAW,CACTvP,KAAM,EACNe,QAAS,IAEXqlB,WAAY,CACV3Z,cAAe,MACftC,WAAY,SACZud,YAAa,GAEfrB,eAAgB,CACd/b,MAAO,UACPoC,SAAU,GACV2F,WAAY,GAEd+L,YAAa,CACX3R,cAAe,MACftC,WAAY,SACZyC,UAAW,EACXsC,IAAK,GAGPqX,aAAc,CACZ5Z,WAAY,QAEdgb,gBAAiB,CACfrd,MAAO,UACPsC,UAAW,EACXlC,aAAc,GAGhBsb,cAAe,CACbvZ,cAAe,MACfvC,eAAgB,gBAChBC,WAAY,SACZ6I,eAAgB,GAElB0T,UAAW,CACTzb,aAAc,EACd+H,eAAgB,IAElB4T,iBAAkB,CAChBna,cAAe,OAEjB8X,UAAW,CACT9X,cAAe,MACftC,WAAY,SACZ+E,IAAK,KEvZH0Y,IAAQC,EAAAA,EAAAA,8BAEC,SAASC,KACtB,OACEvd,EAAAA,EAAAA,MAACqd,GAAMG,UAAS,CAACC,cAAe,CAAEC,aAAa,GAAQhqB,SAAA,EACrDO,EAAAA,EAAAA,KAACopB,GAAMM,OAAM,CACX9b,KAAK,WACL+b,UAAWxH,GACXxf,QAAS,CAAEuK,MAAO,gCAEpBlN,EAAAA,EAAAA,KAACopB,GAAMM,OAAM,CACX9b,KAAK,iBACL+b,UAAWC,GACXjnB,QAAS,CAAEuK,MAAO,uCAI1B,C,eCCA,MA4EM/L,GAASgB,EAAAA,QAAWC,OAAO,CAC/BkL,KAAM,CACJkH,eAAgB,EAChB/H,aAAc,IAEhBod,MAAO,CACLpd,aAAc,GACdqB,kBAAmB,GACnBD,gBAAiB,EACjB8O,YAAa,GACb3L,UAAW,UAEb8Y,UAAW,CACThe,MAAO,QACPoC,SAAU,GACVC,WAAY,QAEdya,IAAK,CACH3a,cAAe,MACfvC,eAAgB,gBAChB0C,UAAW,EACXlC,aAAc,IAEhB6d,OAAQ,CACNvoB,KAAM,GAERqV,MAAO,CACL/K,MAAO,OACPI,aAAc,GAEhB8d,gBAAiB,CACf5b,UAAW,GAEb6b,cAAe,CACbhc,cAAe,MACfvC,eAAgB,gBAChBQ,aAAc,GAEhBge,YAAa,CACX1d,OAAQ,EACRC,aAAc,EACd0G,gBAAiB,aAIrB,GAzHkDgX,EAChDvc,OACA0D,QACA3C,WACAF,aACA2b,cACAC,cACAC,SAAS,OACTC,sBAEA,MAAMvR,GAAQtY,EAAAA,EAAAA,YACR8pB,EAAWhT,GAAY5J,GAQvB6c,EANc,CAClBC,UAAW1R,EAAMvY,OAAOkqB,SACxBC,KAAM5R,EAAMvY,OAAO6X,UACnBuS,QAAS7R,EAAMvY,OAAOhD,OAGO6sB,GAE/B,OACEve,EAAAA,EAAAA,MAACsB,GAAAA,QAAI,CAACnM,MAAOC,GAAOmM,KAAMV,KAAK,WAAUnN,SAAA,EACvCO,EAAAA,EAAAA,KAACqN,GAAAA,QAAKyI,MAAK,CACT5I,MAAOU,EACPmI,SAAUzE,EACVwZ,aAAa,cACbC,gBAAgB,YAChBhU,KAAMA,KAAM/W,EAAAA,EAAAA,KAACkY,GAAAA,QAAW,CAACrM,KAAM,GAAIgL,MAAO2T,IAC1CQ,MAAOA,KACLhrB,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAO,CAACC,GAAO0oB,MAAO,CAAE1W,gBAAiBsX,IAAchrB,UAC3DO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAOC,GAAO2oB,UAAUrqB,SAAE6qB,SAKtCve,EAAAA,EAAAA,MAACsB,GAAAA,QAAKE,QAAO,CAAA9N,SAAA,EACXsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOynB,IAAInpB,SAAA,EACtBsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO4oB,OAAOtqB,SAAA,EACzBO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAa/K,MAAOC,GAAO0V,MAAMpX,SAAC,cAGhDsM,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,QAAQ,cAAaxM,SAAA,CAAEkP,EAAS,WAExC5C,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO4oB,OAAOtqB,SAAA,EACzBO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAa/K,MAAOC,GAAO0V,MAAMpX,SAAC,gBAGhDsM,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,QAAQ,cAAaxM,SAAA,CAAEgP,EAAW,cAI5C1C,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO6oB,gBAAgBvqB,SAAA,EAClCsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO8oB,cAAcxqB,SAAA,EAChCO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAa/K,MAAOC,GAAO0V,MAAMpX,SAAC,wBAGhDO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAYxM,SAAG,GAAE2qB,KAAeC,UAEhDrqB,EAAAA,EAAAA,KAACirB,GAAAA,QAAW,CACVC,SAAUd,EAAcC,EACxBve,MAAOkN,EAAMvY,OAAOG,QACpBM,MAAOC,GAAO+oB,qBAKpBlqB,EAAAA,EAAAA,KAACqN,GAAAA,QAAK8d,QAAO,CAAA1rB,UACXO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CAACE,QAAS0d,EAAiB3d,KAAK,kBAAiBnN,SAAC,qBAItD,ECxFL2rB,GAAW,CACf,CAAEpkB,GAAI,EAAG+B,OAAQ,wBACjB,CAAE/B,GAAI,EAAG+B,OAAQ,qBAGb/D,GAAU,CACd,CACEgC,GAAI,EACJ+B,OAAQ,qBACRuI,MAAO,uBACPrT,MAAO,CACL,CACEipB,OAAQ,EACRvY,SAAU,GACVF,WAAY,GACZ2b,YAAa,EACbC,YAAa,IAEf,CACEnD,OAAQ,EACRvY,SAAU,GACVF,WAAY,GACZ2b,YAAa,EACbC,YAAa,KAInB,CACErjB,GAAI,EACJ+B,OAAQ,kBACRuI,MAAO,uBACPrT,MAAO,CACL,CACEipB,OAAQ,EACRvY,SAAU,GACVF,WAAY,GACZ2b,YAAa,EACbC,YAAa,MAInB,CACErjB,GAAI,EACJ+B,OAAQ,qBACRuI,MAAO,uBACPrT,MAAO,CACL,CACEipB,OAAQ,EACRvY,SAAU,GACVF,WAAY,GACZ2b,YAAa,EACbC,YAAa,MAInB,CACErjB,GAAI,EACJ+B,OAAQ,qBACRuI,MAAO,sBACPrT,MAAO,CACL,CACEipB,OAAQ,EACRvY,SAAU,GACVF,WAAY,GACZ2b,YAAa,EACbC,YAAa,MAInB,CACErjB,GAAI,EACJ+B,OAAQ,sBACRuI,MAAO,sBACPrT,MAAO,CACL,CACEipB,OAAQ,EACRvY,SAAU,GACVF,WAAY,GACZ2b,YAAa,GACbC,YAAa,OA+GrB,GAzGgBgB,KACd,MAAOC,EAAaC,IAAkB7rB,EAAAA,EAAAA,UAAS,KACxC8rB,EAAiBC,IAAsB/rB,EAAAA,EAAAA,UAC5C0rB,GAAS,IAAIpkB,IAAM,OAEd0kB,EAAaC,IAAkBjsB,EAAAA,EAAAA,WAAS,IACzC,MAAE6M,IAAUgC,EAAAA,EAAAA,WAEZ6R,EAAa7T,EAAQ,KAAO,EAAI,EAEhCqf,EAAkB5mB,GACrBsD,KAAKpB,IACJ,MAAM2kB,EAAY3kB,EAAOjJ,MAAM6f,MAAMC,GAAMA,EAAEmJ,SAAWsE,IACxD,OAAKK,EACL3oB,OAAAC,OAAA,GACK+D,EACA2kB,GAHkB,IAGT,IAGfzc,OAAOkU,SACPlU,QAAQlI,GACPA,EAAO6B,OAAO+a,cAAcC,SAASuH,EAAYxH,iBAG/CgI,EACJV,GAAStN,MAAMzO,GAAMA,EAAErI,KAAOwkB,KAAkBziB,QAAU,QAE5D,OACE/I,EAAAA,EAAAA,KAACQ,EAAM,CAAAf,UACLsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO4P,UAAUtR,SAAA,EAE5BsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOmP,OAAO7Q,SAAA,EACzBO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAYxM,SAAC,2BAC3BO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAYxM,SAAC,iEAM7BsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO4qB,QAAQtsB,SAAA,EAC1BO,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRhG,KAAK,WACLiG,YAAY,mBACZhV,MAAOytB,EACPxY,aAAcyY,EACdrqB,MAAOC,GAAO6qB,eAGhBhsB,EAAAA,EAAAA,KAAC0b,GAAAA,QAAI,CACHN,QAASsQ,EACT/P,UAAWA,IAAMgQ,GAAe,GAChC/P,QACE5b,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CAACC,KAAK,WAAWC,QAASA,IAAM8e,GAAe,GAAMlsB,SACzDqsB,IAEJrsB,SAEA2rB,GAAS9iB,KAAKgX,IACbtf,EAAAA,EAAAA,KAAC0b,GAAAA,QAAKY,KAAI,CAERzP,QAASA,KACP4e,EAAmBnM,EAAQtY,IAC3B2kB,GAAe,EAAM,EAEvBze,MAAOoS,EAAQvW,QALVuW,EAAQtY,YAYrBhH,EAAAA,EAAAA,KAAC0gB,GAAAA,QAAQ,CACPniB,KAAMqtB,EACNjL,aAAerZ,GAASA,EAAKN,GAAG4Z,WAChC9e,sBAAuBX,GAAO8qB,cAC9B7L,WAAYA,EACZU,mBAAoBV,EAAa,EAAIjf,GAAO+qB,mBAAgB/mB,EAC5D+a,WAAYA,EAAG5Y,WACbtH,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAOC,GAAOujB,YAAYjlB,UAC9BO,EAAAA,EAAAA,KAACmqB,GAAa,CACZvc,KAAMtG,EAAKyB,OACXuI,MAAOhK,EAAKgK,MACZ7C,WAAYnH,EAAKmH,WACjB2b,YAAa9iB,EAAK8iB,YAClBzb,SAAUrH,EAAKqH,SACf0b,YAAa/iB,EAAK+iB,YAClBC,OAAO,YACPC,gBAAiBA,KAEf7sB,QAAQQ,IAAI,mBAAoBoJ,EAAKyB,OAAO,MAKpDwX,oBACEvgB,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAO,CAAEiL,UAAW,SAAUiC,UAAW,IAAK3O,SAAC,qCAMpD,EAMP0B,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2O,UAAW,CACTxO,QAAS,GACTf,KAAM,GAER8O,OAAQ,CACNpE,aAAc,IAEhB6f,QAAS,CACP9d,cAAe,MACftC,WAAY,SACZ+E,IAAK,GACLxE,aAAc,GACd0E,SAAU,QAEZob,YAAa,CACXxqB,KAAM,EACNuM,SAAU,KAEZke,cAAe,CACbpL,cAAe,IAEjBqL,cAAe,CACbxgB,eAAgB,gBAChBgF,IAAK,IAEPgU,YAAa,CACXljB,KAAM,EACNwM,SAAU,IACVD,SAAU,IACV7B,aAAc,M,eCxNlB,MAiCM/K,GAASgB,EAAAA,QAAWC,OAAO,CAC/BkL,KAAM,CACJpB,aAAc,EACdO,aAAc,GACd6G,UAAW,GAEb6Y,OAAQ,CACNje,SAAU,GACVpC,MAAO,OACPK,UAAW,UAEbigB,MAAO,CACLje,WAAY,OACZC,UAAW,EACXjC,UAAW,UAEb+e,SAAU,CACR9c,UAAW,EACX5B,OAAQ,EACRC,aAAc,GAEhB4f,UAAW,CACTje,UAAW,EACXtC,MAAO,OACPK,UAAW,YAIf,GA7DoBmgB,EAClBH,SACAC,QACAC,YACAE,WACAC,cAEA,MAAM,OAAE/rB,IAAWC,EAAAA,EAAAA,YAEnB,OACEqL,EAAAA,EAAAA,MAACsB,GAAAA,QAAI,CAACnM,MAAO,CAACC,GAAOmM,KAAMkf,EAAU,CAAEjgB,MAAO,KAAQ,CAAEyB,SAAU,MAAOvO,SAAA,EACvEO,EAAAA,EAAAA,KAACqN,GAAAA,QAAKyI,MAAK,CAAC5I,MAAOif,EAAQnW,WAAY7U,GAAOgrB,UAC9CpgB,EAAAA,EAAAA,MAACsB,GAAAA,QAAKE,QAAO,CAAA9N,SAAA,EACXO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,iBAAiB/K,MAAOC,GAAOirB,MAAM3sB,SAChD2sB,IAEU,MAAZG,IACCvsB,EAAAA,EAAAA,KAACirB,GAAAA,QAAW,CACVC,SAAUqB,EAAW,IACrBrrB,MAAOC,GAAO+pB,SACdpf,MAAOrL,EAAOG,UAGjByrB,IACCrsB,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAOC,GAAOkrB,UAAWpgB,QAAQ,YAAWxM,SAC/C4sB,SAIF,EC1CEI,GAAgD,CAC3DC,gBAAY,aACZ,sBAAoB,KACpB,qBAAmB,KACnBC,YAAa,eAGFC,GAAgD,CAC3DC,WAAY,gBACZC,GAAI,sBACJC,GAAI,qBACJC,YAAa,eCATC,GAAa,CACjB,QACA,gBACA,sBACA,qBACA,eAGa,SAASC,IAAa,UAAEC,IACrC,MAAM,OAAEnuB,EAAM,MAAEf,GAAU0M,KACpB,MAAE4B,IAAUgC,EAAAA,EAAAA,WACZ6e,EAAU7gB,EAAQ,KAEjB+e,EAAaC,IAAkB7rB,EAAAA,EAAAA,UAAS,KACxC2tB,EAAYC,IAAiB5tB,EAAAA,EAAAA,UAAS,UACtC6tB,EAAYC,IAAiB9tB,EAAAA,EAAAA,UAAwB,OAErDgsB,EAAaC,IAAkBjsB,EAAAA,EAAAA,WAAS,IACxC+tB,EAAiBC,IAAsBhuB,EAAAA,EAAAA,WAAS,GAqBvD,OAnBAE,EAAAA,EAAAA,YAAU,KACR,IAAKZ,EAEH,YADAmuB,EAAU,IAIZ,MAAMQ,EAAY3uB,EAAOoQ,QAAQhF,IAC/B,MAAMwjB,EACW,UAAfP,GAA0BjjB,EAAEf,OAASojB,GAAsBY,GACvDQ,EAAmBzjB,EAAE+hB,OACxBrI,cACAC,SAASuH,EAAYxH,eAClBgK,EAA8B,OAAfP,GAAuBnjB,EAAEoS,UAAY+Q,EAC1D,OAAOK,GAAgBC,GAAoBC,CAAY,IAGzDX,EAAUQ,EAAU,GACnB,CAACrC,EAAa+B,EAAYE,EAAYvuB,KAGvC+M,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACLC,GAAO4qB,QACP,CACE9d,cAAemf,EAAU,SAAW,MACpCzhB,WAAYyhB,EAAU,UAAY,SAClC1c,IAAK0c,EAAU,GAAK,KAEtB3tB,SAAA,EAEFO,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRhG,KAAK,WACLiG,YAAY,mBACZhV,MAAOytB,EACPxY,aAAcyY,EACdrqB,MAAO,CACLC,GAAO6qB,YACP,CACEje,SAAUqf,EAAU,OAAS,IAC7B5gB,OAAQ,KAGZwe,OACEhrB,EAAAA,EAAAA,KAAC4S,GAAAA,QAAUoE,KAAI,CACb7J,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,SAAS/B,KAAMA,EAAMC,MAAOA,SAMnDC,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACL+M,cAAe,MACfyC,IAAK0c,EAAU,EAAI,GACnB5rB,KAAM4rB,OAAUjoB,EAAY,EAC5BoH,MAAO6gB,EAAU,YAASjoB,EAC1BuG,eAAgB0hB,EAAU,aAAe,YACzC3tB,SAAA,EAEFO,EAAAA,EAAAA,KAAC0b,GAAAA,QAAI,CACHN,QAASsQ,EACT/P,UAAWA,IAAMgQ,GAAe,GAChC/P,QACE5b,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,WACLC,QAASA,IAAM8e,GAAe,GAC9Bxe,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,SAAS/B,KAAMA,EAAMC,MAAOA,IAE7C5K,MAAO,CAAE6M,SAAU,KAAMtO,SAExB4tB,IAEJ5tB,SAEAwtB,GAAW3kB,KAAKe,IACfrJ,EAAAA,EAAAA,KAAC0b,GAAAA,QAAKY,KAAI,CAERzP,QAASA,KACPygB,EAAcjkB,GACdsiB,GAAe,EAAM,EAEvBze,MAAO7D,GALFA,QAUX0C,EAAAA,EAAAA,MAAC2P,GAAAA,QAAI,CACHN,QAASqS,EACT9R,UAAWA,IAAM+R,GAAmB,GACpC9R,QACE5b,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,WACLC,QAASA,IAAM6gB,GAAmB,GAClCvgB,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,iBAAiB/B,KAAMA,EAAMC,MAAOA,IAErD5K,MAAO,CAAE6M,SAAU,KAAMtO,SAExB8tB,EACGtvB,EAAM6f,MAAMC,GAAMA,EAAE/W,KAAOumB,KAAaxkB,OACxC,oBAEPtJ,SAAA,EAEDO,EAAAA,EAAAA,KAAC0b,GAAAA,QAAKY,KAAI,CACRzP,QAASA,KACP2gB,EAAc,MACdE,GAAmB,EAAM,EAE3BxgB,MAAM,oBAEPjP,EAAMqK,KAAKlK,IACV4B,EAAAA,EAAAA,KAAC0b,GAAAA,QAAKY,KAAI,CAERzP,QAASA,KACP2gB,EAAcpvB,EAAK4I,IACnB0mB,GAAmB,EAAM,EAE3BxgB,MAAO9O,EAAK2K,QALP3K,EAAK4I,cAYxB,CAEA,MAAM7F,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2pB,QAAS,CACP7f,aAAc,IAEhB8f,YAAa,CACXxqB,KAAM,K,eCrJV,MAAMusB,GAA0C,CAC9CrB,gBAAY,YACZ,sBAAoB,UACpB,qBAAmB,UACnBC,YAAa,WAGTqB,GAA4C,CAChDC,WAAY,YACZC,UAAW,aAgHb,GA7G0CC,EACxC9kB,OACAihB,SACA6B,SACAiC,cACAC,mBACAC,uBACAC,iBAEA,MAAMvV,GAAQtY,EAAAA,EAAAA,YAEd,OACEqL,EAAAA,EAAAA,MAACsB,GAAAA,QAAI,CAACnM,MAAOC,GAAOmM,KAAMV,KAAK,WAAUnN,SAAA,EACvCO,EAAAA,EAAAA,KAACqN,GAAAA,QAAKE,QAAO,CAAA9N,UACXsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOmP,OAAO7Q,SAAA,EACzBO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,2BACL/B,KAAM,GACNC,MAAOkN,EAAMvY,OAAOmV,oBAEtB7J,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOqtB,gBAAgB/uB,SAAA,EAClCO,EAAAA,EAAAA,KAACyuB,GAAAA,QAAK,CACJvtB,MAAO,CACLC,GAAO0oB,MACP,CACE1W,gBACE4a,GAAgBnB,GAAsBvjB,KAAU,YAGtDwC,KAAM,GAAGpM,SAERmtB,GAAsBvjB,MAEzBrJ,EAAAA,EAAAA,KAACyuB,GAAAA,QAAK,CACJvtB,MAAO,CACLC,GAAO0oB,MACP,CAAE1W,gBAAiB6a,GAAkB1D,IAAW,YAElDze,KAAM,GAAGpM,SAER6qB,aAMTtqB,EAAAA,EAAAA,KAACqN,GAAAA,QAAKE,QAAO,CAAA9N,UACXsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAM,EAAGyM,cAAe,OAAQxO,SAAA,EAC7CsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAM,IAAM/B,SAAA,EACzBO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAc/K,MAAOC,GAAO+L,MAAMzN,SAC7C0sB,KAGHpgB,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOutB,cAAcjvB,SAAA,EAChCO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,iBACL/B,KAAM,GACNC,MAAOkN,EAAMvY,OAAOmV,oBAEtB5V,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,YAAY/K,MAAO,CAAE2S,WAAY,GAAIpU,SAChD8uB,QAGLvuB,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACHC,QAAQ,aACR+b,cAAe,EACfC,cAAc,OACd/mB,MAAO,CAAE4K,MAAOkN,EAAMvY,OAAOmV,kBAAmBnW,SAE/C2uB,KAGHriB,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOwtB,eAAelvB,SAAA,EACjCO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,mBACL/B,KAAM,GACNC,MAAOkN,EAAMvY,OAAOmV,oBAEtB7J,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,QAAQ,YAAY/K,MAAO,CAAE2S,WAAY,GAAIpU,SAAA,CAAC,UAC1C4uB,WAIbC,IACCviB,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACLM,KAAM,GACNkK,eAAgB,SAChBwF,aAAc,UACdzR,SAAA,EAEFO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAYxM,SAAC,WAC3BO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACHC,QAAQ,gBACR/K,MAAO,CACLiN,WAAY,MACZrC,MAAOwiB,EAAuB,EAAI,QAAU,OAC5C7uB,SAED6uB,cAMN,EAMLntB,GAASgB,EAAAA,QAAWC,OAAO,CAC/BkL,KAAM,CACJ9L,KAAM,EACNwM,SAAU,IACVwG,eAAgB,EAChB/H,aAAc,GAEhB6D,OAAQ,CACNrC,cAAe,MACfvC,eAAgB,gBAChBC,WAAY,UAEd6iB,gBAAiB,CACfvgB,cAAe,MACfyC,IAAK,GAEPmZ,MAAO,CACL/d,MAAO,OACP+H,WAAY,EACZ3F,SAAU,GACVJ,kBAAmB,EACnBD,gBAAiB,EACjBM,WAAY,OAEdjB,MAAO,CACLkB,UAAW,EACXD,WAAY,OAEdugB,cAAe,CACbzgB,cAAe,MACftC,WAAY,SACZyC,UAAW,EACXlC,aAAc,GAEhByiB,eAAgB,CACd1gB,cAAe,MACftC,WAAY,SACZyC,UAAW,GACXlC,aAAc,GAEhB0iB,sBAAuB,CACrB3gB,cAAe,MACfvC,eAAgB,mBC4BpB,GApMoBmjB,KAClB,MAAM,WACJ5kB,EAAU,OACVjL,EAAM,YACNiH,EAAW,cACXE,EAAa,MACblI,EAAK,MACLoI,EAAK,UACLkE,GACEI,KAEGmkB,EAAiBC,IAAsBrvB,EAAAA,EAAAA,UAAsB,KAEpEE,EAAAA,EAAAA,YAAU,KACR2K,GAAW,GACV,IAEH,MAAM,MAAEgC,IAAUgC,EAAAA,EAAAA,YACZ,OAAE9N,IAAWC,EAAAA,EAAAA,YAEbsuB,EAAgBziB,GAAS,IACzB6T,EAAa4O,EAAgB,EAAI,EAGjCC,EAAWH,EAAgBxmB,KAAK8B,GAAMA,EAAEpD,KAGxCkoB,EAAiBhsB,OAAOqG,OAAOlD,GAClC0J,OACAX,QAAQ+f,GAAMF,EAASlL,SAASoL,EAAEtqB,YAG/BuqB,EAAmBN,EAAgB1f,QAAQhF,GACtB8kB,EAAeG,MAAMF,GAC3BA,EAAEtqB,UAAYuF,EAAEpD,IAAMmoB,EAAEG,cAMvCjF,EAAcyE,EAAgBvf,OAC9B6a,EAAcgF,EAAiB7f,OAC/BgQ,EAAa8K,EAAc,EAAKD,EAAcC,EAAe,IAAM,EAGnEkF,EAAeL,EAAe9f,QAAQ+f,GAAwB,kBAAXA,EAAEnf,OACrDrB,EACJ4gB,EAAahgB,OAAS,EAClBY,YAEIof,EAAanoB,QAAO,CAACC,EAAK8nB,IAAM9nB,EAAM8nB,EAAEnf,MAAM,GAC9Cuf,EAAahgB,QACba,QAAQ,IAEZ,EAGAof,EAAQ,IAAIzkB,KAGZ0kB,EAAeX,EAAgB1f,QAClChF,GAAM,IAAIW,KAAKX,EAAEC,cAAgBmlB,IAQpC,OACExvB,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAOC,GAAO4P,UAAUtR,UAC5BsM,EAAAA,EAAAA,MAACT,EAAS,CACR9F,UAAWW,EACXoF,SAAUtF,EACVwF,aAAa,yBACbD,OAAQA,IAAMvB,GAAW,GAAMxK,SAAA,EAE/BsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAAE+M,cAAe,MAAOyC,IAAK,IAAKjR,SAAA,EAC7CO,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAMwtB,EAAgB,GAAM,GAAIvvB,UAC7CO,EAAAA,EAAAA,KAACktB,GAAY,CAACC,UAAW4B,OAE3B/uB,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CACHf,MAAO,CACLM,KAAM,GACNgL,OAAQwiB,EAAgB,GAAK,GAE7BtjB,eAAgB,aAChBwF,aAAc,YACdzR,UAEFO,EAAAA,EAAAA,KAACuQ,GAAAA,QAAU,CACTpD,KAAMA,EAAGtB,OAAMC,YACb9L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,UAAU/B,KAAMA,EAAMC,MAAOA,IAE9Cc,KAAK,YACLC,QAASA,KA9BnBtC,GAAU,QACVN,GAAW,IA8BD/I,MAAO,CAAEqB,QAAS,EAAGiO,OAAQ,WAKnCzE,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACLC,GAAOuuB,YACPV,EACI,CAAE/gB,cAAe,MAAOyC,IAAK,IAC7B,CAAEzC,cAAe,mBACrBxO,SAAA,EAEFO,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAM,GAAI/B,SACK,IAA3BqvB,EAAgBvf,QACfxD,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOwuB,MAAMlwB,SAAA,EACxBO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,wBACL/B,KAAM,GACNC,MAAOrL,EAAOmvB,kBACd1uB,MAAO,CAAEgL,aAAc,OAEzBlM,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAaxM,SAAC,8BAC5BO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,YAAY/K,MAAO,CAAE4K,MAAOrL,EAAO2W,SAAU3X,SAAC,mDAK9DO,EAAAA,EAAAA,KAAC0gB,GAAAA,QAAQ,CACPniB,KAAMuwB,EACN1O,WAAYA,EAEZO,aAAerZ,GACbA,EAAKN,IAAI4Z,YAAe,SAAQtZ,EAAK6kB,SAEvCrL,mBAAoBV,EAAa,EAAIjf,GAAOynB,SAAMzjB,EAClD+a,WAAYA,EAAG5Y,WACb,MAAMuoB,EAAYxpB,EAAMiB,EAAKkV,UAAUsB,MACpC9N,GAAmBA,EAAKnL,WAAayC,EAAKN,KAG7C,OACEhH,EAAAA,EAAAA,KAACmuB,GAAQ,CACPC,YAAa9mB,EAAK8mB,aAAe,qBACjCC,iBAAkB/mB,EAAK+C,cAAgB,gBACvChB,KAAM/B,EAAK+B,MAAQ,WACnB8iB,OAAQ7kB,EAAK6kB,OAEb7B,OAAQuF,GAAWP,UAAY,aAAe,YAC9ChB,qBAAsBuB,GAAW7f,WAAQ7K,EACzCopB,WACEtwB,EAAM6f,MAAMC,GAAMA,EAAE/W,KAAOM,EAAKkV,WAAUzT,QAAU,KAJjDzB,EAAKN,GAMV,EAGNlF,sBAAuB,CAAE+e,cAAe,KAzBnCT,MA+BXrU,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACLC,GAAOsP,iBACPue,GAAiB,CACfxtB,KAAM,GACNoP,SAAU,SACVjF,WAAY,SACZsC,cAAe,WAEjBxO,SAAA,EAEFO,EAAAA,EAAAA,KAACssB,GAAW,CACVH,OAAO,aACPC,MAAQ,GAAEhC,KAAeC,IACzBkC,SAAUhN,EACViN,QAASwC,KAGXhvB,EAAAA,EAAAA,KAACssB,GAAW,CACVH,OAAO,WACPC,MAAQ,GAAEzd,IACV0d,UAAW2C,EAAgB,+BAAiC,GAC5DxC,QAASwC,KAGXhvB,EAAAA,EAAAA,KAACssB,GAAW,CACVH,OAAO,cACPC,MAAQ,GAAEqD,EAAalgB,OAAOqR,aAC9ByL,UAAW2C,EAAgB,wBAA0B,GACrDxC,QAASwC,cAKZ,EAML7tB,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2O,UAAW,CACTvP,KAAM,EACNwM,SAAU,IACVgD,UAAW,SACXzE,MAAO,OACPuB,kBAAmB,GAErBgiB,OAAQ,CACN7hB,cAAe,MACf2C,SAAU,OACVF,IAAK,GACLxE,aAAc,GAEhBwjB,YAAa,CACXluB,KAAM,GAERiP,iBAAkB,CAChBxC,cAAe,MACf2C,SAAU,OACVlF,eAAgB,eAChBgF,IAAK,GACLxE,aAAc,IAEhByjB,MAAO,CACLhkB,WAAY,SACZD,eAAgB,SAChBnJ,QAAS,IAEXqmB,IAAK,CACHld,eAAgB,aAChBgF,IAAK,GACLE,SAAU,U,eCzNd,MA2JA,GA3JkBmf,EAChB5D,SACA9iB,OACA2mB,aACA5B,cACA6B,eACAC,kBACA3B,aACA4B,WACAC,aACAC,kBAEA,MAAMrX,GAAQtY,EAAAA,EAAAA,YACR6rB,EAAW2D,EAAkB,EAAIF,EAAaE,EAAkB,EAStE,OACElwB,EAAAA,EAAAA,KAACqN,GAAAA,QAAI,CAACT,KAAK,WAAW1L,MAAOC,GAAOmM,KAAK7N,UACvCsM,EAAAA,EAAAA,MAACsB,GAAAA,QAAKE,QAAO,CACXrM,MAAO,CACL2f,cAAe,EACfrf,KAAM,EACNkK,eAAgB,iBAChBjM,SAAA,EAGFO,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAOC,GAAOmP,OAAO7Q,UACzBsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAM,GAAI/B,SAAA,EACvBsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOmvB,SAAS7wB,SAAA,EAC3BO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAc/K,MAAOC,GAAO+L,MAAMzN,SAC7C0sB,KAEHnsB,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,eACL/B,KAAM,GACNC,MAAOkN,EAAMvY,OAAOG,cAGxBmL,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOovB,UAAU9wB,SAAA,EAC5BO,EAAAA,EAAAA,KAACyuB,GAAAA,QAAK,CAACvtB,MAAOC,GAAOqvB,UAAU/wB,SA9BD,CACxCqtB,GAAI,sBACJC,GAAI,qBACJF,WAAY,gBACZG,YAAa,eA0BwC3jB,MAC3CrJ,EAAAA,EAAAA,KAACyuB,GAAAA,QAAK,CACJvtB,MAAOC,GAAOsvB,cAAchxB,SAC3B,GAAEuwB,KAAcE,0BAMzBlwB,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,YAAY/K,MAAOC,GAAOitB,YAAY3uB,SACjD2uB,KAKHriB,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOuvB,SAASjxB,SAAA,EAC3BO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,eACL/B,KAAM,GACNC,MAAOkN,EAAMvY,OAAO2W,WAEtBpX,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAOC,GAAOwvB,SAASlxB,SAAE8uB,QAEjCxiB,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOorB,SAAS9sB,SAAA,EAC3BsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOyvB,YAAYnxB,SAAA,EAC9BO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAOC,GAAO0V,MAAMpX,SAAC,yBAC3BsM,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAC9K,MAAOC,GAAO0V,MAAMpX,SAAA,CAAE+P,KAAKC,MAAiB,IAAX8c,GAAgB,WAEzDvsB,EAAAA,EAAAA,KAACirB,GAAAA,QAAW,CACVC,SAAUqB,EACVzgB,MAAOkN,EAAMvY,OAAOG,QACpBM,MAAOC,GAAO+oB,kBAKlBne,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO0vB,UAAUpxB,SAAA,EAC5BsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOuvB,SAASjxB,SAAA,EAC3BO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,mBACL/B,KAAM,GACNC,MAAOkN,EAAMvY,OAAO2W,WAEtBrL,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAC9K,MAAOC,GAAOwvB,SAASlxB,SAAA,CAAC,UAAQwwB,SAExClkB,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOuvB,SAASjxB,SAAA,EAC3BO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,iBACL/B,KAAM,GACNC,MAAOkN,EAAMvY,OAAO2W,WAEtBrL,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAC9K,MAAOC,GAAOwvB,SAASlxB,SAAA,CAAEywB,EAAgB,yBAKnDnkB,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOgkB,UAAU1lB,SAAA,EAC5BO,EAAAA,EAAAA,KAACuQ,GAAAA,QAAU,CACT3D,KAAK,kBACLkkB,eAAe,UACfC,UAAU,UACV7vB,MAAO,CAAE6e,iBAAkB,EAAGtT,aAAc,GAC5CI,QAASsjB,EACThjB,KAAMA,EAAGtB,OAAMC,YACb9L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,iBAAiB/B,KAAMA,EAAMC,MAAOA,IAErDklB,mBAAmB,kBAGrBhxB,EAAAA,EAAAA,KAACuQ,GAAAA,QAAU,CACT3D,KAAK,kBACLkkB,eAAe,UACfC,UAAU,UACV7vB,MAAO,CAAE6e,iBAAkB,EAAGtT,aAAc,GAC5CI,QAASujB,EACTjjB,KAAMA,EAAGtB,OAAMC,YACb9L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,gBAAgB/B,KAAMA,EAAMC,MAAOA,IAEpDklB,mBAAmB,oBAGrBhxB,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,YACL1L,MAAO,CACLuL,aAAc,EACdoH,WAAY,EACZrH,OAAQ,GACRd,eAAgB,SAChBmC,gBAAiB,GAEnB0J,aAAc,CACZtJ,cAAe,cACfJ,gBAAiB,EACjBrB,OAAQ,IAEV6K,WAAY,CAAEnJ,SAAU,IACxBrB,QAASwjB,EACTljB,KAAMA,EAAGtB,OAAMC,YACb9L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,iBAAiB/B,KAAMA,EAAMC,MAAOA,IAErDklB,mBAAmB,kBAAiBvxB,SACrC,qBAKA,EAML0B,GAASgB,EAAAA,QAAWC,OAAO,CAC/BkL,KAAM,CACJU,SAAU,IACVvB,aAAc,GACdP,aAAc,GACd3J,QAAS,GAEX+N,OAAQ,CACNpE,aAAc,GAEhBokB,SAAU,CACRriB,cAAe,MACftC,WAAY,SACZ+E,IAAK,EACLxE,aAAc,GAEhBgB,MAAO,CACLiB,WAAY,QAEdoiB,UAAW,CACTtiB,cAAe,MACfyC,IAAK,EACLxE,aAAc,GAEhBskB,UAAW,CACTrd,gBAAiB,UACjBrH,MAAO,WAET2kB,cAAe,CACbtd,gBAAiB,UACjBrH,MAAO,WAETsiB,YAAa,CACXliB,aAAc,IAEhBqgB,SAAU,CACRrgB,aAAc,IAEhB0kB,YAAa,CACX3iB,cAAe,MACfvC,eAAgB,gBAChBQ,aAAc,IAEhBge,YAAa,CACX1d,OAAQ,EACRC,aAAc,GAEhBokB,UAAW,CACT5iB,cAAe,MACfyC,IAAK,GACLxE,aAAc,GACd0E,SAAU,QAEZ8f,SAAU,CACRziB,cAAe,MACftC,WAAY,SACZ+E,IAAK,GAEPigB,SAAU,CACRziB,SAAU,IAEZ2I,MAAO,CACL3I,SAAU,IAEZiX,UAAW,CACTlX,cAAe,MACfvC,eAAgB,gBAChB0C,UAAW,EACXzC,WAAY,Y,cCjPhB,MAqDA,GArD4CslB,EAC1Cpa,QAAQ,QACRhZ,QACAqzB,WACAre,cAAc,iBAEd,MAAOpV,EAAO+Q,IAAY9O,EAAAA,EAAAA,WAAS,GAyBnC,OACEqM,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAArN,SAAA,EACEO,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAOA,EACPhE,YAAaA,EACbhV,MAAOA,EACPiV,aAZgBuF,IACpB,MAAM8Y,EAba9Y,KACnB,MAAM+Y,EAAU/Y,EAAKgZ,QAAQ,MAAO,IAEpC,OAAID,EAAQ7hB,QAAU,EAAU6hB,EAC5BA,EAAQ7hB,QAAU,EACZ,GAAE6hB,EAAQzI,MAAM,EAAG,MAAMyI,EAAQzI,MAAM,KACzC,GAAEyI,EAAQzI,MAAM,EAAG,MAAMyI,EAAQzI,MAAM,EAAG,MAAMyI,EAAQzI,MAC9D,EACA,IACC,EAIe2I,CAAYjZ,GAlBdA,KAEhB7J,IAAoB,KAAT6J,GADG,wBACkBgP,KAAKhP,IAAO,EAiB5CkZ,CAASJ,GACTD,EAASC,EAAU,EAUf1zB,MAAOA,EACPmP,KAAK,WACLoG,aAAa,UACb9R,MAAO,CAAEsT,eAAgB,GACzBgd,UAAW,KAEZ/zB,IACCuC,EAAAA,EAAAA,KAACyc,GAAAA,QAAU,CAACC,KAAK,QAAQtB,QAAS3d,EAAMgC,SAAC,0CAI1C,EChCD0B,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2O,UAAW,CACTlD,gBAAiB,EACjBC,kBAAmB,GAErB8a,IAAK,CACH3a,cAAe,MACftC,WAAY,SACZ+E,IAAK,IAEPmG,MAAO,CACL3I,SAAU,MAId,GA/BqBujB,EAAG5a,QAAOzT,SAAQyJ,cACrC,MAAM,OAAEpM,IAAWC,EAAAA,EAAAA,YACnB,OACEV,EAAAA,EAAAA,KAAC0xB,GAAAA,QAAe,CAAC7kB,QAASA,EAAS3L,MAAOC,GAAO4P,UAAUtR,UACzDsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOynB,IAAInpB,SAAA,EACtBO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAiB,YAAXxK,EAAuB,mBAAqB,iBAClDyI,KAAM,GACNC,MAAkB,YAAX1I,EAAuB3C,EAAOG,QAAUH,EAAO6X,aAExDtY,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAOC,GAAO0V,MAAMpX,SAAEoX,QAEd,ECahB8a,GAAQ,CACZ,gBACA,sBACA,qBACA,eAiYF,GAvXwBC,EACtBxW,UACAO,YACAkW,YACAC,mBAEA,MAAM,MAAE7zB,EAAK,WAAEqH,GAAeqF,KACxB,MAAE4B,IAAUgC,EAAAA,EAAAA,YACZ,OAAE9N,IAAWC,EAAAA,EAAAA,aACb,KAAElD,GAAS8C,KACV6rB,EAAQ4F,IAAaryB,EAAAA,EAAAA,UAAS,KAC9B0uB,EAAa4D,IAAkBtyB,EAAAA,EAAAA,UAAS,KACxChB,EAAWuzB,IAAgBvyB,EAAAA,EAAAA,UAAwB,OACnDgsB,EAAaC,IAAkBjsB,EAAAA,EAAAA,WAAS,IAExC2J,EAAM8T,IAAWzd,EAAAA,EAAAA,UAAwB,OACzCwyB,EAAiBC,IAAsBzyB,EAAAA,EAAAA,WAAS,IAEhD0yB,EAAaC,IAAkB3yB,EAAAA,EAAAA,aAE/B4yB,EAAcC,IAAmB7yB,EAAAA,EAAAA,WAAS,IAC1C8yB,EAAsBC,IAA2B/yB,EAAAA,EAAAA,UACtD,KAEKgzB,EAAaC,IAAkBjzB,EAAAA,EAAAA,WAAS,GAEzCkzB,GAAmBjV,EAAAA,EAAAA,UAAQ,KAC/B,MAAMvf,EAAOH,EAAM6f,MAAMC,GAAMA,EAAE/W,KAAOtI,IACxC,OAAKN,EACEA,EAAK0G,UAAUwD,KAAKtB,GAAO1B,EAAW0B,KAAKoI,OAAOkU,SADvC,EAC+C,GAChE,CAAC5kB,EAAWT,EAAOqH,IAShButB,EAAQA,KACZd,EAAU,IACVC,EAAe,IACf7U,EAAQ,MACR8U,EAAa,MACbI,OAAeltB,GACfotB,GAAgB,GAChBE,EAAwB,GAAG,EAGvBK,EAASA,KACbD,IACAlX,GAAW,GAGb/b,EAAAA,EAAAA,YAAU,KAwCJwb,GAvCgBje,WAClB,GAAI20B,EAAc,CAChBC,EAAUD,EAAa3F,QACvB6F,EAAeF,EAAa1D,aAC5BjR,EACuB,MAArB2U,EAAazoB,KACTujB,GAAsBkF,EAAazoB,MACnC,MAEN4oB,EAAaH,EAAatV,SAC1B6V,EACE3tB,EAAiBotB,EAAaznB,eAEhC,IACE,MAEM0oB,SAFc9tB,EAAS6sB,EAAa9qB,KAEjBsB,KAAK0H,GAAmBA,EAAK8O,YACtD2T,EAAwBM,GAExB,MAAM30B,EAAOH,EAAM6f,MAAMC,GAAMA,EAAE/W,KAAO8qB,EAAatV,UACrD,GAAIpe,EAAM,CACR,MAAM40B,EAAW50B,EAAK0G,WAAa,GAEnCytB,EACEQ,EAAWxjB,OAAS,GAClByjB,EAASzjB,SAAWwjB,EAAWxjB,QAC/ByjB,EAAS9T,OAAOlY,GAAO+rB,EAAWhP,SAAS/c,KAEjD,MACEurB,GAAgB,EAEpB,CAAE,MAAO90B,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,CACF,MACEo1B,GACF,EAIAI,EACF,GACC,CAAC7X,EAAS0W,IA4Bb,OACE9xB,EAAAA,EAAAA,KAACge,GAAAA,QAAM,CAAAve,UACLO,EAAAA,EAAAA,KAACoe,GAAAA,QAAK,CACJhD,QAASA,EACTO,UAAWmX,EACXhxB,sBAAuB,CACrBqR,gBAAiB1S,EAAOoV,QACxBtT,QAAS,GACTiO,OAAQ,GACR/D,aAAc,GACdF,MAAO,MACPyB,SAAU,IACVuX,UAAW,MACXvU,UAAW,UACXvR,UAEFO,EAAAA,EAAAA,KAACuB,EAAAA,QAAoB,CACnBE,cAA8C0D,EAC9CjE,MAAO,CAAEM,KAAM,GAAI/B,UAEnBsM,EAAAA,EAAAA,MAAClK,EAAAA,QAAU,CACTC,sBAAuB,CAAE+e,cAAe,IACxC7e,0BAA0B,UAC1BsmB,8BAA8B,EAAM7oB,SAAA,EAGpCsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACL+M,cAAe,MACfvC,eAAgB,gBAChBC,WAAY,SACZO,aAAc,IACdzM,SAAA,EAEFO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAYxM,SACvBqyB,EAAe,eAAiB,iBAGnC9xB,EAAAA,EAAAA,KAAC0b,GAAAA,QAAI,CACHN,QAASsQ,EACT/P,UAAWA,IAAMgQ,GAAe,GAChC/P,QACE5b,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLgb,SAAO,EACP/a,KAAK,OACLO,KAAMA,EAAGtB,OAAMC,YACb9L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,eAAe/B,KAAMA,EAAMC,MAAOA,IAEnDe,QAASA,IAAM8e,GAAe,GAC9BpU,aAAc,CAAEtJ,cAAe,eAAgBxO,SAE9CxB,EAAM6f,MAAMzO,GAAMA,EAAErI,KAAOtI,KAAYqK,QACtC,qBAELtJ,SAEAxB,EAAMqK,KAAK+G,IACVrP,EAAAA,EAAAA,KAAC0b,GAAAA,QAAKY,KAAI,CAERzP,QAASA,KACPolB,EAAa5iB,EAAErI,IACf2kB,GAAe,GACX2G,GACFG,EAAwBpjB,EAAEvK,WAAa,GACzC,EAEFoI,MAAOmC,EAAEtG,QARJsG,EAAErI,YAefhH,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,YACNjK,KAAK,WACL/O,MAAOsuB,EACPrZ,aAAcif,EACd7wB,MAAO,CAAEgL,aAAc,IACvBgnB,cAAc,UAGhBlzB,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACRiE,MAAM,iBACNjK,KAAK,WACL/O,MAAOuwB,EACPtb,aAAckf,EACdmB,WAAS,EACTnL,cAAe,EACf9mB,MAAO,CAAEgL,aAAc,OAGzBlM,EAAAA,EAAAA,KAAC0b,GAAAA,QAAI,CACHN,QAAS8W,EACTvW,UAAWA,IAAMwW,GAAmB,GACpCvlB,KAAK,WACLgP,QACE5b,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,WACLC,QAASA,IAAMslB,GAAmB,GAClChlB,KAAMA,EAAGtB,OAAMC,YACb9L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,iBAAiB/B,KAAMA,EAAMC,MAAOA,IAErD5K,MAAO,CAAEgL,aAAc,IACvBqL,aAAc,CAAEtJ,cAAe,eAAgBxO,SAE9C4J,GAAQ,qBAEZ5J,SAEAkyB,GAAMrpB,KAAK8B,IACVpK,EAAAA,EAAAA,KAAC0b,GAAAA,QAAKY,KAAI,CAERzP,QAASA,KACPsQ,EAAQ/S,GACR+nB,GAAmB,EAAM,EAE3BjlB,MAAO9C,GALFA,QAUXpK,EAAAA,EAAAA,KAACixB,GAAS,CACRpa,MAAM,kBACNhZ,MAAOu0B,GAAe,GACtBlB,SAAUmB,EACVxf,YAAY,eAcbnU,IACCqN,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAArN,SAAA,EACEsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACL+M,cAAe,MACftC,WAAY,SACZD,eAAgB,iBAChBjM,SAAA,EAEFO,EAAAA,EAAAA,KAACyxB,GAAY,CACX5a,MAAM,8BACNzT,OAAQkvB,EAAe,UAAY,YACnCzlB,QAASA,KACP,MAAMumB,GAAqBd,EAE3B,GADAC,EAAgBa,GACZA,EAAmB,CACrB,MAAMh1B,EAAOH,EAAM6f,MAAMC,GAAMA,EAAE/W,KAAOtI,IACxC+zB,EACEr0B,EAAOA,EAAK0G,WAAa,GAAK,IAEhC6tB,GAAe,EACjB,MACEF,EAAwB,IACxBE,GAAe,EACjB,KAGFL,IACAtyB,EAAAA,EAAAA,KAAC0xB,GAAAA,QAAe,CACd7kB,QAASA,IAAM8lB,GAAgBD,GAC/BxxB,MAAO,CAAEqB,QAAS,GAAI9C,UAEtBO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KACE8kB,EACI,qBACA,uBAEN7mB,KAAM,GACNC,MAAOrL,EAAOG,gBAMpB0xB,GAAgBI,IAChB1yB,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CACHf,MAAO,CACL0S,YAAa,EACbD,YAAa,UACblH,aAAc,EACdP,aAAc,GACdqZ,UAAW,IACX1X,gBAAiB,GACjBpO,UAEFO,EAAAA,EAAAA,KAAC6B,EAAAA,QAAU,CACTX,MAAO,CAAEqkB,UAAW,KACpBzjB,sBAAuB,CAAEgM,kBAAmB,GAC5C9L,0BAA0B,UAC1BqxB,qBAAmB,EAAA5zB,SAElBmzB,EAAiBtqB,KAAKpB,IACrBlH,EAAAA,EAAAA,KAACyxB,GAAY,CAEX5a,MAAQ,GAAE3P,EAAO6B,UAAU7B,EAAO6M,WAClC3Q,OACEovB,EAAqBzO,SAAS7c,EAAOF,IACjC,UACA,YAEN6F,QAASA,KAAMymB,OAhTjBtsB,EAgT8BE,EAAOF,QA/SrDwrB,EAAqBzO,SAAS/c,GAChCyrB,EAAwBD,EAAqBpjB,QAAQrO,GAAMA,IAAMiG,KAEjEyrB,EAAwB,IAAID,EAAsBxrB,KAJhCA,KAgTyC,GAPlCE,EAAOF,cAiB1B+E,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACL+M,cAAe,MACfvC,eAAgB,WAChB0C,UAAW,GACXsC,IAAK,GACLjR,SAAA,EAEFO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CAACE,QAASimB,EAAOrzB,SAAC,cACzBO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,YACLC,QAlQQ0mB,KACpB,GAAkB,OAAd70B,EAAoB,OACxB,IAAKlB,GAAMwJ,GAAI,OAEf,MAAMwsB,EAAQ,CACZrH,SACAiC,cACA/kB,KAAMojB,GAAsBpjB,GAC5BgB,aAAcpG,EAAiBmuB,GAAe,IAC9CqB,gB9ClIyBtoB,E8CkIM,IAAIJ,K9CjIvCI,EAAMuoB,cAAcC,MAAM,KAAK,I8CkI3BnX,QAAS9d,EACTk1B,WAAYp2B,EAAKwJ,GACjB6sB,UAAWrB,G9CrIcrnB,M8CyIzB0mB,EAFEC,GAAc9qB,GAEP9D,OAAAC,OAAC,CAAC,EAAIqwB,EAAM,CAACxsB,GAAI8qB,EAAa9qB,KAG7BwsB,GAGZ7X,IACAkX,GAAO,EA4OK1R,UACGgL,EAAO1U,SACP/Y,IACA2K,GACgC,IAAhCmpB,EAAqBjjB,SAAiB+iB,EACxC7yB,SACF,uBAOF,E,0BCtYb,MAuNA,GAvN4Bq0B,EAC1B1Y,UACAO,YACA6X,QACA3B,gBAEA,MAAM,OAAEpxB,IAAWC,EAAAA,EAAAA,aACb,WAAE4E,GAAeqF,KAChB3F,EAAS+uB,IAAcr0B,EAAAA,EAAAA,UAAwB,IAEhDs0B,EAAqBhvB,EAAQqqB,MAChCnoB,GAAkC,KAAvBA,EAAO8I,KAAKyH,UAE1B7X,EAAAA,EAAAA,YAAU,KACWzC,WACjB,GAAKq2B,GAAOxsB,GAEZ,IACE,MAEMitB,SAFchvB,EAASuuB,EAAMxsB,KAELsB,KAAK0H,IAAc,CAC/ChJ,GAAIgJ,EAAK8O,UACT/V,OAAQzD,EAAW0K,EAAK8O,YAAY/V,QAAU,SAC9CgL,SAAUzO,EAAW0K,EAAK8O,WAAW/K,SACrC/D,KAAMA,EAAKA,MAAQ,GACnBsf,UAAWtf,EAAKsf,YAAa,EAC7B4E,QAASlkB,EAAKhJ,OAEhB+sB,EAAWE,EACb,CAAE,MAAOx2B,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,GAGF02B,EAAY,GACX,CAACX,IAgCJ,OACExzB,EAAAA,EAAAA,KAACge,GAAAA,QAAM,CAAAve,UACLO,EAAAA,EAAAA,KAACoe,GAAAA,QAAK,CACJhD,QAASA,EACTO,UAAWA,EACX7Z,sBAAuB,CACrBN,KAAM,EACNkK,eAAgB,SAChBC,WAAY,UACZlM,UAEFsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACLiS,gBAAiB1S,EAAOoV,QACxBtJ,MAAO,MACPyB,SAAU,IACVxB,OAAQ,MACRC,aAAc,GACd4R,SAAU,UACV5e,SAAA,EAEFO,EAAAA,EAAAA,KAACuB,EAAAA,QAAoB,CACnBE,SAA8C,SAC9CP,MAAO,CAAEM,KAAM,GACfE,uBAAwB,GAAGjC,UAE3BO,EAAAA,EAAAA,KAACo0B,GAAAA,QAAwB,CAACvnB,QAASwnB,GAAAA,QAASC,QAAQ70B,UAClDsM,EAAAA,EAAAA,MAAClK,EAAAA,QAAU,CACTG,0BAA0B,UAC1BF,sBAAuB,CACrBS,QAAS,GACTD,SAAU,GAEZgmB,8BAA8B,EAAM7oB,SAAA,EAEpCO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAa/K,MAAO,CAAEgL,aAAc,GAAIzM,SAAC,qBAGvDO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAaxM,SAAE+zB,EAAMrH,UACnCnsB,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAO,CAAEgL,aAAc,IAAKzM,SAAE+zB,EAAMpF,eAE1CriB,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAAEkN,UAAW,IAAK3O,SAAA,EAE7BsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACL+M,cAAe,MACfH,kBAAmB,EACnB5B,aAAc,GACdzM,SAAA,EAEFO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAAC9K,MAAO,CAAEM,KAAM,EAAG2M,WAAY,QAAS1O,SAAC,YAC9CO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACH9K,MAAO,CACLqL,MAAO,IACPJ,UAAW,SACXgC,WAAY,QACZ1O,SACH,eAGDO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACH9K,MAAO,CACLqL,MAAO,GACPJ,UAAW,SACXgC,WAAY,QACZ1O,SACH,YAKFuF,EAAQsD,KAAKpB,IACZ6E,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAEHf,MAAO,CACL+M,cAAe,MACftC,WAAY,SACZkC,gBAAiB,EACjBC,kBAAmB,EACnBymB,kBAAmB,GACnB5gB,YAAa,QACblU,SAAA,EAGFO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CACH9K,MAAO,CAAEM,KAAM,GAAI/B,SAClB,GAAEyH,EAAO6B,UAAU7B,EAAO6M,cAE7B/T,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CACHf,MAAO,CACLyS,YAAalT,EAAOG,QACpBgT,YAAwC,EACxCnH,aAAc,MACdkQ,YAAa,IACbld,UAEFO,EAAAA,EAAAA,KAAC2e,GAAAA,QAAW,CACV9gB,MAAOqJ,EAAOF,GAAG4Z,WACjBxd,OAAQ8D,EAAOooB,UAAY,UAAY,YACvCziB,QAASA,KAAM2nB,OAzGdxtB,EAyG8BE,EAAOF,QAxG5D+sB,GAAYvV,GACVA,EAAKlW,KAAKyV,GAAOA,EAAE/W,KAAOA,EAAE9D,OAAAC,OAAA,GAAQ4a,EAAE,CAACuR,WAAYvR,EAAEuR,YAAcvR,MAF9C/W,KAyGyC,OAK9ChH,EAAAA,EAAAA,KAAC4S,GAAAA,QAAS,CACR/U,MAAOqJ,EAAO8I,KAAK4Q,WACnB9N,aAAeuF,IACboc,OAvHEztB,EAuHeE,EAAOF,GAvHV0tB,EAuHcrc,OAtHlD0b,GAAYvV,GACVA,EAAKlW,KAAKyV,GAAOA,EAAE/W,KAAOA,EAAE9D,OAAAC,OAAA,GAAQ4a,EAAE,CAAC/N,KAAM0kB,IAAc3W,MAFtC0W,IAACztB,EAAY0tB,CAwHf,EACD9nB,KAAK,WACLoG,aAAa,UACb9R,MAAO,CACLqL,MAAO,GACPC,OAAQ,GAERL,UAAW,cA1CVjF,EAAOF,iBAmDxB+E,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CACHf,MAAO,CACL+M,cAAe,MACfvC,eAAgB,WAChB0C,UAAW,GACXsC,IAAK,EACLnO,QAAS,IACT9C,SAAA,EAEFO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CAACE,QAAS8O,EAAUlc,SAAC,cAC5BO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,YACLC,QAjKU1P,UACpB,MAAMw3B,EAA0C,CAC9C9vB,SAAU2uB,EAAMxsB,GAChBX,MAAOrB,EAAQsD,KAAKpB,IAAM,CACxB4X,UAAW5X,EAAOF,GAClBgJ,KAAM9I,EAAO8I,KACbsf,UAAWpoB,EAAOooB,eAGtBuC,EAAU8C,GAbVZ,EAAW,IACXpY,GAaa,EAwJHwF,SAAU6S,EAAmBv0B,SAC9B,qBAMA,ECkFb,GAxSmBm1B,KACjB,MAAM,WAAE3qB,EAAU,OAAEjL,EAAM,YAAEiH,EAAW,cAAEE,EAAa,MAAElI,GACtD0M,KAEKib,EAAcC,IAAmBnmB,EAAAA,EAAAA,WAAkB,IACnDm1B,EAAkBC,IAAuBp1B,EAAAA,EAAAA,WAAkB,IAC3D4d,EAAcC,IAAmB7d,EAAAA,EAAAA,WAAS,IAC1Cq1B,EAAgBC,IAAqBt1B,EAAAA,EAAAA,UAA2B,OAChEu1B,EAAaC,IAAkBx1B,EAAAA,EAAAA,UAA4B,OAC3Dy1B,EAAgBC,IAAqB11B,EAAAA,EAAAA,UAA2B,OAChE21B,EAAgBC,IAAqB51B,EAAAA,EAAAA,WAAS,IAC9C8d,EAASC,IAAc/d,EAAAA,EAAAA,UAAS,KAChC61B,EAAkBC,IAAuB91B,EAAAA,EAAAA,UAAsB,IAEhEsZ,GAAQtY,EAAAA,EAAAA,aACR,MAAE6L,IAAUgC,EAAAA,EAAAA,WAGZ6R,EAAa7T,GAAS,KAAO,EAAIA,GAAS,IAAM,EAAI,EACpD6gB,EAAU7gB,EAAQ,KAExB3M,EAAAA,EAAAA,YAAU,KACRqK,GAAY,GACX,IAoHH,OACE8B,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAO4P,UAAUtR,SAAA,EAC5BO,EAAAA,EAAAA,KAACie,GAAAA,QAAQ,CACP7C,QAASkC,GAA4B,KAAZE,EACzBU,SAAU,IACVvC,UAAWA,KACT4B,GAAgB,GAChBE,EAAW,GAAG,EAEhBU,OAAQ,CACNtH,MAAO,OACPhK,QAASA,IAAM0Q,GAAgB,IAC/B9d,SAED+d,KAEHzR,EAAAA,EAAAA,MAACT,EAAS,CACR9F,UAAWW,EACXoF,SAAUtF,EACVwF,aAAa,yBACbD,OAAQA,IAAMvB,GAAW,GAAMxK,SAAA,EAE/BsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAM,GAAI/B,SAAA,EAEvBsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAACC,GAAOmP,QAAQ7Q,SAAA,EAC3BsM,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAO,CAAEM,KAAM,GAAI/B,SAAA,EACvBO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAYxM,SAAC,0BAC3BO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAYxM,SAAC,oCAE5B2tB,GACCptB,EAAAA,EAAAA,KAACuQ,GAAAA,QAAU,CACT3D,KAAK,YACLC,QAASA,IAAMgZ,GAAgB,GAC/B1Y,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,MAAM/B,KAAMA,EAAMC,MAAOA,OAI5C9L,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,YACLC,QAASA,IAAMgZ,GAAgB,GAC/B1Y,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,MAAM/B,KAAMA,EAAMC,MAAOA,IACxCrM,SACH,iBAKHO,EAAAA,EAAAA,KAACuQ,GAAAA,QAAU,CACT3D,KAAK,YACLC,QAASA,IAAM5C,GAAW,GAC1BkD,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,UAAU/B,KAAMA,EAAMC,MAAOA,UAKlD9L,EAAAA,EAAAA,KAACktB,GAAY,CAACC,UAAWqI,IAGI,IAA5BD,EAAiBhmB,QAChBxD,EAAAA,EAAAA,MAAC9J,EAAAA,QAAI,CAACf,MAAOC,GAAOwuB,MAAMlwB,SAAA,EACxBO,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CACPC,KAAK,wBACL/B,KAAM,GACNC,MAAOkN,EAAMvY,OAAOmvB,kBACpB1uB,MAAO,CAAEgL,aAAc,OAEzBlM,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,cAAaxM,SAAC,8BAC5BO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,YAAY/K,MAAO,CAAE4K,MAAOkN,EAAMvY,OAAO2W,SAAU3X,SAAC,gDAGlEO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CACLC,KAAK,YACL1L,MAAO,CAAEkN,UAAW,IACpBjB,KAAMA,EAAGrB,QAAOD,WACd7L,EAAAA,EAAAA,KAAC2N,GAAAA,QAAQ,CAACC,KAAK,MAAM/B,KAAMA,EAAMC,MAAOA,IAE1Ce,QAASA,IAAMgZ,GAAgB,GAAMpmB,SACtC,+BAKHO,EAAAA,EAAAA,KAAC0gB,GAAAA,QAAQ,CACPniB,KAAMg3B,EACNnV,WAAYA,EAEZO,aAAcA,CAACrZ,EAAMiT,IACnBjT,EAAKN,IAAI4Z,YAAe,SAAQrG,IAElCuG,mBAAoBV,EAAa,EAAIjf,GAAOynB,SAAMzjB,EAClD+a,WAAYA,EAAG5Y,WACbtH,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAOC,GAAOujB,YAAYjlB,UAC9BO,EAAAA,EAAAA,KAAC+vB,GAAS,CACRG,gBAAiB5oB,EAAKmuB,kBAAoB,EAC1CrH,YAAa9mB,EAAK8mB,aAAe,qBACjC4B,WAAY1oB,EAAK0oB,YAAc,EAC/BC,aAAc3oB,EAAK+C,cAAgB,aACnChB,KAAM/B,EAAK+B,MAAQ,WACnB8iB,OAAQ7kB,EAAK6kB,OAEboC,WACEtwB,EAAM6f,MAAMC,GAAMA,EAAE/W,KAAOM,EAAKkV,WAAUzT,OAE5CsnB,YAAaA,KAjM7B+E,EAiM+C9tB,QAhM/CwtB,GAAoB,IAiMJ1E,WAAYA,KA5N5B4E,EA4NsD1tB,QA3NtDguB,GAAkB,IA4NFnF,SAAUA,KAxM1B+E,EAwMyC5tB,QAvMzCue,GAAgB,KAiMKve,EAAKN,MAUhBlF,sBAAuB,CAAE+e,cAAe,KAxBnCT,OA6BXpgB,EAAAA,EAAAA,KAACge,GAAAA,QAAM,CAAAve,UACLsM,EAAAA,EAAAA,MAAC2pB,GAAAA,QAAM,CACLta,QAASia,EACT1Z,UAAWA,IAAM2Z,GAAkB,GACnCp0B,MAAO,CAAEuL,aAAc,GAAIhN,SAAA,EAE3BO,EAAAA,EAAAA,KAAC01B,GAAAA,QAAO5f,MAAK,CAAArW,SAAC,8BACdO,EAAAA,EAAAA,KAAC01B,GAAAA,QAAOnoB,QAAO,CAAA9N,UACbsM,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,QAAQ,aAAYxM,SAAA,CAAC,2DAExBs1B,GAAgB5I,OAAO,WAG5BpgB,EAAAA,EAAAA,MAAC2pB,GAAAA,QAAOvK,QAAO,CAAA1rB,SAAA,EACbO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CAACE,QAASA,IAAMyoB,GAAkB,GAAO71B,SAAC,cACjDO,EAAAA,EAAAA,KAAC2M,EAAAA,QAAM,CAACE,QAjPQ1P,UAC1B,GAAK43B,EACL,S5CPyB53B,WAK3B,WAJkBsF,EAAW,GAAED,YAAkBwE,IAAM,CACrDxD,OAAQ,YAGDE,GAAI,MAAM,IAAIJ,MAAM,6BAA6B,E4CGhDqyB,CAAcZ,EAAe/tB,IACnCyW,EAAW,mBACXF,GAAgB,GAChBtT,GAAW,EACb,CAAE,MACAwT,EAAW,qBACXF,GAAgB,EAClB,CAAC,QACC+X,GAAkB,GAClBN,EAAkB,KACpB,GAoOgDY,UAAU,UAASn2B,SAAC,sBAMhEO,EAAAA,EAAAA,KAAC4xB,GAAe,CACdxW,QAASwK,EACTjK,UA/NWka,KACjBhQ,GAAgB,GAChBqP,EAAe,KAAK,EA8NdrD,UAvMmB10B,UACzB,IACE,IAAI0H,EAAW2uB,EAAMxsB,GAErB,GAAKnC,EAQE,CAEL,MAAMixB,EAAkB,CACtB3J,OAAQqH,EAAMrH,OACdiC,YAAaoF,EAAMpF,YACnB/kB,KAAMmqB,EAAMnqB,KACZgB,aAAcmpB,EAAMnpB,aACpBmS,QAASgX,EAAMhX,e5CxDlBrf,eACL0H,EACA2uB,GAEA,IAOE,WANuB/wB,EAAW,GAAED,YAAkBqC,IAAY,CAChErB,OAAQ,MAERC,KAAMnG,KAAKC,UAAUi2B,MAGT9vB,GAAI,MAAM,IAAIJ,MAAM,4BACpC,CAAE,MAAO7F,GAEP,MADAC,QAAQQ,IAAI,6BAA8BT,GACpCA,CACR,CACF,C4C2Ccs4B,CAAYlxB,EAAUixB,GAG5B,MACME,SADc/wB,EAASJ,IACUyD,KACpC6mB,GAAgBA,EAAErQ,YAGfmX,EAAgBzC,EAAMK,UAAUzkB,QACnCpI,IAAQgvB,EAAejS,SAAS/c,KAG7BkvB,EAAkBF,EAAe5mB,QACpCpI,IAAQwsB,EAAMK,UAAU9P,SAAS/c,KAGhCivB,EAAc1mB,OAAS,SACnB3K,EAAmBC,EAAUoxB,GAGjCC,EAAgB3mB,OAAS,S/CxG9BpS,eACL0H,EACAC,GAEA,MAAM9B,QAAiBP,EAAW,GAAED,gCAAuC,CACzEgB,OAAQ,OACRZ,QAAS,CACP,eAAgB,oBAElBa,KAAMnG,KAAKC,UAAU,CAAEsH,WAAUsxB,WAAYrxB,MAE/C,IAAK9B,EAASU,GAAI,MAAM,IAAIJ,MAAM,0BAClC,OAAON,EAASnE,MAClB,C+C6FgBu3B,CAAqBvxB,EAAUqxB,EAEzC,KA1Ce,CAEb,MAAMG,Q5ChFPl5B,eAA0Bq2B,GAC/B,IACE,MAAMxwB,QAAiBP,EAAW,GAAED,WAAkB,CACpDgB,OAAQ,OAERC,KAAMnG,KAAKC,UAAS2F,OAAAC,OAAC,CAAC,EACjBqwB,EAAM,CACTK,eAAW1uB,OAGf,IAAKnC,EAASU,GAAI,MAAM,IAAIJ,MAAM,wBAClC,aAAaN,EAASnE,MACxB,CAAE,MAAOpB,GAEP,MADAC,QAAQQ,IAAI,yBAA0BT,GAChCA,CACR,CACF,C4CgE4B64B,CAAW9C,GAC/B3uB,EAAWwxB,EAAMrvB,GAEb4W,MAAMC,QAAQ2V,EAAMK,YAAcL,EAAMK,UAAUtkB,OAAS,SACvD3K,EAAmBC,EAAoB2uB,EAAMK,UAEvD,CAoCApW,EAAW,iCACXF,GAAgB,GAChBtT,GAAW,EACb,CAAE,MAAOxM,GACPC,QAAQD,MAAMA,GACdggB,EAAW,0BACXF,GAAgB,EAClB,GAiJMuU,aAAcmD,IAEfE,IACCn1B,EAAAA,EAAAA,KAAC8zB,GAAmB,CAClB1Y,QAASyZ,EACTlZ,UAAWA,KAhOnBmZ,GAAoB,QACpB7qB,GAAW,IAgOHupB,MAAO2B,EACPtD,UA9NiB10B,UAGzB,U/CnCGA,eACLoB,GAUA,WARuBkE,EAAW,GAAED,8BAAqC,CACvEgB,OAAQ,MACRZ,QAAS,CACP,eAAgB,oBAElBa,KAAMnG,KAAKC,UAAUgB,MAGTmF,GACZ,MAAM,IAAIJ,MAAM,gCAEpB,C+CsBYizB,CAAuB5B,GAC7BlX,EAAW,oCACb,CAAE,MAAOhgB,GACPC,QAAQD,MAAM,6BAA8BA,GAC5CggB,EAAW,6BACb,CAAC,QACCF,GAAgB,GAChBtT,GAAW,EACb,UAsNO,EAML9I,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2O,UAAW,CACTvP,KAAM,EACNwM,SAAU,IACVgD,UAAW,SACXzE,MAAO,OACPuB,kBAAmB,GAErB8a,IAAK,CACHld,eAAgB,gBAChBgF,IAAK,GACLE,SAAU,OACVxC,UAAW,IAEbkC,OAAQ,CACNpE,aAAc,GACd+B,cAAe,MACfyC,IAAK,GACL/E,WAAY,SACZD,eAAgB,SAChBkF,SAAU,QAEZmb,QAAS,CACPvqB,KAAM,EACNyM,cAAe,MACfyC,IAAK,GACL/E,WAAY,SACZO,aAAc,GACd0E,SAAU,QAEZob,YAAa,CACXxqB,KAAM,EACNiL,aAAc,GACdF,MAAO,QAETe,KAAM,CACJpB,aAAc,IAEhByjB,MAAO,CACLhkB,WAAY,SACZD,eAAgB,SAChBnJ,QAAS,IAGXmiB,YAAa,CACXljB,KAAM,EACNsM,kBAAmB,EACnBC,SAAU,KCnWd,GAXeyoB,KACb,MAAM,KAAEh5B,GAAS8C,KACX,WAAE2J,GAAeU,IAMvB,OAJA/K,EAAAA,EAAAA,YAAU,KACRqK,GAAW,EAAK,GACf,KAEIjK,EAAAA,EAAAA,KAACQ,EAAM,CAAAf,SAAEjC,GAAMkM,YAAa1J,EAAAA,EAAAA,KAAC40B,GAAU,KAAM50B,EAAAA,EAAAA,KAAC6uB,GAAW,KAAa,ECUzEzF,IAAQC,EAAAA,EAAAA,8BACRhP,IAASoc,EAAAA,EAAAA,yBAEf,SAASC,KACP,MAAM,OAAEj2B,IAAWC,EAAAA,EAAAA,aACb,KAAElD,GAAS8C,IACXq2B,GAAehZ,EAAAA,EAAAA,UAAQ,IAAMngB,GAAM,CAACA,IAE1C,OACEuO,EAAAA,EAAAA,MAACsO,GAAOkP,UAAS,CACfqN,cAAgB3c,IAAUja,EAAAA,EAAAA,KAACga,GAAmB9W,OAAAC,OAAA,GAAK8W,IACnDuP,cAAeA,EAAG/O,iBAAY,CAC5Boc,YAAa,CACX1jB,gBAAiB1S,EAAO6S,UAAUwjB,QAEpCC,gBAAiBt2B,EAAOG,QACxBo2B,iBAAkB,CAChB7oB,WAAY,QAGd8oB,YAAaA,KACXj3B,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACf,MAAO,CAAEqB,QAAS,GAAI9C,UAC1BO,EAAAA,EAAAA,KAAC0hB,GAAAA,QAAS,CAAC7U,QAASA,IAAM4N,EAAWC,SAAS,UAAWxZ,MAAO,CAAC,EAAEzB,UACjEO,EAAAA,EAAAA,KAACkY,GAAAA,QAAW,CACVrB,MAAOW,GACLmf,GAAc5tB,OACd4tB,GAAc5iB,UAEhBlI,KAAM,GACN3K,MAAO,CACLiS,gBAAiB1S,EAAOG,QACxB2L,MAAO,GACPC,OAAQ,GACRmQ,YAAa,YAMtBld,SAAA,EAEHO,EAAAA,EAAAA,KAACqa,GAAOqP,OAAM,CACZ9b,KAAK,OACL+b,UAAW7Y,GACXnO,QAAS,CAAEuK,MAAO,6BAEpBlN,EAAAA,EAAAA,KAACqa,GAAOqP,OAAM,CACZ9b,KAAK,gBACL+b,UAAWL,GACX3mB,QAAS,CAAEuK,MAAO,gCAEpBlN,EAAAA,EAAAA,KAACqa,GAAOqP,OAAM,CACZ9b,KAAK,SACL+b,UAAWzU,GACXvS,QAAS,CAAEuK,MAAO,6BAEpBlN,EAAAA,EAAAA,KAACqa,GAAOqP,OAAM,CACZ9b,KAAK,WACL+b,UAAWvI,GACXze,QAAS,CAAEuK,MAAO,gCAEpBlN,EAAAA,EAAAA,KAACqa,GAAOqP,OAAM,CACZ9b,KAAK,UACL+b,UAAW0B,GACX1oB,QAAS,CAAEuK,MAAO,+BAGpBlN,EAAAA,EAAAA,KAACqa,GAAOqP,OAAM,CACZ9b,KAAK,SACL+b,UAAW6M,GACX7zB,QAAS,CAAEuK,MAAO,2BAI1B,CAEA,MAAMgqB,GAAkBA,KACtB,MAAM,KAAE15B,GAAS8C,KACX,MAAE0Y,GAAUe,KAGZod,EAAkBne,EAAMoe,KAAIl0B,OAAAC,OAAA,GAEzBk0B,EAAAA,UAAoB,CACvB52B,OAAMyC,OAAAC,OAAA,GACDk0B,EAAAA,UAAoB52B,OACpBuY,EAAMvY,UACVyC,OAAAC,OAAA,GAGEm0B,EAAAA,aAAuB,CAC1B72B,OAAMyC,OAAAC,OAAA,GACDm0B,EAAAA,aAAuB72B,OACvBuY,EAAMvY,UAIjB,OACET,EAAAA,EAAAA,KAACu3B,EAAAA,oBAAmB,CAACve,MAAOme,EAAgB13B,UAC1CO,EAAAA,EAAAA,KAACopB,GAAMG,UAAS,CAAA9pB,SACZjC,EAMEA,EAAK0kB,mBACPliB,EAAAA,EAAAA,KAACopB,GAAMM,OAAM,CACX9b,KAAK,gBACL+b,UAAW7H,GACXnf,QAAS,CACPuK,MAAO,qCACPuc,aAAa,MAIjBzpB,EAAAA,EAAAA,KAACopB,GAAMM,OAAM,CACX9b,KAAK,OACL+b,UAAW+M,GACX/zB,QAAS,CAAE8mB,aAAa,MAlB1BzpB,EAAAA,EAAAA,KAACopB,GAAMM,OAAM,CACX9b,KAAK,QACL+b,UAAWjY,GACX/O,QAAS,CAAE8mB,aAAa,QAmBV,EAIX,SAAS+N,KACtB,OACEx3B,EAAAA,EAAAA,KAACR,EAAY,CAAAC,UACXO,EAAAA,EAAAA,KAACoF,EAAe,CAAA3F,UACdO,EAAAA,EAAAA,KAACk3B,GAAe,OAIxB,C,qEC1JA,MAiCA,GAjCqBO,EAAGC,eACtB,MAAM,OAAEj3B,IAAWC,EAAAA,EAAAA,YACb4T,EAAU,IAAIqjB,GAAAA,QAASC,MAAM,GAoBnC,OAlBAh4B,EAAAA,EAAAA,YAAU,KACR+3B,GAAAA,QAASE,OAAOvjB,EAAS,CACvBwjB,QAAS,EACT5Z,SAAU,IACV6Z,iBAAiB,IAChBj3B,OAAM,KACPk3B,YAAW,KACTL,GAAAA,QAASE,OAAOvjB,EAAS,CACvBwjB,QAAS,GACT5Z,SAAU,IACV6Z,iBAAiB,IAChBj3B,OAAM,KACP42B,GAAU,GACV,GACD,IAAK,GACR,GACD,KAGD13B,EAAAA,EAAAA,KAAC23B,GAAAA,QAAS11B,KAAI,CACZf,MAAO,CAACC,GAAO4P,UAAW,CAAEuD,WAAW,CAAEnB,gBAAiBnG,KAAgBvN,UAE1EO,EAAAA,EAAAA,KAACgM,EAAAA,QAAI,CAACC,QAAQ,aAAa/K,MAAOC,GAAO+L,MAAMzN,SAAC,6BAGlC,EAMd0B,GAASgB,EAAAA,QAAWC,OAAO,CAC/B2O,UAAW,CACTvP,KAAM,EACNkK,eAAgB,SAChBC,WAAY,UAEduB,MAAO,CACLgB,SAAU,GACVC,WAAY,UC8BhB,SAAS8pB,KACP,MAAM,MAAEjf,EAAK,WAAEF,GAAeiB,KAC9B,OACEhO,EAAAA,EAAAA,MAACmsB,GAAAA,QAAa,CAAClf,MAAOA,EAAMvZ,SAAA,EAC1BO,EAAAA,EAAAA,KAAC2B,GAAAA,UAAS,CAACT,MAAO4X,EAAa,QAAU,UACzC9Y,EAAAA,EAAAA,KAACw3B,GAAM,MAGb,CAzCAC,GAAAA,wBCvCAU,EAAAA,EAAAA,UDyCe,WACb,MAAOC,IAAeC,EAAAA,GAAAA,UAAQn1B,OAAAC,OAAC,CAAC,EAC3Bm1B,GAAAA,QAAuBC,QAGrBC,EAAYC,IAAiB/4B,EAAAA,EAAAA,WAAS,GAEvCg5B,GAAmBC,EAAAA,EAAAA,cAAYx7B,UAGnC,GACC,CAACi7B,IAWJ,OATAx4B,EAAAA,EAAAA,YAAU,KACJw4B,GAAaM,GAAkB,GAClC,CAACN,IAOCA,GAGHp4B,EAAAA,EAAAA,KAACiZ,GAAa,CAAAxZ,SACX+4B,GAAax4B,EAAAA,EAAAA,KAAC44B,GAAM,CAAClB,SATCv6B,UACzBs7B,GAAc,SACRhB,GAAAA,WAAwB,KAO6Bz3B,EAAAA,EAAAA,KAACi4B,GAAY,MAJjD,IAO3B,G,qFE5EIY,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB5zB,IAAjB6zB,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,OACf,CAGAH,EAAoBzpB,EAAI8pB,E,MCzBxB,IAAIE,EAAW,GACfP,EAAoBQ,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASnR,EAAI,EAAGA,EAAI4Q,EAAS9pB,OAAQkZ,IAAK,CAGzC,IAFA,IAAK+Q,EAAUC,EAAIC,GAAYL,EAAS5Q,GACpCoR,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASjqB,OAAQuqB,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAax2B,OAAO4D,KAAKgyB,EAAoBQ,GAAGpa,OAAOthB,GAASk7B,EAAoBQ,EAAE17B,GAAK47B,EAASM,MAC9IN,EAASO,OAAOD,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbR,EAASU,OAAOtR,IAAK,GACrB,IAAIuR,EAAIP,SACEt0B,IAAN60B,IAAiBT,EAASS,EAC/B,CACD,CACA,OAAOT,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIjR,EAAI4Q,EAAS9pB,OAAQkZ,EAAI,GAAK4Q,EAAS5Q,EAAI,GAAG,GAAKiR,EAAUjR,IAAK4Q,EAAS5Q,GAAK4Q,EAAS5Q,EAAI,GACrG4Q,EAAS5Q,GAAK,CAAC+Q,EAAUC,EAAIC,EAqBjB,C,KCzBdZ,EAAoB3J,EAAK+J,IACxB,IAAIe,EAASf,GAAUA,EAAOgB,WAC7B,IAAOhB,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoBqB,EAAEF,EAAQ,CAAElc,EAAGkc,IAC5BA,CAAM,ECLdnB,EAAoBqB,EAAI,CAAClB,EAASmB,KACjC,IAAI,IAAIx8B,KAAOw8B,EACXtB,EAAoBuB,EAAED,EAAYx8B,KAASk7B,EAAoBuB,EAAEpB,EAASr7B,IAC5EsF,OAAOo3B,eAAerB,EAASr7B,EAAK,CAAE28B,YAAY,EAAMC,IAAKJ,EAAWx8B,IAE1E,ECNDk7B,EAAoB2B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAO5wB,GACR,GAAsB,kBAAX6wB,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB/B,EAAoBuB,EAAI,CAACS,EAAKC,IAAU73B,OAAO83B,UAAUC,eAAe7B,KAAK0B,EAAKC,GCClFjC,EAAoBkB,EAAKf,IACH,qBAAXiC,QAA0BA,OAAOC,aAC1Cj4B,OAAOo3B,eAAerB,EAASiC,OAAOC,YAAa,CAAEt9B,MAAO,WAE7DqF,OAAOo3B,eAAerB,EAAS,aAAc,CAAEp7B,OAAO,GAAO,ECL9Di7B,EAAoBsC,EAAI,I,MCKxB,IAAIC,EAAkB,CACrB,IAAK,GAaNvC,EAAoBQ,EAAEQ,EAAKwB,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4Bj9B,KACvD,IAGIw6B,EAAUuC,GAHT9B,EAAUiC,EAAaC,GAAWn9B,EAGhBkqB,EAAI,EAC3B,GAAG+Q,EAASnK,MAAMroB,GAAgC,IAAxBq0B,EAAgBr0B,KAAa,CACtD,IAAI+xB,KAAY0C,EACZ3C,EAAoBuB,EAAEoB,EAAa1C,KACrCD,EAAoBzpB,EAAE0pB,GAAY0C,EAAY1C,IAGhD,GAAG2C,EAAS,IAAInC,EAASmC,EAAQ5C,EAClC,CAEA,IADG0C,GAA4BA,EAA2Bj9B,GACrDkqB,EAAI+Q,EAASjqB,OAAQkZ,IACzB6S,EAAU9B,EAAS/Q,GAChBqQ,EAAoBuB,EAAEgB,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOxC,EAAoBQ,EAAEC,EAAO,EAGjCoC,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmB50B,QAAQw0B,EAAqBM,KAAK,KAAM,IAC3DF,EAAmBjT,KAAO6S,EAAqBM,KAAK,KAAMF,EAAmBjT,KAAKmT,KAAKF,G,KC7CvF,IAAIG,EAAsBhD,EAAoBQ,OAAEn0B,EAAW,CAAC,MAAM,IAAO2zB,EAAoB,QAC7FgD,EAAsBhD,EAAoBQ,EAAEwC,E","sources":["src/utils/storage.ts","src/context/authContent.tsx","src/layout/layout.tsx","src/utils/url.ts","src/api/authRefresh.ts","src/api/epetcoins.ts","src/utils/DateFormat.ts","src/api/notas.ts","src/context/appDataContext.tsx","src/api/aulas.ts","src/api/tarea.ts","src/utils/getSaludoFecha.ts","src/components/LoadError.tsx","src/screens/home/HomeProfesor.tsx","src/utils/colors.ts","src/components/home/ResumenMiniCard.tsx","src/api/asistenciasClases.ts","src/screens/home/HomeAlumnos.tsx","src/screens/home/home-screen.tsx","src/screens/login-screen.tsx","src/api/login.ts","src/api/updateUser.ts","src/screens/Profile.tsx","src/utils/initials.ts","src/components/AvatarCard.tsx","src/utils/theme.ts","src/context/themeContext.tsx","src/navigations/CustomDrawerContent.tsx","src/components/DropDonw.tsx","src/components/EpetcoinModal.tsx","src/components/MateriaCard.tsx","src/components/ResponsiveGrid.tsx","src/components/CrearEpetcoinForm.tsx","src/screens/Epetcoin.tsx","src/screens/changePassword.tsx","src/screens/MisAulas.tsx","src/components/ModalAsistencias.tsx","src/api/setClaseAsistencia.ts","src/components/ClaseCard.tsx","src/screens/DetailsAulas.tsx","src/api/clasesMateria.ts","src/navigations/materiasStack.tsx","src/components/AlumnoResumen.tsx","src/screens/Alumnos.tsx","src/components/evaluacion/CardResumen.tsx","src/utils/tipoTarea.ts","src/components/evaluacion/FiltroTarea.tsx","src/components/evaluacion/CardTask.tsx","src/screens/evaluacion/TareaAlumno.tsx","src/components/evaluacion/TareaCard.tsx","src/components/generales/DateInput.tsx","src/components/generales/Checkboxtem.tsx","src/components/evaluacion/CrearTareaModal.tsx","src/components/evaluacion/CalificarTareaModal.tsx","src/screens/evaluacion/TareaProfe.tsx","src/screens/evaluacion/Tareas.tsx","src/navigations/router.tsx","src/screens/splashScreen.tsx","App.tsx","index.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { User as UsuarioType } from \"../types/UserType\";\r\nimport { MateriasSimpleType as Aula, ClaseType } from \"../types/AulaType\";\r\nimport {\r\n  Epetcoin,\r\n  TransaccionCoinAulaAlumnoType,\r\n  TransaccionCoinHistorialAulaType,\r\n} from \"../types/EpetcoinType\";\r\nimport { AsistenciaAlumnoType } from \"../types/AsistenciaType\";\r\nimport { TareaBase } from \"../types/TareaType\";\r\nimport { MisNotas } from \"../types/NotaType\";\r\n\r\nexport const saveUser = async (user: UsuarioType) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"user\", JSON.stringify(user));\r\n  } catch (error) {\r\n    console.error(\"Error guardando el usuario:\", error);\r\n  }\r\n};\r\n\r\nexport const getUser = async (): Promise<UsuarioType | null> => {\r\n  try {\r\n    const user = await AsyncStorage.getItem(\"user\");\r\n    if (user !== null) {\r\n      return JSON.parse(user);\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error(\"Error obteniendo el usuario:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveToStorage = async (key: string, value: string) => {\r\n  try {\r\n    await AsyncStorage.setItem(key, value);\r\n  } catch (error) {\r\n    console.error(\"Error guardando en storage:\", error);\r\n  }\r\n};\r\n\r\nexport const getFromStorage = async (key: string): Promise<string | null> => {\r\n  try {\r\n    return await AsyncStorage.getItem(key);\r\n  } catch (error) {\r\n    console.error(\"Error obteniendo de storage:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const removeFromStorage = async (key: string) => {\r\n  try {\r\n    await AsyncStorage.removeItem(key);\r\n  } catch (error) {\r\n    console.error(\"Error eliminando de storage:\", error);\r\n  }\r\n};\r\n\r\nexport const saveAula = async (aulas: Aula[]) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"aulas\", JSON.stringify(aulas));\r\n  } catch (error) {\r\n    console.log(\"error al guardar materias\", error);\r\n  }\r\n};\r\n\r\nexport const getAulaStorage = async (): Promise<Aula[] | null> => {\r\n  try {\r\n    const aula = await AsyncStorage.getItem(\"aulas\");\r\n    if (aula != null) return JSON.parse(aula) as Aula[];\r\n    return null;\r\n  } catch (error) {\r\n    console.log(\"no hay aulas\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveAlumnos = async (alumnos: UsuarioType[]) => {\r\n  try {\r\n    const json = JSON.stringify(alumnos);\r\n    await AsyncStorage.setItem(\"alumnos\", json);\r\n  } catch (error) {\r\n    console.error(\"Error al guardar alumnos:\", error);\r\n  }\r\n};\r\n\r\nexport const getAlumnosStorage = async (): Promise<Record<\r\n  number,\r\n  UsuarioType\r\n> | null> => {\r\n  try {\r\n    const data = await AsyncStorage.getItem(\"alumnos\");\r\n    if (!data) return null;\r\n\r\n    const alumnosArray: UsuarioType[] = JSON.parse(data);\r\n    const alumnosMap: Record<number, UsuarioType> = {};\r\n\r\n    alumnosArray.forEach((alumno) => {\r\n      alumnosMap[alumno.id] = alumno;\r\n    });\r\n\r\n    return alumnosMap;\r\n  } catch (error) {\r\n    console.error(\"Error al leer alumnos desde storage:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveAsistencias = async (data: AsistenciaAlumnoType[]) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"asistencias\", JSON.stringify(data));\r\n  } catch (error) {\r\n    console.error(\"Error al guardar asistencias:\", error);\r\n  }\r\n};\r\n\r\nexport const getAsistenciasStorage = async (): Promise<\r\n  AsistenciaAlumnoType[] | null\r\n> => {\r\n  try {\r\n    const data = await AsyncStorage.getItem(\"asistencias\");\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error(\"Error al leer asistencias:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveClases = async (\r\n  materiaId: number,\r\n  data: ClaseType[]\r\n): Promise<void> => {\r\n  try {\r\n    await AsyncStorage.setItem(`clases_${materiaId}`, JSON.stringify(data));\r\n  } catch (error) {\r\n    console.error(\"Error guardando clases:\", error);\r\n  }\r\n};\r\n\r\nexport const getClasesStorage = async (\r\n  materiaId: number\r\n): Promise<ClaseType[] | null> => {\r\n  try {\r\n    const data = await AsyncStorage.getItem(`clases_${materiaId}`);\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error(\"Error leyendo clases:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getEpetCoinToStorage = async (): Promise<Epetcoin | null> => {\r\n  try {\r\n    const data = await AsyncStorage.getItem(\"epetCoin\");\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error(\"Error leyendo epetCoin:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveEpetCoin = async (epetCoin: Epetcoin | undefined) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"epetCoin\", JSON.stringify(epetCoin));\r\n  } catch (error) {\r\n    console.error(\"Error guardando epetCoin:\", error);\r\n  }\r\n};\r\n\r\nexport const saveTransaccionCoinProfe = async (\r\n  data: TransaccionCoinHistorialAulaType[]\r\n) => {\r\n  try {\r\n    const json = JSON.stringify(data);\r\n    await saveToStorage(\"transaccion_profe\", json);\r\n  } catch (error) {\r\n    console.error(\"Error al guardar alarcoin en storage:\", error);\r\n  }\r\n};\r\n\r\nexport const getTransaccionCoinProfe = async (): Promise<\r\n  TransaccionCoinHistorialAulaType[] | null\r\n> => {\r\n  try {\r\n    const json = await getFromStorage(\"transaccion_profe\");\r\n    return json ? JSON.parse(json) : null;\r\n  } catch (error) {\r\n    console.error(\"Error al leer alarcoins profe:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Para alumno\r\nexport const saveTransaccionCoinAlumno = async (\r\n  data: TransaccionCoinAulaAlumnoType[]\r\n) => {\r\n  try {\r\n    const json = JSON.stringify(data);\r\n    await saveToStorage(\"transaccion_alumno\", json);\r\n  } catch (error) {\r\n    console.error(\"Error al guardar alarcoin del alumno:\", error);\r\n  }\r\n};\r\n\r\nexport const getTransaccionCoinAlumno = async (): Promise<\r\n  TransaccionCoinAulaAlumnoType[] | null\r\n> => {\r\n  try {\r\n    const json = await getFromStorage(\"transaccion_alumno\");\r\n    return json ? JSON.parse(json) : null;\r\n  } catch (error) {\r\n    console.error(\"Error al leer alarcoin del alumno:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveTareas = async (tareas: TareaBase[]) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"tareas\", JSON.stringify(tareas));\r\n  } catch (error) {\r\n    console.error(\"Error al guardar tareas:\", error);\r\n  }\r\n};\r\n\r\nexport const getTareasStorage = async (): Promise<TareaBase[] | null> => {\r\n  try {\r\n    const tareasStr = await AsyncStorage.getItem(\"tareas\");\r\n    return tareasStr ? JSON.parse(tareasStr) : null;\r\n  } catch (error) {\r\n    console.error(\"Error al leer tareas:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getNotasAlumnoStorage = async (): Promise<MisNotas[] | null> => {\r\n  try {\r\n    const json = await AsyncStorage.getItem(\"notasAlumno\");\r\n    return json ? JSON.parse(json) : null;\r\n  } catch (error) {\r\n    console.error(\"Error al leer notas:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveNotasAlumno = async (data: MisNotas) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"notasAlumno\", JSON.stringify(data));\r\n  } catch (error) {\r\n    console.error(\"Error al guardar notas:\", error);\r\n  }\r\n};\r\n\r\nexport const clearNotasAlumnoStorage = async () => {\r\n  await AsyncStorage.removeItem(\"notasAlumno\");\r\n};\r\n","// AuthContext.tsx\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { User } from \"../types/UserType\";\r\nimport {\r\n  getUser,\r\n  getFromStorage,\r\n  removeFromStorage,\r\n  saveUser,\r\n} from \"../utils/storage\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  setUser: (user: User | null) => void;\r\n  token: string | null;\r\n  setToken: (token: string | null) => void;\r\n  logout: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  setUser: () => {},\r\n  token: null,\r\n  setToken: () => {},\r\n  logout: () => {},\r\n  loading: true,\r\n});\r\n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState<string | null>(null);\r\n\r\n  const setUserAndPersist = async (newUser: User | null) => {\r\n    setUser(newUser);\r\n    if (newUser) {\r\n      await saveUser(newUser);\r\n    } else {\r\n      await removeFromStorage(\"user\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const users = await getUser();\r\n      const token = await getFromStorage(\"token\");\r\n      if (users) setUser(users);\r\n      if (token) setToken(token);\r\n      setLoading(false);\r\n    };\r\n    loadUser();\r\n  }, []);\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await AsyncStorage.clear();\r\n    } catch (error) {\r\n      console.log(\"error al borrar items\", error);\r\n    }\r\n\r\n    setUser(null);\r\n    setToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        setUser: setUserAndPersist,\r\n        loading,\r\n        token,\r\n        setToken,\r\n        logout,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n","import { ReactNode } from \"react\";\r\nimport {\r\n  Platform,\r\n  StyleSheet,\r\n  View,\r\n  ScrollView,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { useTheme } from \"react-native-paper\";\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const Layout = ({ children }: LayoutProps) => {\r\n  const { colors } = useTheme();\r\n  return (\r\n    <LinearGradient\r\n      colors={[colors.primary, colors.background]}\r\n      start={{ x: 0.6, y: 1.0 }}\r\n      end={{ x: 0.5, y: 0.0 }}\r\n      style={styles.gradient}\r\n    >\r\n      <SafeAreaView style={styles.safeArea}>\r\n        <KeyboardAvoidingView\r\n          style={styles.flex}\r\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n          keyboardVerticalOffset={\r\n            Platform.OS === \"ios\" ? 0 : StatusBar.currentHeight || 0\r\n          }\r\n        >\r\n          <ScrollView\r\n            contentContainerStyle={styles.scrollContainer}\r\n            keyboardShouldPersistTaps=\"handled\"\r\n          >\r\n            <View style={styles.innerContainer}>{children}</View>\r\n          </ScrollView>\r\n        </KeyboardAvoidingView>\r\n      </SafeAreaView>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  gradient: {\r\n    flex: 1,\r\n  },\r\n  safeArea: {\r\n    flex: 1,\r\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n});\r\n","export const urlBase = \"https://adminaulas.onrender.com\";\r\n","import { getFromStorage, saveToStorage } from \"../utils/storage\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport const authFetch = async (\r\n  input: RequestInfo,\r\n  options: RequestInit = {}\r\n): Promise<Response> => {\r\n  let token = await getFromStorage(\"token\");\r\n  const headers = options.headers || {};\r\n\r\n  const newHeaders = new Headers(headers);\r\n  newHeaders.set(\"Authorization\", `Bearer ${token}`);\r\n\r\n  let response = await fetch(input, {\r\n    ...options,\r\n    headers: newHeaders,\r\n  });\r\n\r\n  if (response.status === 401) {\r\n    const refresh_token = await getFromStorage(\"refresh_token\");\r\n\r\n    if (!refresh_token) throw new Error(\"No hay refresh token\");\r\n    const refreshRes = await fetch(`${urlBase}/users/refresh`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ refresh_token }),\r\n    });\r\n\r\n    if (!refreshRes.ok) {\r\n      throw new Error(\"No se pudo refrescar el token\");\r\n    }\r\n\r\n    const data = await refreshRes.json();\r\n    saveToStorage(\"access_token\", data.access_token);\r\n\r\n    // Reintentar con nuevo token\r\n    const retryHeaders = new Headers(headers);\r\n    retryHeaders.set(\"Authorization\", `Bearer ${data.access_token}`);\r\n\r\n    response = await fetch(input, {\r\n      ...options,\r\n      headers: retryHeaders,\r\n    });\r\n  }\r\n\r\n  return response;\r\n};\r\n","import {\r\n  Epetcoin,\r\n  TransaccionCoinAulaAlumnoType,\r\n  TransaccionCoinCreateType,\r\n  TransaccionCoinHistorialAulaType,\r\n  TransaccionCoinType,\r\n} from \"../types/EpetcoinType\";\r\nimport { urlBase } from \"../utils/url\";\r\nimport { getFromStorage } from \"../utils/storage\";\r\nimport { authFetch } from \"./authRefresh\";\r\n\r\nexport async function getEpetcoin(): Promise<Epetcoin | undefined> {\r\n  try {\r\n    const token = await getFromStorage(\"token\");\r\n    const response = await authFetch(`${urlBase}/epetcoins/me`, {});\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error al consultar /me\", error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\n//obtener epetcoin - nueva\r\nexport async function crearEpetcoin(\r\n  nombre: string\r\n): Promise<Epetcoin | undefined> {\r\n  try {\r\n    const token = await getFromStorage(\"token\");\r\n    const response = await authFetch(`${urlBase}/epetcoins/`, {\r\n      method: \"POST\",\r\n\r\n      body: JSON.stringify({ nombre }),\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error al consultar /me\", error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport async function getHistorialProfesor(): Promise<\r\n  TransaccionCoinHistorialAulaType[]\r\n> {\r\n  const response = await authFetch(`${urlBase}/epetcoins/historial`, {});\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al obtener historial\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function crearTransaccion(\r\n  data: TransaccionCoinCreateType\r\n): Promise<TransaccionCoinType> {\r\n  const response = await authFetch(`${urlBase}/epetcoins/transaccion`, {\r\n    method: \"POST\",\r\n\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al asignar alarcoin\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function getHistorialAlumno(): Promise<\r\n  TransaccionCoinAulaAlumnoType[]\r\n> {\r\n  const response = await authFetch(`${urlBase}/epetcoins/historial`, {});\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al obtener historial\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","export function DateFormatLatIso(dateStr: string): string | null {\r\n  const regex = /^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/;\r\n  const match = dateStr.match(regex);\r\n  if (!match) return null;\r\n\r\n  const [, dd, mm, yyyy] = match;\r\n  const day = parseInt(dd, 10);\r\n  const month = parseInt(mm, 10);\r\n  if (day < 1 || day > 31 || month < 1 || month > 12) return null;\r\n\r\n  return `${yyyy}-${mm}-${dd}`;\r\n}\r\n\r\nexport function DateFormatIsoLat(isoDate?: string | null): string | null {\r\n  if (!isoDate || typeof isoDate !== \"string\") return null;\r\n\r\n  const regex = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\r\n  const match = isoDate.match(regex);\r\n  if (!match) return null;\r\n\r\n  const [, yyyy, mm, dd] = match;\r\n\r\n  const day = parseInt(dd, 10);\r\n  const month = parseInt(mm, 10);\r\n  if (day < 1 || day > 31 || month < 1 || month > 12) return null;\r\n\r\n  return `${dd}/${mm}/${yyyy}`;\r\n}\r\nexport const formatearFecha = (fecha: Date): string =>\r\n  fecha.toISOString().split(\"T\")[0];\r\n","import { NotaTareaUpdateMasiva } from \"../types/NotaType\";\r\nimport { urlBase } from \"../utils/url\";\r\nimport { authFetch } from \"./authRefresh\";\r\n\r\nexport const asignarTareaMasiva = async (\r\n  tarea_id: number,\r\n  alumnoIds: number[]\r\n) => {\r\n  const res = await authFetch(`${urlBase}/notas/asignar-masiva`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      tarea_id,\r\n      alumnos: alumnoIds,\r\n    }),\r\n  });\r\n\r\n  if (!res.ok) throw new Error(\"Error al asignar tarea a alumnos\");\r\n  return await res.json();\r\n};\r\n\r\nexport const getNotas = async (tarea_id: number) => {\r\n  try {\r\n    const response = await authFetch(`${urlBase}/notas/tarea/${tarea_id}`, {\r\n      method: \"GET\",\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"Error al obtener notas\");\r\n  }\r\n};\r\n\r\nexport const getNotasMe = async () => {\r\n  try {\r\n    const response = await authFetch(`${urlBase}/notas/me`, {\r\n      method: \"GET\",\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"Error al obtener notas\");\r\n  }\r\n};\r\n\r\nexport async function eliminarNotasMasivas(\r\n  tarea_id: number,\r\n  alumnoIds: number[]\r\n) {\r\n  const response = await authFetch(`${urlBase}/notas/notas-tareas/eliminar`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ tarea_id, alumno_ids: alumnoIds }),\r\n  });\r\n  if (!response.ok) throw new Error(\"Error eliminando notas\");\r\n  return response.json();\r\n}\r\n\r\nexport async function actualizarNotasMasivas(\r\n  data: NotaTareaUpdateMasiva\r\n): Promise<void> {\r\n  const response = await authFetch(`${urlBase}/notas/tareas/notas/masiva`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"Error al actualizar las notas\");\r\n  }\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useAuth } from \"./authContent\";\r\nimport { User as AlumnoType } from \"../types/UserType\";\r\nimport {\r\n  MateriasAlumnosType,\r\n  MateriasSimpleType,\r\n  MateriasType,\r\n} from \"../types/AulaType\";\r\nimport { getalumnosAulas, getMisAulas } from \"../api/aulas\";\r\nimport {\r\n  getAlumnosStorage,\r\n  getAulaStorage,\r\n  saveAlumnos,\r\n  saveAula,\r\n  saveEpetCoin,\r\n  getEpetCoinToStorage,\r\n  getTransaccionCoinProfe,\r\n  getTransaccionCoinAlumno,\r\n  saveTransaccionCoinProfe,\r\n  saveTransaccionCoinAlumno,\r\n  getTareasStorage,\r\n  saveTareas,\r\n  getNotasAlumnoStorage,\r\n  saveNotasAlumno,\r\n} from \"../utils/storage\";\r\nimport {\r\n  TransaccionCoinType,\r\n  TransaccionCoinAlumnoType,\r\n  Epetcoin,\r\n  TransaccionCoinCreateType,\r\n  TransaccionCoinAulaAlumnoType,\r\n  TransaccionCoinHistorialAulaType,\r\n} from \"../types/EpetcoinType\";\r\nimport {\r\n  getHistorialProfesor,\r\n  getEpetcoin,\r\n  getHistorialAlumno,\r\n} from \"../api/epetcoins\";\r\nimport { TareaBase } from \"../types/TareaType\";\r\nimport { GetTareas, GetTareasAula } from \"../api/tarea\";\r\nimport { MisNotas } from \"../types/NotaType\";\r\nimport { getNotasMe } from \"../api/notas\";\r\n\r\ninterface AppDataContextType {\r\n  aulas: MateriasSimpleType[];\r\n  alumnosMap: Record<number, AlumnoType>;\r\n  isLoading: boolean;\r\n  loadData: () => void;\r\n  transaccioncoins:\r\n    | TransaccionCoinType[]\r\n    | null\r\n    | TransaccionCoinHistorialAulaType[]\r\n    | TransaccionCoinAlumnoType[];\r\n  loadAlarcoins: (forceRefresh?: boolean) => void;\r\n  epetCoin: Epetcoin | null | undefined;\r\n  alarcoinsError: boolean;\r\n  loadTareas: (forceRefresh?: boolean) => void;\r\n  tareas: TareaBase[];\r\n  tareasError: boolean;\r\n  tareasLoading: boolean;\r\n  loadNotas: (forceRefresh?: boolean) => void;\r\n  notas: MisNotas[];\r\n  notasError: boolean;\r\n  notasLoading: boolean;\r\n}\r\n\r\nconst AppDataContext = createContext<AppDataContextType | undefined>(undefined);\r\n\r\nexport const AppDataProvider = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => {\r\n  const { token, user } = useAuth();\r\n  const [aulas, setAulas] = useState<MateriasSimpleType[]>([]);\r\n  const [alumnosMap, setAlumnosMap] = useState<Record<number, AlumnoType>>({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [transaccioncoins, setTransaccionCoins] = useState<\r\n    | TransaccionCoinType[]\r\n    | null\r\n    | TransaccionCoinHistorialAulaType[]\r\n    | TransaccionCoinAlumnoType[]\r\n  >(null);\r\n  const [alarcoinsError, setAlarcoinsError] = useState(false);\r\n  const [epetCoin, setEpetcoin] = useState<Epetcoin | false | undefined>(false);\r\n  const [tareas, setTareas] = useState<TareaBase[]>([]);\r\n  const [tareasError, setTareasError] = useState<boolean>(false);\r\n  const [tareasLoading, setTareasLoading] = useState<boolean>(false);\r\n  const [notas, setNotas] = useState<MisNotas[]>([]);\r\n  const [notasError, setNotasError] = useState<boolean>(false);\r\n  const [notasLoading, setNotasLoading] = useState<boolean>(false);\r\n\r\n  //le pasamos una cantidad\r\n  const calcularCantidadEpetcoins = (epetCoin: TransaccionCoinCreateType[]) => {\r\n    return epetCoin.reduce((acc, item) => {\r\n      return acc + (item.suma ? item.cantidad : -item.cantidad);\r\n    }, 0);\r\n  };\r\n\r\n  //alarcoin si el usuario es profesor\r\n  const transaccionCoinProfe = async (\r\n    data: TransaccionCoinHistorialAulaType[]\r\n  ) => {\r\n    const actualizarCantidadEpetcoins = (\r\n      alarcoinsData: TransaccionCoinHistorialAulaType[]\r\n    ) => {\r\n      const nuevoMap: Record<number, AlumnoType> = { ...alumnosMap };\r\n\r\n      Object.keys(nuevoMap).forEach((id) => {\r\n        nuevoMap[+id] = {\r\n          ...nuevoMap[+id],\r\n          epetcoin: 0,\r\n        };\r\n      });\r\n\r\n      alarcoinsData.forEach((aula) => {\r\n        aula.alumnos.forEach((alumno) => {\r\n          const cantidad = calcularCantidadEpetcoins(alumno?.epetcoins);\r\n          if (nuevoMap[alumno.id]) {\r\n            nuevoMap[alumno.id].epetcoin =\r\n              (nuevoMap[alumno.id].epetcoin || 0) + cantidad;\r\n          }\r\n        });\r\n      });\r\n\r\n      setAlumnosMap(nuevoMap);\r\n    };\r\n    actualizarCantidadEpetcoins(data);\r\n    setTransaccionCoins(data);\r\n    await saveTransaccionCoinProfe(data);\r\n  };\r\n  const transaccionCoinAlumno = async (\r\n    data: TransaccionCoinAulaAlumnoType[]\r\n  ) => {\r\n    setTransaccionCoins(data);\r\n    await saveTransaccionCoinAlumno(data);\r\n  };\r\n\r\n  //nuevo modelo epetcoin\r\n  const loadEpetcoin = async (): Promise<Epetcoin | boolean | undefined> => {\r\n    try {\r\n      const cachedCoin = await getEpetCoinToStorage();\r\n      if (cachedCoin) {\r\n        setEpetcoin(cachedCoin);\r\n        return true;\r\n      }\r\n      const data = await getEpetcoin(); // fetch /me\r\n      if (data?.coin) {\r\n        return false;\r\n      }\r\n      await saveEpetCoin(data);\r\n      setEpetcoin(data);\r\n    } catch (error: any) {\r\n      if (error?.response?.status === 404) {\r\n        setEpetcoin(false); // No hay moneda activa\r\n        return false;\r\n      }\r\n      console.error(\"Error verificando epetcoin:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Cargar todas las tareas del usuario\r\n  const loadTareas = async (forceRefresh: boolean = false) => {\r\n    try {\r\n      setTareasLoading(true);\r\n      if (!forceRefresh) {\r\n        const local = await getTareasStorage();\r\n        if (local) {\r\n          setTareas(local);\r\n          setTareasLoading(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      const data = await GetTareas(); // backend\r\n      setTareas(data);\r\n      await saveTareas(data);\r\n      setTareasError(false)\r\n    } catch (error) {\r\n      setTareasError(true);\r\n      console.error(\"Error cargando tareas:\", error);\r\n    } finally {\r\n      setTareasLoading(false);\r\n    }\r\n  };\r\n\r\n  const refrescarTareasDeAula = async (\r\n    aula_id: number,\r\n    tareasActuales: TareaBase[],\r\n    setTareas: (t: TareaBase[]) => void\r\n  ) => {\r\n    try {\r\n      const nuevas = await GetTareasAula(aula_id);\r\n      const actualizadas = [\r\n        ...tareasActuales.filter((t) => t.aula_id !== aula_id),\r\n        ...nuevas,\r\n      ];\r\n      setTareas(actualizadas);\r\n      await saveTareas(actualizadas);\r\n    } catch (error) {\r\n      console.error(\"Error actualizando tareas del aula:\", error);\r\n    }\r\n  };\r\n\r\n  const loadNotas = async (forceRefresh: boolean = false) => {\r\n    try {\r\n      setNotasLoading(true);\r\n\r\n      if (!forceRefresh) {\r\n        const local = await getNotasAlumnoStorage();\r\n        if (local) {\r\n          setNotas(local);\r\n          setNotasLoading(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      const data = await getNotasMe(); // ← tu función que llama al backend\r\n      setNotas(data);\r\n      await saveNotasAlumno(data);\r\n    } catch (error) {\r\n      console.error(\"Error cargando notas:\", error);\r\n    } finally {\r\n      setNotasLoading(false);\r\n    }\r\n  };\r\n\r\n  //cambiar a epetcoin\r\n  const loadAlarcoins = async (forceRefresh: boolean = false) => {\r\n    setAlarcoinsError(false);\r\n\r\n    try {\r\n      if (user?.is_teacher) {\r\n        const tieneMoneda = await loadEpetcoin(); // paso nuevo\r\n        if (!tieneMoneda) {\r\n          return false; // no sigue si no hay moneda\r\n        }\r\n        if (forceRefresh) {\r\n          const data = await getHistorialProfesor(); // API\r\n          transaccionCoinProfe(data);\r\n          await saveTransaccionCoinProfe(data);\r\n        } else {\r\n          const local = await getTransaccionCoinProfe();\r\n          if (local) {\r\n            transaccionCoinProfe(local);\r\n          } else {\r\n            const data = await getHistorialProfesor(); // API\r\n            transaccionCoinProfe(data);\r\n            await saveTransaccionCoinProfe(data);\r\n          }\r\n        }\r\n      } else {\r\n        if (forceRefresh) {\r\n          const data = await getHistorialAlumno(); // API\r\n          transaccionCoinAlumno(data);\r\n          await saveTransaccionCoinAlumno(data);\r\n        } else {\r\n          const local = await getTransaccionCoinAlumno();\r\n          if (local) {\r\n            transaccionCoinAlumno(local);\r\n          } else {\r\n            const data = await getHistorialAlumno(); // API\r\n            transaccionCoinAlumno(data);\r\n            await saveTransaccionCoinAlumno(data);\r\n          }\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error cargando alarcoins:\", e);\r\n      setAlarcoinsError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadDataAlumno = async () => {\r\n    try {\r\n      const cachedAulas = await getAulaStorage();\r\n      if (cachedAulas) {\r\n        setAulas(cachedAulas);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const aulasData: MateriasType[] = await getMisAulas();\r\n      const aulasProcesadas = aulasData.map((aula) => ({\r\n        ...aula,\r\n        alumnos: [user], // el alumno actual\r\n        alumnoIds: [user.id], // agregás este campo a mano para respetar el tipo MateriasSimpleType\r\n      }));\r\n\r\n      setAulas(aulasProcesadas);\r\n      await saveAula(aulasProcesadas);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const loadDataProfe = async () => {\r\n    try {\r\n      const cachedAulas = await getAulaStorage();\r\n      const cachedAulumnosMap = await getAlumnosStorage();\r\n\r\n      if (cachedAulas && cachedAulumnosMap) {\r\n        setAulas(cachedAulas);\r\n        setAlumnosMap(cachedAulumnosMap);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const aulasData: MateriasAlumnosType[] = await getalumnosAulas();\r\n      const alumnosMapTemp: Record<number, AlumnoType> = {};\r\n      const aulasSinAlumnos = aulasData.map((aula) => {\r\n        aula.alumnos.forEach((alumno) => {\r\n          alumnosMapTemp[alumno.id] = alumno;\r\n        });\r\n        return {\r\n          id: aula.id,\r\n          nombre: aula.nombre,\r\n          ano: aula.ano,\r\n          division: aula.division,\r\n          especialidad: aula.especialidad,\r\n          profesor_id: aula.profesor_id,\r\n          cantidad_clases: aula.cantidad_clases,\r\n          tipo: aula.tipo,\r\n          alumnoIds: aula.alumnos.map((alumno) => alumno.id),\r\n        };\r\n      });\r\n      setAulas(aulasSinAlumnos);\r\n      setAlumnosMap(alumnosMapTemp);\r\n      await saveAula(aulasSinAlumnos);\r\n\r\n      await saveAlumnos(Object.values(alumnosMapTemp));\r\n    } catch (error) {\r\n      console.error(\"Error cargando datos desde appData:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadData = async (tokenParam?: string) => {\r\n    const effectiveToken = tokenParam || token;\r\n    if (!effectiveToken) return;\r\n\r\n    if (user?.is_teacher) {\r\n      await loadDataProfe();\r\n    } else {\r\n      await loadDataAlumno();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [token]);\r\n\r\n  return (\r\n    <AppDataContext.Provider\r\n      value={{\r\n        aulas,\r\n        alumnosMap,\r\n        isLoading,\r\n        loadData,\r\n        transaccioncoins,\r\n        loadAlarcoins,\r\n        alarcoinsError,\r\n        epetCoin,\r\n        tareas,\r\n        loadTareas,\r\n        tareasError,\r\n        tareasLoading,\r\n        notas,\r\n        loadNotas,\r\n        notasLoading,\r\n        notasError,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppDataContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppData = () => {\r\n  const context = useContext(AppDataContext);\r\n  if (!context)\r\n    throw new Error(\"useAppData debe usarse dentro de AppDataProvider\");\r\n  return context;\r\n};\r\n","import { urlBase } from \"../utils/url\";\r\nimport { MateriasAlumnosType, MateriasType } from \"../types/AulaType\";\r\nimport { authFetch } from \"./authRefresh\";\r\n\r\nexport async function getalumnosAulas(): Promise<MateriasAlumnosType[]> {\r\n  const response = await authFetch(`${urlBase}/aulas/mis-aulas-con-alumnos`, {\r\n    method: \"GET\",\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function getMisAulas(): Promise<MateriasType[]> {\r\n  const response = await authFetch(`${urlBase}/aulas/mis-aulas`, {\r\n    method: \"GET\",\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { TareaBase, tareaNueva } from \"../types/TareaType\";\r\nimport { DateFormatIsoLat } from \"../utils/DateFormat\";\r\nimport { getFromStorage } from \"../utils/storage\";\r\nimport { urlBase } from \"../utils/url\";\r\nimport { authFetch } from \"./authRefresh\";\r\n\r\nexport async function GetTareasAula(aula_id: number): Promise<TareaBase[]> {\r\n  const response = await authFetch(`${urlBase}/tareas/aula/${aula_id}`, {});\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al obtener tareas del aula\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function GetTareas(): Promise<TareaBase[]> {\r\n  const response = await authFetch(`${urlBase}/tareas/me`, {});\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al obtener tareas del usuario\");\r\n  }\r\n\r\n  const data = await response.json();\r\n\r\n  const tareasConFechaFormateada = data.map((t: TareaBase) => ({\r\n    ...t,\r\n    fecha_limite: t.fecha_limite ? DateFormatIsoLat(t.fecha_limite) : null,\r\n  }));\r\n\r\n  return tareasConFechaFormateada;\r\n}\r\n\r\nexport async function CrearTarea(tarea: tareaNueva): Promise<tareaNueva> {\r\n  try {\r\n    const response = await authFetch(`${urlBase}/tareas`, {\r\n      method: \"POST\",\r\n\r\n      body: JSON.stringify({\r\n        ...tarea,\r\n        asignados: undefined, // no se envía esto al backend\r\n      }),\r\n    });\r\n    if (!response.ok) throw new Error(\"Error al crear tarea\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"error al guardar tarea\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const eliminarTarea = async (id: number) => {\r\n  const res = await authFetch(`${urlBase}/tareas/${id}`, {\r\n    method: \"DELETE\",\r\n  });\r\n\r\n  if (!res.ok) throw new Error(\"Error al eliminar la tarea\");\r\n};\r\n\r\nexport const actualizarTarea = async (tarea: tareaNueva & { id: number }) => {\r\n  const res = await authFetch(`${urlBase}/tareas/${tarea.id}`, {\r\n    method: \"PUT\", // o PATCH si lo usás\r\n\r\n    body: JSON.stringify(tarea),\r\n  });\r\n\r\n  if (!res.ok) throw new Error(\"Error al actualizar tarea\");\r\n  return await res.json();\r\n};\r\n\r\nexport async function EditarTarea(\r\n  tarea_id: number,\r\n  tarea: Partial<tareaNueva>\r\n): Promise<void> {\r\n  try {\r\n    const response = await authFetch(`${urlBase}/tareas/${tarea_id}`, {\r\n      method: \"PUT\",\r\n\r\n      body: JSON.stringify(tarea),\r\n    });\r\n\r\n    if (!response.ok) throw new Error(\"Error al actualizar tarea\");\r\n  } catch (error) {\r\n    console.log(\"Error al actualizar tarea:\", error);\r\n    throw error;\r\n  }\r\n}\r\n","export const getSaludoFecha = (): { saludo: string; fecha: string } => {\r\n  const now = new Date();\r\n  const hora = now.getHours();\r\n\r\n  let saludo;\r\n  // Determinar saludo\r\n  if (hora >= 6 && hora < 12) {\r\n    saludo = \"Buenos días\";\r\n  } else if (hora >= 12 && hora < 19) {\r\n    saludo = \"Buenas tardes\";\r\n  } else {\r\n    saludo = \"Buenas noches\";\r\n  }\r\n\r\n  // Formatear fecha\r\n  const opcionesFecha: Intl.DateTimeFormatOptions = {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n  };\r\n\r\n  const fecha = now.toLocaleDateString(\"es-ES\", opcionesFecha);\r\n\r\n  return {\r\n    saludo,\r\n    fecha, // ejemplo: \"20 de mayo de 2025\"\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { View, Image } from \"react-native\";\r\nimport { ActivityIndicator, Text, Button } from \"react-native-paper\";\r\n\r\ntype Props = {\r\n  isLoading: boolean;\r\n  hasError: boolean;\r\n  reLoad: () => void;\r\n  children: React.ReactNode;\r\n  errorMessage?: string;\r\n};\r\n\r\nexport default function LoadError({\r\n  isLoading,\r\n  hasError,\r\n  reLoad,\r\n  children,\r\n  errorMessage = \"Ocurrió un error al cargar los datos\",\r\n}: Props) {\r\n  if (isLoading) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color=\"violet\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (hasError) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <Text\r\n          variant=\"titleLarge\"\r\n          style={{ marginBottom: 12, color: \"#9333EA\", textAlign: \"center\" }}\r\n        >\r\n          {errorMessage}\r\n        </Text>\r\n        <Image\r\n          source={require(\"../../assets/errorImagen.png\")}\r\n          style={{\r\n            width: 200,\r\n            height: 200,\r\n            marginBottom: 20,\r\n            borderRadius: 100,\r\n          }}\r\n          resizeMode=\"contain\"\r\n        />\r\n        <Button mode=\"contained\" onPress={reLoad}>\r\n          Reintentar\r\n        </Button>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return <>{children}</>;\r\n}\r\n","import { Text } from \"react-native-paper\";\r\nimport LoadError from \"../../components/LoadError\";\r\n\r\nconst HomeProfesor = () => {\r\n  return (\r\n    <LoadError>\r\n      <Text>Profesores</Text>\r\n    </LoadError>\r\n  );\r\n};\r\n\r\nexport default HomeProfesor;\r\n","export const PrimaryColor = \"#b14aca\";\r\n","import { View, StyleSheet } from \"react-native\";\r\nimport { Card, Text } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { PrimaryColor } from \"../../utils/colors\";\r\n\r\ntype Props = {\r\n  title: string;\r\n  value: string | number;\r\n  icon: string;\r\n  bgColor?: string;\r\n  iconColor?: string;\r\n};\r\n\r\nexport default function ResumenMiniCard({\r\n  title,\r\n  value,\r\n  icon,\r\n  bgColor = \"#F5F5F5\",\r\n}: Props) {\r\n  return (\r\n    <Card style={[styles.card]}>\r\n      <Card.Content>\r\n        <View style={styles.cardContent}>\r\n          <View>\r\n            <Text style={styles.cardTitle}>{title}</Text>\r\n            <Text style={styles.cardValue}>{value}</Text>\r\n          </View>\r\n          <Ionicons name={icon} size={32} color={PrimaryColor} />\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    flex: 1,\r\n    borderRadius: 16,\r\n    marginBottom: 16,\r\n    paddingVertical: 4,\r\n    paddingHorizontal: 2,\r\n    minWidth: 150,\r\n    maxWidth: 160,\r\n  },\r\n  cardContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  cardTitle: {\r\n    fontSize: 14,\r\n    color: \"#666\",\r\n  },\r\n  cardValue: {\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n    marginTop: 4,\r\n  },\r\n});\r\n","import { AsistenciaAlumnoType, AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { urlBase } from \"../utils/url\";\r\nimport { authFetch } from \"./authRefresh\";\r\n\r\nexport async function AsistenciasClase(\r\n  clase_id: number\r\n): Promise<AsistenciaType[]> {\r\n  const response = await authFetch(\r\n    `${urlBase}/asistencias/asistencias-por-clase/${clase_id}`,\r\n    {\r\n      method: \"GET\",\r\n    }\r\n  );\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function getAsistenciasPorClase(): Promise<\r\n  AsistenciaAlumnoType[]\r\n> {\r\n  const response = await authFetch(`${urlBase}/asistencias/mis-asistencias`, {\r\n    method: \"GET\",\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al obtener asistencias\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { IconButton, Text } from \"react-native-paper\";\r\nimport LoadError from \"../../components/LoadError\";\r\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\r\nimport { useAppData } from \"../../context/appDataContext\";\r\nimport { useAuth } from \"../../context/authContent\";\r\nimport { getSaludoFecha } from \"../../utils/getSaludoFecha\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ResumenMiniCard from \"../../components/home/ResumenMiniCard\";\r\nimport { getAsistenciasPorClase } from \"../../api/asistenciasClases\";\r\nimport { AsistenciaAlumnoType } from \"../../types/AsistenciaType\";\r\nimport { getAsistenciasStorage, saveAsistencias } from \"../../utils/storage\";\r\nimport { MisNotas, NotaType } from \"../../types/NotaType\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nconst HomeAlumnos = () => {\r\n  const { user, token } = useAuth();\r\n  const {\r\n    loadAlarcoins,\r\n    loadNotas,\r\n    loadTareas,\r\n    tareas,\r\n    notas,\r\n    epetCoin,\r\n    transaccioncoins,\r\n    aulas,\r\n  } = useAppData();\r\n  const { saludo, fecha } = getSaludoFecha();\r\n  const { width } = useWindowDimensions();\r\n  const isSmallScreen = width < 450;\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<boolean>(false);\r\n  const [asistencia, setAsistencias] = useState<AsistenciaAlumnoType[]>([]);\r\n  const [promedio, setPromedio] = useState<number>();\r\n  const [promedioAsistencia, setPromedioAsistencia] = useState<number>();\r\n\r\n  const getAsistencias = async () => {\r\n    try {\r\n      const data = await getAsistenciasPorClase(token);\r\n      setAsistencias(data);\r\n      await saveAsistencias(data); // actualizar local también\r\n      setPromedioAsistencia(calcularPromedioAsistencia(data)); // actualizar promedio\r\n    } catch (error) {\r\n      console.error(\"Error recargando asistencias\", error);\r\n    }\r\n  };\r\n\r\n  const calcularPromedioNotas = (notasObj: MisNotas[]): number => {\r\n    const todasLasNotas = Object.values(notasObj).flat(); // Flattenea los arrays\r\n    const suma = todasLasNotas.reduce((acc, nota) => acc + nota.nota, 0);\r\n    const cantidad = todasLasNotas.length;\r\n\r\n    if (cantidad === 0) return 0;\r\n    const prom = suma / cantidad;\r\n    return Number.parseFloat(prom.toFixed(2));\r\n  };\r\n\r\n  const loadData = async (refresh = false) => {\r\n    setIsLoading(true);\r\n    try {\r\n      loadAlarcoins(refresh);\r\n      loadNotas(refresh);\r\n      loadTareas(refresh);\r\n\r\n      if (!refresh) {\r\n        const local = await getAsistenciasStorage();\r\n        if (local) {\r\n          setAsistencias(local);\r\n          setPromedioAsistencia(calcularPromedioAsistencia(local)); // calcular promedio desde local\r\n          return;\r\n        }\r\n      }\r\n      await getAsistencias(); // con await para asegurar el flujo\r\n    } catch (error) {\r\n      setError(true);\r\n      console.log(\"error al cargar datos\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const calcularPromedioAsistencia = (\r\n    asistenciasPorMateria: AsistenciaAlumnoType[]\r\n  ) => {\r\n    // Filtramos materias con asistencia ≥ 10%\r\n    const materiasValidas = asistenciasPorMateria.filter(\r\n      (m) => m.porcentaje_asistencia >= 10\r\n    );\r\n\r\n    if (materiasValidas.length === 0) return 0;\r\n\r\n    const sumaPorcentajes = materiasValidas.reduce(\r\n      (acc, m) => acc + m.porcentaje_asistencia,\r\n      0\r\n    );\r\n\r\n    const promedio = sumaPorcentajes / materiasValidas.length;\r\n    return Math.round(promedio * 100) / 100; // redondear a 2 decimales\r\n  };\r\n\r\n  const totalCoins = transaccioncoins?.reduce(\r\n    (acc, item) => acc + item.epetcoins.length,\r\n    0\r\n  );\r\n  const totalClasesDictadas = aulas.reduce((total, aula) => {\r\n    return total + (aula.cantidad_clases || 0);\r\n  }, 0);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!notas || notas.length === 0) return;\r\n    const promedio = calcularPromedioNotas(notas);\r\n    setPromedio(promedio);\r\n  }, [notas]);\r\n  return (\r\n    <LoadError hasError={error} isLoading={isLoading} reLoad={loadData}>\r\n      <View style={[styles.header]}>\r\n        <View>\r\n          <Text variant=\"titleMedium\">{`${saludo}, ${user?.nombre}`}</Text>\r\n\r\n          <Text variant=\"labelMedium\">alumno</Text>\r\n        </View>\r\n        <IconButton\r\n          icon={({ size, color }) => (\r\n            <Ionicons name=\"refresh\" size={size} color={color} />\r\n          )}\r\n          mode=\"contained\"\r\n          onPress={() => loadData(true)}\r\n          style={{ padding: 0, margin: 0 }}\r\n        />\r\n      </View>\r\n      <View style={styles.resumenContainer}>\r\n        <ResumenMiniCard\r\n          title=\"Epetcoins\"\r\n          icon=\"logo-bitcoin\"\r\n          value={totalCoins as number}\r\n        />\r\n        <ResumenMiniCard\r\n          title=\"Clases\"\r\n          icon=\"school-outline\"\r\n          value={totalClasesDictadas}\r\n        />\r\n        <ResumenMiniCard\r\n          title=\"Asistencias\"\r\n          icon=\"bookmark-outline\"\r\n          value={promedioAsistencia as number}\r\n        />\r\n        <ResumenMiniCard\r\n          title=\"Notas\"\r\n          icon=\"clipboard-outline\"\r\n          value={promedio as number}\r\n        />\r\n      </View>\r\n    </LoadError>\r\n  );\r\n};\r\n\r\nexport default HomeAlumnos;\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n    marginBottom: 16,\r\n    gap: 10,\r\n  },\r\n  headerSmall: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    gap: 4,\r\n  },\r\n  resumenContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    gap: 15,\r\n    marginBottom: 10,\r\n  },\r\n  alumnosListContainer: {\r\n    marginTop: 16,\r\n  },\r\n});\r\n","import { StyleSheet, View, useWindowDimensions } from \"react-native\";\r\nimport { Layout } from \"../../layout/layout\";\r\nimport { useAuth } from \"../../context/authContent\";\r\nimport { useAppData } from \"../../context/appDataContext\";\r\nimport { ActivityIndicator, Text } from \"react-native-paper\";\r\n\r\nimport { getSaludoFecha } from \"../../utils/getSaludoFecha\";\r\nimport LoadError from \"../../components/LoadError\";\r\nimport HomeProfesor from \"./HomeProfesor\";\r\nimport HomeAlumnos from \"./HomeAlumnos\";\r\n\r\nconst HomeScreen = () => {\r\n  const { width } = useWindowDimensions();\r\n  const isSmallScreen = width < 400;\r\n\r\n  const { user, loading } = useAuth();\r\n  const { aulas, alumnosMap, isLoading } = useAppData();\r\n  const cargando = isLoading && loading;\r\n\r\n  const totalClasesDictadas = aulas.reduce((total, aula) => {\r\n    return total + (aula.cantidad_clases || 0);\r\n  }, 0);\r\n  const { saludo, fecha } = getSaludoFecha();\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.container}>\r\n        {user?.is_teacher ? <HomeProfesor /> : <HomeAlumnos />}\r\n        {/* <LoadError>\r\n          <View style={[styles.header, isSmallScreen && styles.headerSmall]}>\r\n            <View>\r\n              <Text variant=\"titleMedium\">{`${saludo}, ${user?.nombre}`}</Text>\r\n\r\n              <Text variant=\"labelMedium\">\r\n                {user?.is_teacher ? \"Profesor\" : \"Alumno\"}\r\n              </Text>\r\n            </View>\r\n\r\n            <View style={isSmallScreen && { marginTop: 8 }}>\r\n              <Text variant=\"bodySmall\">{fecha}</Text>\r\n            </View>\r\n          </View>\r\n        </LoadError> */}\r\n      </View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    maxWidth: 1000,\r\n    alignSelf: \"center\", // centra horizontalmente\r\n    width: \"100%\", // asegura que ocupe todo el ancho disponible\r\n    paddingHorizontal: 16,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n    marginBottom: 16,\r\n    gap: 10,\r\n  },\r\n  headerSmall: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    gap: 4,\r\n  },\r\n  cardsContainer: {\r\n    flexWrap: \"wrap\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-between\",\r\n    gap: 16,\r\n    marginBottom: 24,\r\n  },\r\n  alumnosListContainer: {\r\n    marginTop: 16,\r\n  },\r\n});\r\n//  {cargando ? (\r\n//         <ActivityIndicator size={\"large\"} color={PrimaryColor} />\r\n//       ) : (\r\n//         <>\r\n//           <View style={[styles.header, isSmallScreen && styles.headerSmall]}>\r\n//             <View>\r\n//               <Text variant=\"titleMedium\">{`${saludo}, ${user?.nombre}`}</Text>\r\n//               <Text variant=\"labelMedium\">\r\n//                 {user?.is_teacher ? \"Profesor\" : \"Alumno\"}\r\n//               </Text>\r\n//             </View>\r\n//             <View style={isSmallScreen && { marginTop: 8 }}>\r\n//               <Text variant=\"bodySmall\">{fecha}</Text>\r\n//             </View>\r\n//           </View>\r\n//           <View style={styles.cardsContainer}>\r\n//             <ResumenMiniCard\r\n//               title=\"Aulas\"\r\n//               value={aulas.length}\r\n//               icon=\"school\"\r\n//               color={PrimaryColor}\r\n//             />\r\n//             <ResumenMiniCard\r\n//               title=\"Clases\"\r\n//               value={totalClasesDictadas}\r\n//               icon=\"calendar\"\r\n//               color=\"#C93A9F\"\r\n//             />\r\n//             {/* <ResumenMiniCard\r\n//               title=\"Alarcoins\"\r\n//               value={totalClasesDictadas}\r\n//               icon=\"star\"\r\n//               color=\"#FFD700\"\r\n//             /> */}\r\n//             {user?.is_teacher && (\r\n//               <AlumnosList alumnos={Object.values(alumnosMap)} />\r\n//             )}\r\n//           </View>\r\n//         </>\r\n//       )}\r\n","// screens/Login/LoginScreen.tsx\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { loginUser } from \"../api/login\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport { saveToStorage, saveUser } from \"../utils/storage\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { Button, useTheme } from \"react-native-paper\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport { RootStack } from \"../types/route\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Email inválido\").required(\"Requerido\"),\r\n  password: Yup.string().min(6, \"Mínimo 6 caracteres\").required(\"Requerido\"),\r\n});\r\n\r\nexport default function LoginScreen() {\r\n  const navigation = useNavigation<NativeStackNavigationProp<RootStack>>();\r\n  const { loading, setUser, setToken } = useAuth();\r\n  const { loadData } = useAppData();\r\n  const { colors } = useTheme();\r\n  const handleLogin = async (\r\n    values: { email: string; password: string },\r\n    setSubmitting: (isSubmitting: boolean) => void,\r\n    setError: (msg: string) => void,\r\n    resetForm: () => void\r\n  ) => {\r\n    try {\r\n      const response = await loginUser(values);\r\n      resetForm();\r\n      setUser(response.user);\r\n      setToken(response.access_token);\r\n      await saveUser(response.user);\r\n      await saveToStorage(\"token\", response.access_token);\r\n      await saveToStorage(\"refresh_token\", response.refresh_token);\r\n      loadData(response.access_token);\r\n    } catch (error: any) {\r\n      setError(\"Credenciales inválidas\");\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {loading ? (\r\n        <Text>Cargando ...</Text>\r\n      ) : (\r\n        <View style={styles.container}>\r\n          <View style={styles.card}>\r\n            <Text style={styles.title}>Iniciar sesión</Text>\r\n\r\n            <Formik\r\n              initialValues={{ email: \"\", password: \"\" }}\r\n              validationSchema={LoginSchema}\r\n              onSubmit={(values, { setSubmitting, setErrors, resetForm }) =>\r\n                handleLogin(\r\n                  values,\r\n                  setSubmitting,\r\n                  (msg) => setErrors({ password: msg }),\r\n                  resetForm\r\n                )\r\n              }\r\n            >\r\n              {({\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                values,\r\n                errors,\r\n                touched,\r\n                isSubmitting,\r\n              }) => (\r\n                <>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Email\"\r\n                    onChangeText={handleChange(\"email\")}\r\n                    onBlur={handleBlur(\"email\")}\r\n                    value={values.email}\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                  />\r\n                  {touched.email && errors.email && (\r\n                    <Text style={styles.error}>{errors.email}</Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Contraseña\"\r\n                    onChangeText={handleChange(\"password\")}\r\n                    onBlur={handleBlur(\"password\")}\r\n                    value={values.password}\r\n                    secureTextEntry\r\n                  />\r\n                  {touched.password && errors.password && (\r\n                    <Text style={styles.error}>{errors.password}</Text>\r\n                  )}\r\n\r\n                  <Button\r\n                    onPress={() => handleSubmit()}\r\n                    style={{\r\n                      backgroundColor: colors.backdrop,\r\n                      paddingVertical: 8,\r\n                      marginTop: 15,\r\n                    }}\r\n                  >\r\n                    {isSubmitting ? (\r\n                      <ActivityIndicator color=\"#fff\" />\r\n                    ) : (\r\n                      <Text style={styles.buttonText}>Ingresar</Text>\r\n                    )}\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Formik>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  card: {\r\n    width: \"85%\",\r\n    padding: 24,\r\n    borderRadius: 12,\r\n    backgroundColor: \"#fefefe80\",\r\n    elevation: 6, // Android shadow\r\n    shadowColor: \"#000\", // iOS shadow\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    maxWidth: 400,\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    height: 48,\r\n    borderColor: \"#ccc\",\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    paddingHorizontal: 12,\r\n    marginTop: 12,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    fontSize: 12,\r\n    marginTop: 4,\r\n    marginLeft: 4,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"600\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n","import { User } from \"../types/UserType\";\r\nimport { urlBase } from \"../utils/url\";\r\n\r\nexport interface LoginData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface LoginResponse {\r\n  access_token: string;\r\n  refresh_token: string;\r\n  user: User;\r\n}\r\n\r\nexport async function loginUser(data: LoginData): Promise<LoginResponse> {\r\n  const response = await fetch(`${urlBase}/users/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","// services/userService.ts\r\nimport { User, UserUpdateType } from \"../types/UserType\";\r\nimport { urlBase } from \"../utils/url\";\r\nimport { authFetch } from \"./authRefresh\";\r\n\r\nexport async function updateUser(data: UserUpdateType): Promise<User> {\r\n  const response = await authFetch(`${urlBase}/users/me`, {\r\n    method: \"PUT\",\r\n\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al actualizar el usuario\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { Layout } from \"../layout/layout\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Alert,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\nimport {\r\n  Text,\r\n  Card,\r\n  TextInput,\r\n  Button,\r\n  useTheme,\r\n  Divider,\r\n} from \"react-native-paper\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { UserUpdateType } from \"../types/UserType\";\r\nimport { updateUser } from \"../api/updateUser\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  nombre: Yup.string().required(\"El nombre es obligatorio\"),\r\n  apellido: Yup.string().required(\"El apellido es obligatorio\"),\r\n  email: Yup.string().email(\"Email inválido\").required(\"Email requerido\"),\r\n  newPassword: Yup.string().min(6, \"Mínimo 6 caracteres\"),\r\n  confirmPassword: Yup.string().oneOf(\r\n    [Yup.ref(\"newPassword\"), \"\"],\r\n    \"Las contraseñas no coinciden\"\r\n  ),\r\n});\r\n\r\nconst Profile = () => {\r\n  const { user } = useAuth();\r\n  const [editable, setEditable] = useState(false);\r\n  const [nombre, setNombre] = useState(user?.nombre);\r\n  const [apellido, setApellido] = useState(user?.apellido);\r\n  const [email, setEmail] = useState(user?.email);\r\n  const { colors } = useTheme();\r\n  const { width } = useWindowDimensions();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const { setUser } = useAuth();\r\n\r\n  const handleEdit = () => setEditable(true);\r\n\r\n  const handleCancel = () => {\r\n    setEditable(false);\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n  };\r\n\r\n  const handleSave = async (values: UserUpdateType) => {\r\n    const { newPassword, confirmPassword, ...rest } = values;\r\n\r\n    if (newPassword) {\r\n      if (newPassword !== confirmPassword) {\r\n        Alert.alert(\"Error\", \"Las contraseñas no coinciden.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      const updatedUser = await updateUser({\r\n        ...rest,\r\n        password: newPassword || undefined,\r\n      });\r\n\r\n      setUser(updatedUser);\r\n      setEditable(false);\r\n    } catch (error) {\r\n      Alert.alert(\"Error\", (error as Error).message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <ScrollView contentContainerStyle={[styles.container, ,]}>\r\n        <Text\r\n          variant=\"titleLarge\"\r\n          style={[styles.header, { color: colors.primary }]}\r\n        >\r\n          Perfil\r\n        </Text>\r\n        <Text\r\n          variant=\"bodyMedium\"\r\n          style={[styles.subheader, { color: colors.onSurfaceVariant }]}\r\n        >\r\n          Administra tu información personal\r\n        </Text>\r\n\r\n        <Card style={[styles.card, { backgroundColor: colors.surface }]}>\r\n          <View style={styles.cardheader}>\r\n            <Card.Title\r\n              title=\"Información Personal\"\r\n              subtitle=\"Actualiza tu información de cuenta\"\r\n              titleStyle={[styles.cardTitle, { color: colors.primary }]}\r\n              subtitleStyle={[\r\n                styles.cardSubtitle,\r\n                { color: colors.onSurfaceVariant },\r\n              ]}\r\n            />\r\n          </View>\r\n          <Divider\r\n            style={{ marginBottom: 8, backgroundColor: colors.outlineVariant }}\r\n          />\r\n          <Card.Content>\r\n            <Formik\r\n              initialValues={{\r\n                nombre: nombre || \"\",\r\n                apellido: apellido || \"\",\r\n                email: email || \"\",\r\n                newPassword: \"\",\r\n                confirmPassword: \"\",\r\n              }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(values) => {\r\n                handleSave(values);\r\n              }}\r\n              enableReinitialize\r\n            >\r\n              {({\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                values,\r\n                errors,\r\n                touched,\r\n              }) => (\r\n                <View style={styles.form}>\r\n                  <TextInput\r\n                    label=\"Nombre\"\r\n                    value={nombre}\r\n                    onChangeText={setNombre}\r\n                    editable={editable}\r\n                    mode=\"flat\"\r\n                    style={[\r\n                      styles.input,\r\n                      {\r\n                        backgroundColor: editable\r\n                          ? colors.background\r\n                          : colors.surfaceDisabled,\r\n                      },\r\n                    ]}\r\n                    error={!!errors.nombre && touched.nombre}\r\n                    onBlur={handleBlur(\"name\")}\r\n                    left={\r\n                      <TextInput.Icon\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons\r\n                            name=\"person-outline\"\r\n                            color={color}\r\n                            size={size}\r\n                          />\r\n                        )}\r\n                      />\r\n                    }\r\n                  />\r\n                  {editable && errors.nombre && touched.nombre && (\r\n                    <Text style={[styles.error, { color: colors.error }]}>\r\n                      {errors.nombre}\r\n                    </Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    label=\"Apellido\"\r\n                    value={apellido}\r\n                    onChangeText={setApellido}\r\n                    editable={editable}\r\n                    mode=\"flat\"\r\n                    style={[\r\n                      styles.input,\r\n                      {\r\n                        backgroundColor: editable\r\n                          ? colors.background\r\n                          : colors.surfaceDisabled,\r\n                      },\r\n                    ]}\r\n                    error={!!errors.apellido && touched.apellido}\r\n                    onBlur={handleBlur(\"apellido\")}\r\n                    left={\r\n                      <TextInput.Icon\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons\r\n                            name=\"person-outline\"\r\n                            color={color}\r\n                            size={size}\r\n                          />\r\n                        )}\r\n                      />\r\n                    }\r\n                  />\r\n                  {editable && errors.apellido && touched.apellido && (\r\n                    <Text style={[styles.error, { color: colors.error }]}>\r\n                      {errors.apellido}\r\n                    </Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    editable={editable}\r\n                    onChangeText={setEmail}\r\n                    mode=\"flat\"\r\n                    style={[\r\n                      styles.input,\r\n                      { backgroundColor: colors.surfaceDisabled },\r\n                    ]}\r\n                    error={!!errors.email && touched.email}\r\n                    onBlur={handleBlur(\"email\")}\r\n                    left={\r\n                      <TextInput.Icon\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons\r\n                            name=\"mail-outline\"\r\n                            color={color}\r\n                            size={size}\r\n                          />\r\n                        )}\r\n                      />\r\n                    }\r\n                  />\r\n                  {editable && errors.email && touched.email && (\r\n                    <Text style={[styles.error, { color: colors.error }]}>\r\n                      {errors.email}\r\n                    </Text>\r\n                  )}\r\n\r\n                  {editable && (\r\n                    <>\r\n                      <TextInput\r\n                        label=\"Nueva clave\"\r\n                        secureTextEntry\r\n                        value={password}\r\n                        onChangeText={setPassword}\r\n                        placeholder=\"********\"\r\n                        mode=\"flat\"\r\n                        autoComplete=\"off\"\r\n                        textContentType=\"none\"\r\n                        importantForAutofill=\"no\"\r\n                        style={[\r\n                          styles.input,\r\n                          { backgroundColor: colors.background },\r\n                        ]}\r\n                        error={!!errors.newPassword && touched.newPassword}\r\n                        onBlur={handleBlur(\"newPassword\")}\r\n                        left={\r\n                          <TextInput.Icon\r\n                            icon={({ color, size }) => (\r\n                              <Ionicons\r\n                                name=\"lock-closed-outline\"\r\n                                color={color}\r\n                                size={size}\r\n                              />\r\n                            )}\r\n                          />\r\n                        }\r\n                      />\r\n                      {errors.newPassword && touched.newPassword && (\r\n                        <Text style={[styles.error, { color: colors.error }]}>\r\n                          {errors.newPassword}\r\n                        </Text>\r\n                      )}\r\n\r\n                      <TextInput\r\n                        label=\"Repetir clave\"\r\n                        secureTextEntry\r\n                        value={confirmPassword}\r\n                        onChangeText={setConfirmPassword}\r\n                        placeholder=\"********\"\r\n                        mode=\"flat\"\r\n                        style={[styles.input, ,]}\r\n                        left={\r\n                          <TextInput.Icon\r\n                            icon={({ color, size }) => (\r\n                              <Ionicons\r\n                                name=\"lock-closed-outline\"\r\n                                color={color}\r\n                                size={size}\r\n                              />\r\n                            )}\r\n                          />\r\n                        }\r\n                      />\r\n\r\n                      <View style={styles.buttonGroup}>\r\n                        <Button\r\n                          mode=\"outlined\"\r\n                          style={[\r\n                            styles.cancelButton,\r\n                            { borderColor: colors.outline },\r\n                            width < 400 && { flex: 1 },\r\n                          ]}\r\n                          onPress={handleCancel}\r\n                          labelStyle={{ color: colors.primary }}\r\n                        >\r\n                          Cancelar\r\n                        </Button>\r\n                        <Button\r\n                          mode=\"contained\"\r\n                          style={[\r\n                            styles.saveButton,\r\n                            { backgroundColor: colors.primary },\r\n                            width < 400 && { flex: 1 },\r\n                          ]}\r\n                          onPress={handleSubmit as any}\r\n                          labelStyle={{ color: colors.onPrimary }}\r\n                        >\r\n                          Guardar\r\n                        </Button>\r\n                      </View>\r\n                    </>\r\n                  )}\r\n\r\n                  {!editable && (\r\n                    <Button\r\n                      style={[\r\n                        styles.editButton,\r\n                        { backgroundColor: colors.primary },\r\n                        width < 400 && { width: \"100%\", alignSelf: \"center\" },\r\n                      ]}\r\n                      mode=\"contained\"\r\n                      icon={({ color, size }) => (\r\n                        <Ionicons name=\"pencil\" color={color} size={size} />\r\n                      )}\r\n                      onPress={handleEdit}\r\n                      labelStyle={{ color: colors.onPrimary, fontSize: 16 }}\r\n                      contentStyle={{ paddingVertical: 8 }}\r\n                    >\r\n                      Editar\r\n                    </Button>\r\n                  )}\r\n                </View>\r\n              )}\r\n            </Formik>\r\n          </Card.Content>\r\n        </Card>\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexGrow: 1,\r\n    padding: 15,\r\n    alignItems: \"center\",\r\n    minHeight: \"100%\",\r\n  },\r\n  header: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 28,\r\n    marginTop: 16,\r\n    marginBottom: 4,\r\n    alignSelf: \"flex-start\",\r\n    letterSpacing: 0.5,\r\n  },\r\n  subheader: {\r\n    marginBottom: 16,\r\n    alignSelf: \"flex-start\",\r\n    fontSize: 16,\r\n    opacity: 0.85,\r\n  },\r\n  avatarContainer: {\r\n    alignItems: \"center\",\r\n    marginVertical: 16,\r\n    width: \"100%\",\r\n  },\r\n  cardheader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingRight: 8,\r\n    paddingTop: 8,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  cardSubtitle: {\r\n    fontSize: 14,\r\n  },\r\n  editButton: {\r\n    marginTop: 16,\r\n    borderRadius: 20,\r\n    minWidth: 120,\r\n    elevation: 0,\r\n    alignSelf: \"center\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    alignSelf: \"center\",\r\n    marginTop: 16,\r\n    paddingHorizontal: 0,\r\n    borderRadius: 16,\r\n    elevation: 2,\r\n  },\r\n  form: {\r\n    gap: 8,\r\n    marginTop: 8,\r\n    width: \"100%\",\r\n  },\r\n  input: {\r\n    marginBottom: 4,\r\n  },\r\n  error: {\r\n    fontSize: 12,\r\n    marginBottom: 4,\r\n    marginLeft: 4,\r\n  },\r\n  buttonGroup: {\r\n    marginTop: 16,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    gap: 8,\r\n  },\r\n  saveButton: {\r\n    marginLeft: 8,\r\n    borderRadius: 20,\r\n    minWidth: 100,\r\n  },\r\n  cancelButton: {\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 20,\r\n    minWidth: 100,\r\n  },\r\n  logoutButton: {\r\n    marginTop: 32,\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    alignSelf: \"center\",\r\n    borderRadius: 20,\r\n    borderWidth: 1,\r\n    borderColor: \"#e53935\",\r\n    color: \"#e53935\",\r\n  },\r\n});\r\n\r\nexport default Profile;\r\n","export const getInitials = (nombre?: string, apellido?: string) => {\r\n  const n = nombre?.trim()?.[0]?.toUpperCase() ?? \"\";\r\n  const a = apellido?.trim()?.[0]?.toUpperCase() ?? \"\";\r\n  return `${n}${a}`;\r\n};\r\n","import { View, StyleSheet } from \"react-native\";\r\nimport { Avatar, Text } from \"react-native-paper\";\r\nimport { User } from \"../types/UserType\";\r\nimport { useTheme } from \"@react-navigation/native\";\r\nimport { getInitials } from \"../utils/initials\";\r\n\r\ninterface Props {\r\n  isalarcoins: boolean;\r\n  alarcoins: number | undefined;\r\n  user: User;\r\n  loading: boolean;\r\n  desdeProfe?: boolean;\r\n}\r\n\r\nconst AvatarCard = ({\r\n  alarcoins,\r\n  isalarcoins = false,\r\n  user,\r\n  loading,\r\n  desdeProfe,\r\n}: Props) => {\r\n  const { colors } = useTheme();\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.profile,\r\n        isalarcoins && {\r\n          backgroundColor: colors.background,\r\n          borderRadius: 12,\r\n          padding: 16,\r\n          elevation: 2, // o shadow para iOS\r\n          shadowColor: \"#000\",\r\n          shadowOffset: { width: 0, height: 1 },\r\n          shadowOpacity: 0.2,\r\n          shadowRadius: 1.41,\r\n        },\r\n      ]}\r\n    >\r\n      <Avatar.Text\r\n        label={getInitials(user?.nombre, user?.apellido)}\r\n        size={64}\r\n        style={styles.avatar}\r\n      />\r\n      <Text variant=\"titleLarge\" style={styles.name}>\r\n        {loading ? \"Cargando\" : `${user?.nombre} ${user?.apellido}`}\r\n      </Text>\r\n      {!isalarcoins && (\r\n        <Text variant=\"bodySmall\" style={styles.role}>\r\n          {loading ? \"cargando\" : user?.is_teacher ? \"Profesor\" : \"Alumno\"}\r\n        </Text>\r\n      )}\r\n\r\n      {isalarcoins && (\r\n        <View>\r\n          <Text variant=\"bodyMedium\">\r\n            {desdeProfe ? \"epetCoins\" : \"Tus epetCoins\"}\r\n          </Text>\r\n          <Text variant=\"bodyMedium\" style={{ textAlign: \"center\" }}>\r\n            {alarcoins}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  profile: {\r\n    alignItems: \"center\",\r\n    marginBottom: 16,\r\n    maxWidth: 350,\r\n    margin: 10,\r\n    width: \"100%\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#c001f5\",\r\n  },\r\n  name: {\r\n    marginTop: 8,\r\n    fontWeight: \"bold\",\r\n  },\r\n  role: {\r\n    fontSize: 14,\r\n    color: \"#6b7280\",\r\n  },\r\n});\r\n\r\nexport default AvatarCard;\r\n","import { MD3LightTheme, MD3DarkTheme, MD3Theme } from \"react-native-paper\";\r\n\r\nexport const lightTheme: MD3Theme = {\r\n  ...MD3LightTheme,\r\n  colors: {\r\n    ...MD3LightTheme.colors,\r\n    primary: \"#d83dff\",\r\n    background: \"#d1a3ff\",\r\n    surface: \"#d1a3ff\",\r\n    text: \"#2b2b2b\",\r\n    secondary: \"#4ab19f\",\r\n    accent: \"#f2c94c\",\r\n    asistenciaBuena: \"#10b981\",\r\n    asistenciaMedia: \"#ffb93f\",\r\n    asistenciaMala: \"#ef4444\",\r\n  },\r\n};\r\n\r\nexport const darkTheme: MD3Theme = {\r\n  ...MD3DarkTheme,\r\n  colors: {\r\n    ...MD3DarkTheme.colors,\r\n    primary: \"#b14aca\",\r\n    background: \"#302f2f\",\r\n    surface: \"#1e1e1e\",\r\n    text: \"#ffffff\",\r\n    secondary: \"#4ab19f\",\r\n    accent: \"#f2c94c\",\r\n    asistenciaBuena: \"#097551\",\r\n    asistenciaMedia: \"#f59e0b\",\r\n    asistenciaMala: \"#e21313\",\r\n  },\r\n};\r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { Appearance } from \"react-native\";\r\nimport { lightTheme, darkTheme } from \"../utils/theme\";\r\nimport { useColorScheme } from \"react-native\";\r\nimport { getFromStorage, saveToStorage } from \"../utils/storage\";\r\n\r\nconst ThemeContext = createContext({\r\n  isDarkMode: false,\r\n  toggleTheme: () => {},\r\n  theme: lightTheme,\r\n});\r\n\r\nexport const ThemeProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const systemColorScheme = useColorScheme(); // 'light' | 'dark' | null\r\n  const [useSystemTheme, setUseSystemTheme] = useState(true);\r\n  const [isDarkMode, setIsDarkMode] = useState(systemColorScheme === \"dark\");\r\n\r\n  useEffect(() => {\r\n    const loadTheme = async () => {\r\n      const stored = await getFromStorage(\"theme\");\r\n      if (stored === \"light\" || stored === \"dark\") {\r\n        setUseSystemTheme(false);\r\n        setIsDarkMode(stored === \"dark\");\r\n      } else {\r\n        setUseSystemTheme(true);\r\n        setIsDarkMode(systemColorScheme === \"dark\");\r\n      }\r\n    };\r\n    loadTheme();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (useSystemTheme && systemColorScheme) {\r\n      setIsDarkMode(systemColorScheme === \"dark\");\r\n    }\r\n  }, [systemColorScheme, useSystemTheme]);\r\n\r\n  useEffect(() => {\r\n    const listener = Appearance.addChangeListener(({ colorScheme }) => {\r\n      setIsDarkMode(colorScheme === \"dark\");\r\n    });\r\n    return () => listener.remove();\r\n  }, []);\r\n\r\n  const toggleTheme = async () => {\r\n    const newValue = !isDarkMode;\r\n    setIsDarkMode(newValue);\r\n    setUseSystemTheme(false);\r\n    await saveToStorage(\"theme\", newValue ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const theme = isDarkMode ? darkTheme : lightTheme;\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme, theme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useThemeContext = () => useContext(ThemeContext);\r\n","import React from \"react\";\r\nimport { DrawerContentScrollView, DrawerItem } from \"@react-navigation/drawer\";\r\nimport { Drawer, Switch } from \"react-native-paper\";\r\nimport { View, StyleSheet, ScrollView } from \"react-native\";\r\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\r\nimport AvatarCard from \"../components/AvatarCard\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { useThemeContext } from \"../context/themeContext\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\n\r\nexport default function CustomDrawerContent(props: any) {\r\n  const { isDarkMode, toggleTheme } = useThemeContext();\r\n  const { user, loading, logout } = useAuth();\r\n  const { epetCoin } = useAppData();\r\n\r\n  const drawerItems = [\r\n    {\r\n      icon: \"home-outline\",\r\n      label: \"Dashboard\",\r\n      screen: \"Home\",\r\n    },\r\n    {\r\n      icon: \"person-outline\",\r\n      label: \"Perfil\",\r\n      screen: \"Perfil\",\r\n    },\r\n    {\r\n      icon: \"book-outline\",\r\n      label: \"Asistencias y Clases\",\r\n      screen: \"MateriasStack\",\r\n    },\r\n    {\r\n      icon: \"clipboard-outline\",\r\n      label: \"Tareas\",\r\n      screen: \"Tareas\",\r\n    },\r\n    {\r\n      icon: \"logo-bitcoin\",\r\n      label: user?.is_teacher\r\n        ? epetCoin?.nombre\r\n          ? epetCoin?.nombre\r\n          : \"epetCoins\"\r\n        : \"Mis epetCoins\",\r\n      screen: \"Alarcoin\",\r\n    },\r\n    ...(user?.is_teacher\r\n      ? [\r\n          {\r\n            icon: \"people-outline\",\r\n            label: \"Alumnos\",\r\n            screen: \"Alumnos\",\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n  return (\r\n    <DrawerContentScrollView {...props} contentContainerStyle={{ flex: 1 }}>\r\n      <View style={styles.container}>\r\n        {/* Perfil */}\r\n        <AvatarCard user={user} loading={loading} isalarcoins={false} />\r\n        {/* Navegación */}\r\n        <ScrollView>\r\n          <Drawer.Section style={styles.nav}>\r\n            {drawerItems.map((item, index) => (\r\n              <DrawerItem\r\n                key={index}\r\n                icon={({ color, size }) => (\r\n                  <Ionicons name={item.icon as any} color={color} size={size} />\r\n                )}\r\n                label={item.label}\r\n                onPress={() => props.navigation.navigate(item.screen as any)}\r\n              />\r\n            ))}\r\n          </Drawer.Section>\r\n        </ScrollView>\r\n\r\n        {/* Cerrar sesión */}\r\n        <Drawer.Section style={styles.bottom}>\r\n          <View style={[styles.switchRow, styles.themeItem]}>\r\n            <DrawerItem\r\n              icon={({ color, size }) => (\r\n                <Ionicons\r\n                  name={isDarkMode ? \"moon\" : \"sunny\"}\r\n                  color={color}\r\n                  size={size}\r\n                />\r\n              )}\r\n              label={isDarkMode ? \"Modo oscuro\" : \"Modo claro\"}\r\n              onPress={toggleTheme}\r\n              style={{ flex: 1 }}\r\n            />\r\n            <Switch value={isDarkMode} onValueChange={toggleTheme} />\r\n          </View>\r\n\r\n          <DrawerItem\r\n            icon={({ color, size }) => (\r\n              <Feather name=\"log-out\" color={color} size={size} />\r\n            )}\r\n            label=\"Cerrar sesión\"\r\n            onPress={() => {\r\n              logout();\r\n            }}\r\n          />\r\n        </Drawer.Section>\r\n      </View>\r\n    </DrawerContentScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 14,\r\n  },\r\n  nav: {\r\n    marginTop: 10,\r\n  },\r\n  bottom: {\r\n    padding: 3,\r\n  },\r\n  switchRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 8,\r\n  },\r\n  themeItem: {\r\n    paddingRight: 8,\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, Text } from \"react-native\";\r\nimport {\r\n  Button,\r\n  Menu,\r\n  Divider,\r\n  HelperText,\r\n  useTheme,\r\n} from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\ninterface Props {\r\n  historial: { aula_id: number; nombre: string }[];\r\n  onSeleccionar: (id: number | null) => void;\r\n  error?: boolean;\r\n}\r\n\r\nexport const SelectMateria = ({ historial, onSeleccionar, error }: Props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [selected, setSelected] = useState<{\r\n    label: string;\r\n    id: number | null;\r\n  }>({ label: \"Elegir materia\", id: null });\r\n\r\n  const { colors } = useTheme();\r\n\r\n  const openMenu = () => setVisible(true);\r\n  const closeMenu = () => setVisible(false);\r\n\r\n  const handleSelect = (nombre: string, id: number | null) => {\r\n    setSelected({ label: nombre, id });\r\n    closeMenu();\r\n    onSeleccionar(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelected({ label: \"Elegir materia\", id: null });\r\n  }, [historial]);\r\n\r\n  return (\r\n    <View>\r\n      <Menu\r\n        visible={visible}\r\n        onDismiss={closeMenu}\r\n        anchor={\r\n          <Button\r\n            mode={error ? \"contained-tonal\" : \"outlined\"}\r\n            onPress={openMenu}\r\n            contentStyle={styles.buttonContent}\r\n            style={[styles.button, error && { borderColor: colors.error }]}\r\n          >\r\n            <View style={styles.labelWithIcon}>\r\n              <Ionicons\r\n                name=\"book-outline\"\r\n                size={18}\r\n                color={error ? colors.error : colors.onSurface}\r\n                style={styles.iconLeft}\r\n              />\r\n              <View style={styles.labelTextWrapper}>\r\n                <Ionicons\r\n                  name={visible ? \"chevron-up\" : \"chevron-down\"}\r\n                  size={18}\r\n                  color={error ? colors.error : colors.onSurface}\r\n                  style={styles.iconRight}\r\n                />\r\n\r\n                <Text style={[styles.innerLabel, { color: colors.onSurface }]}>\r\n                  {selected.label}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          </Button>\r\n        }\r\n      >\r\n        <Menu.Item\r\n          key=\"default-item\"\r\n          onPress={() => handleSelect(\"Elegir materia\", null)}\r\n          title=\"Elegir materia\"\r\n          leadingIcon={() => (\r\n            <Ionicons name=\"refresh-outline\" size={18} color={colors.primary} />\r\n          )}\r\n        />\r\n        <Divider />\r\n        {historial.map((item) => (\r\n          <Menu.Item\r\n            key={item.aula_id}\r\n            onPress={() => handleSelect(item.nombre, item.aula_id)}\r\n            title={item.nombre}\r\n            leadingIcon={() => (\r\n              <Ionicons\r\n                name=\"school-outline\"\r\n                size={18}\r\n                color={colors.primary}\r\n              />\r\n            )}\r\n          />\r\n        ))}\r\n      </Menu>\r\n\r\n      {error && (\r\n        <HelperText type=\"error\" visible={error}>\r\n          Debes seleccionar una materia.\r\n        </HelperText>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    borderWidth: 1,\r\n  },\r\n  labelWithIcon: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  labelTextWrapper: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 6,\r\n  },\r\n  iconLeft: {\r\n    marginRight: 8,\r\n  },\r\n  iconRight: {\r\n    marginRight: 4,\r\n  },\r\n  innerLabel: {\r\n    paddingHorizontal: 0,\r\n  },\r\n});\r\n","import { useMemo, useState } from \"react\";\r\nimport { View, ScrollView, Alert } from \"react-native\";\r\nimport {\r\n  Modal,\r\n  Portal,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  RadioButton,\r\n  useTheme,\r\n  SegmentedButtons,\r\n  Card,\r\n  Divider,\r\n  Snackbar,\r\n} from \"react-native-paper\";\r\nimport { User } from \"../types/UserType\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport {\r\n  TransaccionCoinAulaAlumnoType,\r\n  TransaccionCoinCreateType,\r\n  TransaccionCoinHistorialType,\r\n} from \"../types/EpetcoinType\";\r\nimport { SelectMateria } from \"./DropDonw\";\r\nimport { crearTransaccion } from \"../api/epetcoins\";\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  onDismiss: () => void;\r\n  user: User | null;\r\n  is_teacher: boolean | undefined;\r\n  selectedAula?: TransaccionCoinAulaAlumnoType;\r\n}\r\n\r\nconst AlarcoinModal = ({\r\n  visible,\r\n  onDismiss,\r\n  user,\r\n  is_teacher,\r\n  selectedAula,\r\n}: Props) => {\r\n  if (!user) return null;\r\n  const { colors } = useTheme();\r\n  const [tab, setTab] = useState(is_teacher ? \"asignar\" : \"historial\");\r\n  const [cantidad, setCantidad] = useState(\"0\");\r\n  const [concepto, setConcepto] = useState(\"\");\r\n  const [tipo, setTipo] = useState<string>(\"1\");\r\n  const [materiaSeleccionada, setMateriaSeleccionada] = useState<number | null>(\r\n    null\r\n  );\r\n  const [visibleSnack, setVisibleSnack] = useState(false);\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  const { transaccioncoins, loadAlarcoins, epetCoin } = useAppData();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const historialPorAula = useMemo(() => {\r\n    if (!user) return [];\r\n\r\n    if (is_teacher) {\r\n      // PROFESOR: busca en todas las aulas\r\n      return (transaccioncoins ?? [])\r\n        .map((aula) => {\r\n          if (\"alumnos\" in aula && Array.isArray(aula.alumnos)) {\r\n            const alumno = aula.alumnos.find(\r\n              (a: { id: number }) => a.id === user.id\r\n            );\r\n            if (alumno) {\r\n              return {\r\n                aula_id: aula.aula_id,\r\n                nombre: aula.nombre,\r\n                epetcoins: alumno.epetcoins || [],\r\n              };\r\n            }\r\n          }\r\n          return null;\r\n        })\r\n        .filter(\r\n          (\r\n            aula\r\n          ): aula is {\r\n            aula_id: number;\r\n            nombre: string;\r\n            epetcoins: TransaccionCoinHistorialType[];\r\n          } => aula !== null\r\n        );\r\n    } else if (selectedAula) {\r\n      return [\r\n        {\r\n          aula_id: selectedAula.id,\r\n          nombre: selectedAula.nombre,\r\n          epetcoins: selectedAula.epetcoins,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return [];\r\n  }, [transaccioncoins, user, is_teacher, selectedAula]);\r\n\r\n  const handleGuardar = async () => {\r\n    if (!materiaSeleccionada || materiaSeleccionada === 0) {\r\n      setMensaje(\"Debes seleccionar una materia válida.\");\r\n      setVisibleSnack(true);\r\n      return;\r\n    }\r\n\r\n    if (!concepto.trim()) {\r\n      Alert.alert(\"Atención\", \"Debes ingresar un concepto.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    const transaccionCoin: TransaccionCoinCreateType = {\r\n      aula_id: materiaSeleccionada,\r\n      alumno_id: user.id,\r\n      detalle: concepto,\r\n      suma: Number(tipo),\r\n      cantidad: Number(cantidad),\r\n      moneda_id: epetCoin?.id,\r\n    };\r\n    try {\r\n      await crearTransaccion(transaccionCoin);\r\n      setCantidad(\"0\");\r\n      setConcepto(\"\");\r\n      setTipo(\"1\");\r\n      setMateriaSeleccionada(null);\r\n      onDismiss();\r\n      loadAlarcoins(true);\r\n      setMensaje(\"Transacción guardado correctamente.\");\r\n      setVisibleSnack(true);\r\n    } catch (error) {\r\n      setMensaje(\"error al guardar\");\r\n      setVisibleSnack(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <Snackbar\r\n        visible={visibleSnack && mensaje !== \"\"}\r\n        duration={1000}\r\n        onDismiss={() => {\r\n          setVisibleSnack(false);\r\n          setMensaje(\"\");\r\n        }}\r\n        action={{\r\n          label: \"Dale\",\r\n          onPress: () => setVisibleSnack(false),\r\n        }}\r\n      >\r\n        {mensaje}\r\n      </Snackbar>\r\n      <Modal\r\n        visible={visible}\r\n        onDismiss={onDismiss}\r\n        contentContainerStyle={{\r\n          backgroundColor: colors.surface,\r\n          padding: 10,\r\n          margin: 10,\r\n          borderRadius: 12,\r\n          width: \"90%\",\r\n          maxWidth: 500,\r\n          justifyContent: \"flex-start\",\r\n          alignSelf: \"center\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            flexWrap: \"nowrap\",\r\n            overflow: \"hidden\",\r\n            marginBottom: 8,\r\n          }}\r\n        >\r\n          <SegmentedButtons\r\n            value={tab}\r\n            onValueChange={setTab}\r\n            buttons={[\r\n              { value: \"historial\", label: \"Historial\" },\r\n              ...(is_teacher ? [{ value: \"asignar\", label: \"Asignar\" }] : []),\r\n            ]}\r\n            style={{\r\n              flex: 1,\r\n              minWidth: 0,\r\n              maxWidth: \"100%\",\r\n              borderRadius: 12,\r\n              overflow: \"hidden\",\r\n            }}\r\n          />\r\n        </View>\r\n        {tab === \"asignar\" && is_teacher && (\r\n          <Card mode=\"contained\" style={{ marginTop: 10, padding: 5 }}>\r\n            <Text variant=\"titleMedium\" style={{ marginBottom: 5 }}>\r\n              {`Gestionar Alarcoins de: ${user.nombre} ${user.apellido}`}\r\n            </Text>\r\n\r\n            <SelectMateria\r\n              historial={historialPorAula}\r\n              onSeleccionar={setMateriaSeleccionada}\r\n            />\r\n\r\n            <Divider style={{ marginVertical: 16 }} />\r\n\r\n            <Text variant=\"labelLarge\" style={{ marginBottom: 4 }}>\r\n              Cantidad\r\n            </Text>\r\n            <View\r\n              style={{ flexDirection: \"row\", alignItems: \"center\", gap: 8 }}\r\n            >\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={() =>\r\n                  setCantidad((prev) => String(Math.max(0, Number(prev) - 1)))\r\n                }\r\n              >\r\n                -\r\n              </Button>\r\n\r\n              <TextInput\r\n                value={cantidad}\r\n                onChangeText={setCantidad}\r\n                keyboardType=\"numeric\"\r\n                mode=\"outlined\"\r\n                style={{ flex: 1 }}\r\n              />\r\n\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={() => setCantidad((prev) => String(Number(prev) + 1))}\r\n              >\r\n                +\r\n              </Button>\r\n            </View>\r\n\r\n            <TextInput\r\n              label=\"Concepto\"\r\n              mode=\"outlined\"\r\n              value={concepto}\r\n              onChangeText={setConcepto}\r\n              style={{ marginTop: 16 }}\r\n            />\r\n\r\n            <Text variant=\"labelLarge\" style={{ marginTop: 16 }}>\r\n              Tipo de operación\r\n            </Text>\r\n            <RadioButton.Group\r\n              onValueChange={(value) => setTipo(value)}\r\n              value={tipo}\r\n            >\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                <RadioButton.Item label=\"Sumar\" value=\"1\" />\r\n                <RadioButton.Item label=\"Restar\" value=\"0\" />\r\n              </View>\r\n            </RadioButton.Group>\r\n\r\n            <Divider style={{ marginVertical: 16 }} />\r\n\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}>\r\n              <Button mode=\"contained\" onPress={handleGuardar}>\r\n                {loading ? \"Guardando...\" : \"Guardar\"}\r\n              </Button>\r\n            </View>\r\n          </Card>\r\n        )}\r\n        {tab === \"historial\" && (\r\n          <View style={{ marginTop: 12 }}>\r\n            <Text variant=\"titleMedium\" style={{ marginBottom: 8 }}>\r\n              Historial de Epetcoins\r\n            </Text>\r\n            {historialPorAula.every(\r\n              (item) => (item.epetcoins ?? []).length === 0\r\n            ) ? (\r\n              <Text style={{ marginTop: 8 }}>No hay historial aún</Text>\r\n            ) : (\r\n              <ScrollView>\r\n                {historialPorAula\r\n                  .filter((aula) => (aula.epetcoins ?? []).length > 0)\r\n\r\n                  .map((aula) => {\r\n                    // Calcular el total de alarcoins para el aula\r\n                    const totalAlarcoins = aula.epetcoins.reduce(\r\n                      (acc, entry) =>\r\n                        acc + (entry.suma ? entry.cantidad : -entry.cantidad),\r\n                      0\r\n                    );\r\n                    return (\r\n                      <Card key={aula.aula_id} style={{ marginBottom: 16 }}>\r\n                        <Card.Title\r\n                          title={\r\n                            <View\r\n                              key={aula.aula_id}\r\n                              style={{\r\n                                flexDirection: \"row\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                            >\r\n                              <Text>{aula.nombre}</Text>\r\n                              <Text\r\n                                style={{\r\n                                  marginLeft: 8,\r\n                                  fontWeight: \"bold\",\r\n                                  color: totalAlarcoins >= 0 ? \"green\" : \"red\",\r\n                                }}\r\n                              >\r\n                                {`(${totalAlarcoins})`}\r\n                              </Text>\r\n                            </View>\r\n                          }\r\n                        />\r\n                        <Card.Content>\r\n                          {aula.epetcoins.map((entry) => (\r\n                            <View key={entry.id}>\r\n                              <View\r\n                                key={entry.id}\r\n                                style={{\r\n                                  flexDirection: \"row\",\r\n                                  justifyContent: \"space-between\",\r\n                                  marginVertical: 4,\r\n                                }}\r\n                              >\r\n                                <Text>\r\n                                  {new Date(entry.fecha).toLocaleDateString()}\r\n                                </Text>\r\n                                <Text>{entry.detalle}</Text>\r\n                                <Text\r\n                                  style={{\r\n                                    color: entry.suma ? \"green\" : \"red\",\r\n                                  }}\r\n                                >\r\n                                  {entry.suma\r\n                                    ? `+${entry.cantidad}`\r\n                                    : `-${entry.cantidad}`}\r\n                                </Text>\r\n                              </View>\r\n                              <Divider />\r\n                            </View>\r\n                          ))}\r\n                        </Card.Content>\r\n                      </Card>\r\n                    );\r\n                  })}\r\n              </ScrollView>\r\n            )}\r\n          </View>\r\n        )}\r\n      </Modal>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nexport default AlarcoinModal;\r\n\r\n//implementar a futuro\r\n\r\n// import React, { useMemo, useState } from \"react\";\r\n// import { Modal, Portal, Card, Text, Button, Divider } from \"react-native-paper\";\r\n// import { View, ScrollView, StyleSheet, Dimensions } from \"react-native\";\r\n// import { TabView, SceneMap, TabBar } from \"react-native-tab-view\";\r\n// import { User } from \"../types/UserType\";\r\n// import { AlarcoinAulaAlumnoType } from \"../types/AlarcoinType\";\r\n// import { useAppData } from \"../context/appDataContext\";\r\n\r\n// interface Props {\r\n//   visible: boolean;\r\n//   onDismiss: () => void;\r\n//   user: User | null;\r\n//   is_teacher: boolean | undefined;\r\n//   selectedAula?: AlarcoinAulaAlumnoType;\r\n// }\r\n\r\n// const AlarcoinModal: React.FC<Props> = ({\r\n//   visible,\r\n//   onDismiss,\r\n//   user,\r\n//   is_teacher,\r\n//   selectedAula,\r\n// }) => {\r\n//   const layout = Dimensions.get(\"window\");\r\n//   const [index, setIndex] = useState(0);\r\n\r\n//   const [routes] = useState([\r\n//     { key: \"historial\", title: \"Historial\" },\r\n//     ...(is_teacher ? [{ key: \"asignar\", title: \"Asignar\" }] : []),\r\n//   ]);\r\n\r\n//   const { alarcoins } = useAppData();\r\n\r\n//   const historial = useMemo(() => {\r\n//     if (!selectedAula || !user) return [];\r\n//     return alarcoins?.alarcoins ?? [];\r\n//   }, [selectedAula, user]);\r\n\r\n//   const renderHistorial = () => (\r\n//     <ScrollView contentContainerStyle={styles.scroll}>\r\n//       <Card>\r\n//         <Card.Title title={selectedAula?.nombre || \"Aula\"} />\r\n//         <Card.Content>\r\n//           {historial.length === 0 ? (\r\n//             <Text>No hay movimientos aún.</Text>\r\n//           ) : (\r\n//             historial.map((entry, index) => (\r\n//               <View key={index} style={styles.entry}>\r\n//                 <Text>{new Date(entry.fecha).toLocaleDateString()}</Text>\r\n//                 <Text>{entry.motivo}</Text>\r\n//                 <Text style={{ color: entry.cantidad > 0 ? \"green\" : \"red\" }}>\r\n//                   {entry.cantidad > 0 ? `+${entry.cantidad}` : entry.cantidad}\r\n//                 </Text>\r\n//                 <Divider style={{ marginVertical: 4 }} />\r\n//               </View>\r\n//             ))\r\n//           )}\r\n//         </Card.Content>\r\n//       </Card>\r\n//     </ScrollView>\r\n//   );\r\n\r\n//   const renderAsignar = () => (\r\n//     <View style={styles.asignar}>\r\n//       <Text style={{ marginBottom: 8 }}>\r\n//         Aquí podrías colocar el formulario de asignación:\r\n//       </Text>\r\n//       <Button mode=\"contained\" onPress={() => {}}>\r\n//         Asignar alarcoins\r\n//       </Button>\r\n//     </View>\r\n//   );\r\n\r\n//   const renderScene = SceneMap({\r\n//     historial: renderHistorial,\r\n//     asignar: renderAsignar,\r\n//   });\r\n\r\n//   return (\r\n//     <Portal>\r\n//       <Modal\r\n//         visible={visible}\r\n//         onDismiss={onDismiss}\r\n//         contentContainerStyle={styles.modal}\r\n//       >\r\n//         <TabView\r\n//           navigationState={{ index, routes }}\r\n//           renderScene={renderScene}\r\n//           onIndexChange={setIndex}\r\n//           initialLayout={{ width: layout.width }}\r\n//           renderTabBar={(props) => (\r\n//             <TabBar\r\n//               {...props}\r\n//               indicatorStyle={{ backgroundColor: \"white\" }}\r\n//               style={{ backgroundColor: \"#6200ee\" }}\r\n//             />\r\n//           )}\r\n//         />\r\n//       </Modal>\r\n//     </Portal>\r\n//   );\r\n// };\r\n\r\n// export default AlarcoinModal;\r\n\r\n// const styles = StyleSheet.create({\r\n//   modal: {\r\n//     margin: 16,\r\n//     backgroundColor: \"white\",\r\n//     borderRadius: 12,\r\n//     padding: 16,\r\n//     maxHeight: \"90%\",\r\n//   },\r\n//   scroll: {\r\n//     paddingBottom: 24,\r\n//   },\r\n//   entry: {\r\n//     marginVertical: 4,\r\n//   },\r\n//   asignar: {\r\n//     padding: 16,\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//   },\r\n// });\r\n","import { Card, Text, useTheme } from \"react-native-paper\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { MateriasSimpleType } from \"../types/AulaType\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\ntype Props = {\r\n  materia: MateriasSimpleType;\r\n  onPress?: (materia: MateriasSimpleType) => void;\r\n  porcentaje?: number;\r\n  is_alumno: boolean;\r\n  alarcoin?: number;\r\n  coin?: string;\r\n};\r\n\r\nexport default function MateriasCard({\r\n  materia,\r\n  onPress,\r\n  porcentaje = 0,\r\n  is_alumno,\r\n  alarcoin,\r\n  coin,\r\n}: Props) {\r\n  const { colors } = useTheme();\r\n  const getColorFromPorcentaje = (porcentaje: number) => {\r\n    if (porcentaje === 0) return [\"transparent\", \"transparent\"];\r\n    if (porcentaje < 60) return [colors.background, colors.asistenciaMala]; // rojo\r\n    if (porcentaje < 79) return [colors.background, colors.asistenciaMedia]; // naranja\r\n\r\n    return [colors.background, colors.asistenciaBuena]; // verde\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      style={[styles.card]}\r\n      mode=\"outlined\"\r\n      onPress={onPress ? () => onPress(materia) : undefined}\r\n    >\r\n      <LinearGradient\r\n        colors={\r\n          is_alumno && !alarcoin\r\n            ? getColorFromPorcentaje(porcentaje)\r\n            : [\"#trnasparent\", \"transparent\"]\r\n        }\r\n        start={{ x: 0.4, y: 0.3 }}\r\n        end={{ x: 1, y: 1 }}\r\n        style={{ borderRadius: 8, padding: 10 }}\r\n      >\r\n        <Card.Content style={styles.cardContent}>\r\n          <View style={styles.infoLeft}>\r\n            <Text variant=\"titleMedium\">{materia.nombre}</Text>\r\n            <View style={styles.scheduleRow}>\r\n              <Text variant=\"bodySmall\">\r\n                {`${materia.ano}° ${materia.division}° - ${materia.especialidad}`}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.infoRight}>\r\n            <Text variant=\"labelSmall\">\r\n              {is_alumno && alarcoin == null\r\n                ? \"Asistencias\"\r\n                : alarcoin != null\r\n                ? coin\r\n                : \" Clases dictadas\"}\r\n            </Text>\r\n            <Text variant=\"titleMedium\" style={styles.classCount}>\r\n              {is_alumno && alarcoin == null\r\n                ? `${porcentaje}%`\r\n                : alarcoin != null\r\n                ? alarcoin\r\n                : materia.cantidad_clases}\r\n            </Text>\r\n          </View>\r\n        </Card.Content>\r\n      </LinearGradient>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    marginBottom: 16,\r\n    width: \"100%\",\r\n    marginHorizontal: 10,\r\n    maxWidth: 450,\r\n    borderRadius: 8,\r\n    elevation: 3,\r\n    alignSelf: \"center\",\r\n  },\r\n  cardContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  infoLeft: {\r\n    flex: 1,\r\n    gap: 4,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    gap: 6,\r\n  },\r\n\r\n  infoRight: {\r\n    alignItems: \"flex-end\",\r\n  },\r\n\r\n  classCount: {\r\n    marginTop: 2,\r\n    fontWeight: \"600\",\r\n  },\r\n});\r\n","import { FlatList, View, useWindowDimensions } from \"react-native\";\r\nimport React from \"react\";\r\n\r\ninterface ResponsiveGridProps<T> {\r\n  items: T[];\r\n  renderItem: (item: T) => React.ReactElement | null;\r\n  numColumns?: number;\r\n  getKey: (item: T) => string | number;\r\n  refreshing?: boolean;\r\n  onRefresh?: () => void;\r\n  ListEmptyComponent?: React.ReactElement | null;\r\n  ListFooterComponent?: React.ReactElement | null;\r\n  alumno?: boolean;\r\n}\r\n\r\nexport default function ResponsiveGrid<T>({\r\n  items,\r\n  renderItem,\r\n  getKey,\r\n  numColumns,\r\n  refreshing,\r\n  onRefresh,\r\n  ListEmptyComponent,\r\n  ListFooterComponent,\r\n  alumno,\r\n}: ResponsiveGridProps<T>) {\r\n  const { width } = useWindowDimensions();\r\n\r\n  const computedColumns =\r\n    alumno === true ? 1 : numColumns ? numColumns : width >= 900 ? 2 : 1;\r\n\r\n  return (\r\n    <FlatList\r\n      data={items}\r\n      key={computedColumns} // para forzar re-render al cambiar columnas\r\n      keyExtractor={(item) => getKey(item).toString()}\r\n      numColumns={computedColumns}\r\n      refreshing={refreshing}\r\n      onRefresh={onRefresh}\r\n      contentContainerStyle={{\r\n        padding: 12,\r\n        gap: 12,\r\n        paddingBottom: 32,\r\n      }}\r\n      columnWrapperStyle={\r\n        computedColumns > 1\r\n          ? {\r\n              gap: 12,\r\n              justifyContent: \"space-between\",\r\n              marginBottom: 12,\r\n            }\r\n          : undefined\r\n      }\r\n      renderItem={({ item }) => (\r\n        <View style={{ flex: 1, marginBottom: 12 }}>{renderItem(item)}</View>\r\n      )}\r\n      ListEmptyComponent={ListEmptyComponent}\r\n      ListFooterComponent={ListFooterComponent}\r\n    />\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { TextInput, Button, Text } from \"react-native-paper\";\r\nimport { useAuth } from \"../context/authContent\"; // o el path correcto\r\nimport { crearEpetcoin } from \"../api/epetcoins\";\r\n\r\nconst CrearEpetcoinForm = ({ onCreated }: { onCreated: () => void }) => {\r\n  const { user } = useAuth();\r\n  const apellido = user?.apellido || \"Mi\";\r\n  const sugerido = `${apellido}Coin`;\r\n\r\n  const [nombre, setNombre] = useState(sugerido);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleCrear = async () => {\r\n    if (!nombre.trim()) {\r\n      setError(\"Debes ingresar un nombre válido\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n    try {\r\n      await crearEpetcoin(nombre); // hace POST al backend\r\n      onCreated(); // callback al padre para recargar\r\n    } catch (e) {\r\n      setError(\"Error al crear la moneda\");\r\n      console.error(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ gap: 12, padding: 16 }}>\r\n      <Text variant=\"titleMedium\">Activar tu moneda personalizada</Text>\r\n\r\n      <TextInput\r\n        label=\"Nombre de la moneda\"\r\n        value={nombre}\r\n        onChangeText={setNombre}\r\n        mode=\"outlined\"\r\n      />\r\n\r\n      {error ? <Text style={{ color: \"red\" }}>{error}</Text> : null}\r\n\r\n      <Button\r\n        mode=\"contained\"\r\n        onPress={handleCrear}\r\n        loading={loading}\r\n        disabled={loading}\r\n      >\r\n        Crear Epetcoin\r\n      </Button>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CrearEpetcoinForm;\r\n","import { Layout } from \"../layout/layout\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { Platform, Pressable, useWindowDimensions, View } from \"react-native\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport AvatarCard from \"../components/AvatarCard\";\r\nimport AlarcoinModal from \"../components/EpetcoinModal\";\r\nimport { User } from \"../types/UserType\";\r\nimport LoadError from \"../components/LoadError\";\r\nimport MateriasCard from \"../components/MateriaCard\";\r\nimport {\r\n  TransaccionCoinAlumnoType,\r\n  TransaccionCoinAulaAlumnoType,\r\n} from \"../types/EpetcoinType\";\r\nimport ResponsiveGrid from \"../components/ResponsiveGrid\";\r\nimport { MateriasAlumnosType } from \"../types/AulaType\";\r\nimport { Button, Text } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport CrearEpetcoinForm from \"../components/CrearEpetcoinForm\";\r\n\r\nconst Alarcoin = () => {\r\n  const { user } = useAuth();\r\n  const {\r\n    alumnosMap,\r\n    loadAlarcoins,\r\n    alarcoinsError,\r\n    aulas,\r\n    epetCoin,\r\n    transaccioncoins,\r\n  } = useAppData();\r\n  const [selectedAlumno, setSelectedAlumno] = useState<User | null>(null);\r\n  const [selectedAula, setSelectedAula] =\r\n    useState<TransaccionCoinAulaAlumnoType>();\r\n  const [visible, setVisible] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { width } = useWindowDimensions();\r\n\r\n  const numColumns = useMemo(() => {\r\n    if (width >= 1000) return 3;\r\n    if (width >= 600) return 2;\r\n    return 1;\r\n  }, [width]);\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      setIsLoading(true);\r\n      loadAlarcoins();\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetch();\r\n  }, []);\r\n  const handleOpenModal = (item: User | TransaccionCoinAlumnoType) => {\r\n    if (user?.is_teacher) {\r\n      setSelectedAlumno(item as User);\r\n    } else {\r\n      setSelectedAlumno(user);\r\n      setSelectedAula(item as TransaccionCoinAulaAlumnoType);\r\n    }\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const renderItem = (item: User | TransaccionCoinAlumnoType) => {\r\n    if (!user?.is_teacher) {\r\n      const materia = aulas.find(\r\n        (a) => a.id === (item as TransaccionCoinAulaAlumnoType).aula_id\r\n      );\r\n      if (!materia) return null;\r\n\r\n      const epetcoins = (item as TransaccionCoinAulaAlumnoType).epetcoins ?? [];\r\n\r\n      const total = epetcoins.reduce(\r\n        (acc, a) => acc + (a.suma ? a.cantidad : -a.cantidad),\r\n        0\r\n      );\r\n\r\n      return (\r\n        <Pressable\r\n          style={({ pressed }) => [{ flex: 1, opacity: pressed ? 0.5 : 1 }]}\r\n          onPress={() => handleOpenModal(item)}\r\n        >\r\n          <MateriasCard\r\n            coin={(item as TransaccionCoinAlumnoType).nombre_moneda}\r\n            materia={materia}\r\n            is_alumno={true}\r\n            alarcoin={total}\r\n          />\r\n        </Pressable>\r\n      );\r\n    } else {\r\n      return (\r\n        <Pressable\r\n          style={({ pressed }) => [{ flex: 1, opacity: pressed ? 0.5 : 1 }]}\r\n          onPress={() => handleOpenModal(item)}\r\n        >\r\n          <AvatarCard\r\n            user={item as User}\r\n            loading={false}\r\n            isalarcoins={true}\r\n            alarcoins={(item as User).epetcoin}\r\n            desdeProfe={true}\r\n          />\r\n        </Pressable>\r\n      );\r\n    }\r\n  };\r\n\r\n  const dataList: (\r\n    | MateriasAlumnosType\r\n    | User\r\n    | TransaccionCoinAulaAlumnoType\r\n  )[] = user?.is_teacher ? Object.values(alumnosMap) : transaccioncoins ?? [];\r\n\r\n  return (\r\n    <Layout>\r\n      <LoadError\r\n        isLoading={isLoading}\r\n        hasError={alarcoinsError}\r\n        errorMessage=\"Error al cargar los epetCoins\"\r\n        reLoad={() => loadAlarcoins(true)}\r\n      >\r\n        {isLoading ? (\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginVertical: 40,\r\n            }}\r\n          >\r\n            <Ionicons\r\n              name=\"refresh-circle\"\r\n              size={48}\r\n              color=\"#888\"\r\n              style={{ marginBottom: 10 }}\r\n            />\r\n            <Text variant=\"titleMedium\">Cargando...</Text>\r\n          </View>\r\n        ) : (\r\n          <>\r\n            {user?.is_teacher ? (\r\n              epetCoin?.nombre ? (\r\n                <Text>{epetCoin.nombre}</Text>\r\n              ) : (\r\n                <CrearEpetcoinForm onCreated={loadAlarcoins} />\r\n              )\r\n            ) : null}\r\n\r\n            {(!user?.is_teacher || epetCoin?.nombre) && (\r\n              <>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <Text variant=\"titleMedium\">\r\n                    {user?.is_teacher ? \"Tus Alumnos\" : \"Tus EpetCoin\"}\r\n                  </Text>\r\n                  {Platform.OS !== \"android\" && Platform.OS !== \"ios\" && (\r\n                    <View style={{ marginBottom: 10, width: 200 }}>\r\n                      <Button\r\n                        mode=\"contained\"\r\n                        style={{\r\n                          borderRadius: 8,\r\n                          marginVertical: 10,\r\n                        }}\r\n                        onPress={() => loadAlarcoins(true)}\r\n                        icon={({ color, size }) => (\r\n                          <Ionicons name=\"refresh\" color={color} size={size} />\r\n                        )}\r\n                      >\r\n                        Refrescar\r\n                      </Button>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n                {/* Agregar validad si hay transaccion para mostrar */}\r\n                {!user?.is_teacher && transaccioncoins?.length === 0 ? (\r\n                  <Text style={{ marginTop: 20, textAlign: \"center\" }}>\r\n                    Aún no tenés EpetCoins asignadas.\r\n                  </Text>\r\n                ) : (\r\n                  <ResponsiveGrid\r\n                    items={dataList}\r\n                    numColumns={numColumns}\r\n                    renderItem={renderItem}\r\n                    getKey={(item) =>\r\n                      user?.is_teacher\r\n                        ? (item as User).id\r\n                        : (item as TransaccionCoinAulaAlumnoType).aula_id\r\n                    }\r\n                    refreshing={isLoading}\r\n                    onRefresh={() => loadAlarcoins(true)}\r\n                    alumno={!user?.is_teacher}\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            <AlarcoinModal\r\n              visible={visible}\r\n              onDismiss={handleCloseModal}\r\n              user={selectedAlumno}\r\n              is_teacher={user?.is_teacher}\r\n              selectedAula={selectedAula}\r\n            />\r\n          </>\r\n        )}\r\n      </LoadError>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Alarcoin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport {\r\n  TextInput,\r\n  Button,\r\n  Text,\r\n  Card,\r\n  ActivityIndicator,\r\n} from \"react-native-paper\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport { updateUser } from \"../api/updateUser\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { saveUser, getFromStorage } from \"../utils/storage\";\r\n\r\nconst ChangePassword = () => {\r\n  const { setUser } = useAuth();\r\n  const navigator = useNavigation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [apiError, setApiError] = useState<string | null>(null);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    newPassword: Yup.string()\r\n      .min(6, \"La contraseña debe tener al menos 6 caracteres\")\r\n      .matches(\r\n        /[A-Z]/,\r\n        \"La contraseña debe contener al menos una letra mayúscula\"\r\n      )\r\n      .required(\"Campo obligatorio\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"newPassword\")], \"Las contraseñas no coinciden\")\r\n      .required(\"Campo obligatorio\"),\r\n  });\r\n\r\n  const handleSubmit = async (values: {\r\n    newPassword: string;\r\n    confirmPassword: string;\r\n  }) => {\r\n    setLoading(true);\r\n    setApiError(null);\r\n    try {\r\n      const updatedUser = await updateUser({\r\n        password: values.newPassword,\r\n        cambiarContrasena: false,\r\n      });\r\n\r\n      setUser({ ...updatedUser });\r\n      await saveUser(updatedUser);\r\n    } catch (error: any) {\r\n      setApiError(error.message || \"Error al cambiar la contraseña\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.container}>\r\n        <Card style={styles.card}>\r\n          <Card.Title\r\n            title=\"Cambia tu contraseña\"\r\n            subtitle=\"Por seguridad, debes actualizarla\"\r\n          />\r\n          <Card.Content>\r\n            <Formik\r\n              initialValues={{ newPassword: \"\", confirmPassword: \"\" }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {({\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                values,\r\n                errors,\r\n                touched,\r\n              }) => (\r\n                <View>\r\n                  <TextInput\r\n                    label=\"Nueva contraseña\"\r\n                    secureTextEntry\r\n                    value={values.newPassword}\r\n                    onChangeText={handleChange(\"newPassword\")}\r\n                    onBlur={handleBlur(\"newPassword\")}\r\n                    style={styles.input}\r\n                  />\r\n                  {touched.newPassword && errors.newPassword && (\r\n                    <Text style={styles.error}>{errors.newPassword}</Text>\r\n                  )}\r\n\r\n                  <TextInput\r\n                    label=\"Repetir contraseña\"\r\n                    secureTextEntry\r\n                    value={values.confirmPassword}\r\n                    onChangeText={handleChange(\"confirmPassword\")}\r\n                    onBlur={handleBlur(\"confirmPassword\")}\r\n                    style={styles.input}\r\n                  />\r\n                  {touched.confirmPassword && errors.confirmPassword && (\r\n                    <Text style={styles.error}>{errors.confirmPassword}</Text>\r\n                  )}\r\n\r\n                  {apiError && <Text style={styles.error}>{apiError}</Text>}\r\n\r\n                  <Button\r\n                    mode=\"contained\"\r\n                    onPress={() => handleSubmit()}\r\n                    style={styles.button}\r\n                    disabled={loading}\r\n                    loading={loading}\r\n                  >\r\n                    Guardar contraseña\r\n                  </Button>\r\n                </View>\r\n              )}\r\n            </Formik>\r\n          </Card.Content>\r\n        </Card>\r\n      </View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n    justifyContent: \"center\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n  },\r\n  input: {\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    marginBottom: 10,\r\n  },\r\n});\r\n","import { Layout } from \"../layout/layout\";\r\nimport { ScrollView, StyleSheet, View } from \"react-native\";\r\nimport { Button, IconButton, Text } from \"react-native-paper\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport MateriasCard from \"../components/MateriaCard\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport { RootStack } from \"../types/route\";\r\nimport { MateriasSimpleType } from \"../types/AulaType\";\r\nimport { useWindowDimensions } from \"react-native\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AsistenciaAlumnoType, AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { getAsistenciasPorClase } from \"../api/asistenciasClases\";\r\nimport { getAsistenciasStorage, saveAsistencias } from \"../utils/storage\";\r\n\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\ntype Props = NativeStackNavigationProp<RootStack, \"MateriasStack\">;\r\n\r\nconst Materias = () => {\r\n  const { width } = useWindowDimensions();\r\n  const numColums = width >= 900 ? 2 : 1;\r\n  const { user } = useAuth();\r\n  const navigation = useNavigation<Props>();\r\n  const { aulas } = useAppData();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [asistencias, setAsistencias] = useState<AsistenciaAlumnoType[]>([]);\r\n\r\n  const getAsistencias = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const data = await getAsistenciasPorClase();\r\n      setAsistencias(data);\r\n      await saveAsistencias(data); // actualizar local también\r\n    } catch (error) {\r\n      console.error(\"Error recargando asistencias\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAsistencias = async () => {\r\n      setIsLoading(true);\r\n\r\n      // 1. Intentar obtener desde local\r\n      const local = await getAsistenciasStorage();\r\n      if (local) {\r\n        setAsistencias(local);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      // 2. Si no hay local, fetch desde backend\r\n      getAsistencias();\r\n    };\r\n\r\n    if (!user?.is_teacher) fetchAsistencias();\r\n  }, [isLoading]);\r\n\r\n  const handlerNavigation = (\r\n    item: MateriasSimpleType,\r\n    asistencia: AsistenciaType[]\r\n  ) => {\r\n    navigation.navigate(\"MateriasStack\", {\r\n      screen: \"DetalleMateria\",\r\n      params: { materia: item, asistencia: asistencia },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.header}>\r\n        <View>\r\n          <Text variant=\"titleLarge\" style={styles.title}>\r\n            Mis Materias\r\n          </Text>\r\n          <Text variant=\"bodyMedium\" style={styles.subtitle}>\r\n            {user?.is_teacher\r\n              ? \"Lista de materias que dictas\"\r\n              : \"Lista de materias que cursas\"}\r\n          </Text>\r\n        </View>\r\n\r\n        {!user?.is_teacher ? (\r\n          <Button\r\n            mode=\"contained\"\r\n            style={styles.button}\r\n            onPress={getAsistencias}\r\n            icon={({ color, size }) => (\r\n              <Ionicons name=\"refresh\" color={color} size={size} />\r\n            )}\r\n          >\r\n            Refrescar\r\n          </Button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </View>\r\n\r\n      <ScrollView\r\n        contentContainerStyle={{\r\n          paddingBottom: 32,\r\n          gap: 12,\r\n          flexDirection: numColums > 1 ? \"row\" : \"column\",\r\n          flexWrap: numColums > 1 ? \"wrap\" : \"nowrap\",\r\n          justifyContent: numColums > 1 ? \"center\" : \"flex-start\",\r\n        }}\r\n      >\r\n        {aulas.map((item) => {\r\n          const asistenciaAula = asistencias.find((a) => a.aula_id === item.id);\r\n          const porcentaje = asistenciaAula?.porcentaje_asistencia;\r\n          const asistenciaAulaClases = asistencias.find(\r\n            (a) => a.aula_id === item.id\r\n          );\r\n          const asistenciasA = asistenciaAulaClases?.asistencias || [];\r\n          return (\r\n            <View\r\n              key={item.id}\r\n              style={[\r\n                styles.card,\r\n                numColums > 1 && { width: width / 2 - 24, marginHorizontal: 6 },\r\n              ]}\r\n            >\r\n              <MateriasCard\r\n                materia={item}\r\n                onPress={() => handlerNavigation(item, asistenciasA)}\r\n                porcentaje={porcentaje}\r\n                is_alumno={!user?.is_teacher}\r\n                alarcoin={undefined}\r\n              />\r\n            </View>\r\n          );\r\n        })}\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Materias;\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  header: {\r\n    marginBottom: 24,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignContent: \"center\",\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  subtitle: {\r\n    marginTop: 4,\r\n    color: \"#6b7280\",\r\n  },\r\n  card: {\r\n    marginBottom: 16,\r\n  },\r\n  cardContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  infoLeft: {\r\n    flex: 1,\r\n    gap: 4,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    gap: 6,\r\n  },\r\n  scheduleText: {\r\n    color: \"#6b7280\",\r\n  },\r\n  infoRight: {\r\n    alignItems: \"flex-end\",\r\n  },\r\n  label: {\r\n    color: \"#6b7280\",\r\n  },\r\n  classCount: {\r\n    marginTop: 2,\r\n    fontWeight: \"600\",\r\n  },\r\n  button: {\r\n    borderRadius: 8,\r\n    marginVertical: 10,\r\n  },\r\n});\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Pressable,\r\n  useWindowDimensions,\r\n  Alert,\r\n} from \"react-native\";\r\nimport {\r\n  Text,\r\n  Button,\r\n  RadioButton,\r\n  TextInput,\r\n  ActivityIndicator,\r\n  Portal,\r\n  Modal,\r\n  useTheme,\r\n  Card,\r\n} from \"react-native-paper\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\nimport { useAppData } from \"../context/appDataContext\";\r\nimport { AsistenciasClase } from \"../api/asistenciasClases\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { setClaseAsistencia } from \"../api/setClaseAsistencia\";\r\n\r\ntype Props = {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  clase: ClaseType;\r\n};\r\n\r\ntype AsistenciaEdit = {\r\n  alumno_id: number;\r\n  presente: number;\r\n  justificado?: string;\r\n};\r\n\r\nexport default function ModalAsistencia({ visible, onClose, clase }: Props) {\r\n  const { token } = useAuth();\r\n  const { alumnosMap, aulas } = useAppData();\r\n  const [asistencias, setAsistencias] = useState<AsistenciaType[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [filtroAlumno, setFiltroAlumno] = useState(\"\");\r\n\r\n  const [asistenciasEditadas, setAsistenciasEditadas] = useState<\r\n    AsistenciaEdit[]\r\n  >([]);\r\n  const { colors } = useTheme();\r\n  const { width } = useWindowDimensions();\r\n\r\n  const isMobile = width < 600;\r\n  const columns = width >= 1000 ? 3 : width >= 700 ? 2 : 1;\r\n\r\n  const aula = aulas.find((a) => a.id === clase.aula_id);\r\n  // const alumnos =\r\n  //   aula?.alumnoIds.map((id) => alumnosMap[id]).filter(Boolean) ?? [];\r\n  const alumnos =\r\n    aula?.alumnoIds\r\n      .map((id) => alumnosMap[id])\r\n      .filter(Boolean)\r\n      .filter((alumno) =>\r\n        clase.grupo_id ? alumno.grupo_id === clase.grupo_id : true\r\n      ) ?? [];\r\n\r\n  useEffect(() => {\r\n    if (!visible) return;\r\n\r\n    setIsLoading(true);\r\n    const getAsistencias = async () => {\r\n      try {\r\n        const data = await AsistenciasClase(clase.id);\r\n        setAsistencias(data);\r\n        if (data.length === 0) {\r\n          const todosPresentes: AsistenciaEdit[] = alumnos.map((alumno) => ({\r\n            alumno_id: alumno.id,\r\n            presente: 1,\r\n          }));\r\n          setAsistenciasEditadas(todosPresentes);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al obtener asistencias:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    getAsistencias();\r\n    setAsistenciasEditadas([]);\r\n  }, [visible, clase.id]);\r\n\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      setAsistencias([]);\r\n      setAsistenciasEditadas([]);\r\n    }\r\n  }, [visible]);\r\n\r\n  const alumnosFiltrados = alumnos.filter((alumno) => {\r\n    const texto = filtroAlumno.toLowerCase();\r\n    return (\r\n      alumno.nombre.toLowerCase().includes(texto) ||\r\n      alumno.apellido.toLowerCase().includes(texto)\r\n    );\r\n  });\r\n\r\n  const handleChange = (alumno_id: number, presente: number) => {\r\n    setAsistenciasEditadas((prev) => {\r\n      const existente = prev.find((a) => a.alumno_id === alumno_id);\r\n      if (existente) {\r\n        return prev.map((a) =>\r\n          a.alumno_id === alumno_id ? { ...a, presente } : a\r\n        );\r\n      } else {\r\n        return [...prev, { alumno_id, presente }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleJustificacionChange = (\r\n    alumno_id: number,\r\n    justificado: string\r\n  ) => {\r\n    setAsistenciasEditadas((prev) => {\r\n      const existente = prev.find((a) => a.alumno_id === alumno_id);\r\n      if (existente) {\r\n        return prev.map((a) =>\r\n          a.alumno_id === alumno_id ? { ...a, justificado } : a\r\n        );\r\n      } else {\r\n        return [...prev, { alumno_id, presente: 2, justificado }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleGuardar = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      if (asistenciasEditadas.length === 0) {\r\n        Alert.alert(\"Sin cambios\", \"No se detectaron asistencias editadas.\");\r\n        return;\r\n      }\r\n\r\n      const payload = alumnos.map((alumno) => {\r\n        const editada = asistenciasEditadas.find(\r\n          (a) => a.alumno_id === alumno.id\r\n        );\r\n\r\n        return {\r\n          alumno_id: alumno.id,\r\n          presente: editada?.presente ?? 1,\r\n          justificado: editada?.justificado ?? \"no\",\r\n        };\r\n      });\r\n\r\n      await setClaseAsistencia(clase.id, payload);\r\n\r\n      Alert.alert(\r\n        \"Guardado\",\r\n        \"Las asistencias fueron actualizadas correctamente.\"\r\n      );\r\n      setAsistenciasEditadas([]);\r\n      onClose();\r\n    } catch (error: any) {\r\n      console.error(\"Error al guardar asistencias:\", error);\r\n      Alert.alert(\"Error\", error.message || \"Ocurrió un error al guardar.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <Modal\r\n        visible={visible}\r\n        onDismiss={onClose}\r\n        contentContainerStyle={[\r\n          styles.modalContainer,\r\n          { backgroundColor: colors.background },\r\n        ]}\r\n      >\r\n        <Text variant=\"titleMedium\" style={styles.headerTitle}>\r\n          Asistencia - {clase.tema}\r\n        </Text>\r\n\r\n        {isLoading ? (\r\n          <ActivityIndicator style={{ marginVertical: 20 }} />\r\n        ) : (\r\n          <>\r\n            <TextInput\r\n              label=\"Buscar alumno\"\r\n              mode=\"outlined\"\r\n              value={filtroAlumno}\r\n              onChangeText={setFiltroAlumno}\r\n              style={{ marginBottom: 10 }}\r\n              placeholder=\"Nombre o apellido\"\r\n            />\r\n\r\n            <ScrollView contentContainerStyle={styles.scroll}>\r\n              <View style={[styles.grid, { gap: 12 }]}>\r\n                {alumnosFiltrados.map((alumno) => {\r\n                  const asistenciaExistente = asistencias.find(\r\n                    (a) => a.alumno_id === alumno.id\r\n                  );\r\n                  const asistenciaEditada = asistenciasEditadas.find(\r\n                    (a) => a.alumno_id === alumno.id\r\n                  );\r\n                  const valuePresente =\r\n                    asistenciaEditada?.presente?.toString() ??\r\n                    asistenciaExistente?.presente?.toString() ??\r\n                    \"\";\r\n\r\n                  const valueJustificado =\r\n                    asistenciaEditada?.justificado ??\r\n                    asistenciaExistente?.justificado ??\r\n                    \"\";\r\n\r\n                  return (\r\n                    <View\r\n                      key={alumno.id}\r\n                      style={[\r\n                        styles.cardWrapper,\r\n                        { width: `${100 / columns - 4}%` },\r\n                      ]}\r\n                    >\r\n                      <Card mode=\"outlined\" style={styles.alumnoCard}>\r\n                        <Card.Content style={{ gap: 4, padding: 5 }}>\r\n                          <Text style={styles.nombreAlumno}>\r\n                            {alumno.nombre} {alumno.apellido}\r\n                          </Text>\r\n\r\n                          <RadioButton.Group\r\n                            onValueChange={(value) =>\r\n                              handleChange(alumno.id, parseInt(value))\r\n                            }\r\n                            value={valuePresente}\r\n                          >\r\n                            <View style={styles.radioRowFixed}>\r\n                              {[\r\n                                {\r\n                                  label: isMobile ? \"P\" : \"Presente\",\r\n                                  value: \"1\",\r\n                                },\r\n                                {\r\n                                  label: isMobile ? \"A\" : \"Ausente\",\r\n                                  value: \"2\",\r\n                                },\r\n                                { label: isMobile ? \"T\" : \"Tarde\", value: \"3\" },\r\n                              ].map((item) => (\r\n                                <Pressable\r\n                                  key={item.value}\r\n                                  style={styles.radioItemPressable}\r\n                                  onPress={() =>\r\n                                    handleChange(\r\n                                      alumno.id,\r\n                                      parseInt(item.value)\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <RadioButton\r\n                                    value={item.value}\r\n                                    status={\r\n                                      valuePresente === item.value\r\n                                        ? \"checked\"\r\n                                        : \"unchecked\"\r\n                                    }\r\n                                    onPress={() =>\r\n                                      handleChange(\r\n                                        alumno.id,\r\n                                        parseInt(item.value)\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  <Text\r\n                                    style={[\r\n                                      isMobile\r\n                                        ? styles.radioLabelMobile\r\n                                        : styles.radioLabel,\r\n                                      styles.radioLabelText,\r\n                                    ]}\r\n                                  >\r\n                                    {item.label}\r\n                                  </Text>\r\n                                </Pressable>\r\n                              ))}\r\n                            </View>\r\n                          </RadioButton.Group>\r\n\r\n                          <TextInput\r\n                            label=\"Justificación\"\r\n                            mode=\"outlined\"\r\n                            value={valueJustificado}\r\n                            onChangeText={(text) =>\r\n                              handleJustificacionChange(alumno.id, text)\r\n                            }\r\n                          />\r\n                        </Card.Content>\r\n                      </Card>\r\n                    </View>\r\n                  );\r\n                })}\r\n              </View>\r\n            </ScrollView>\r\n          </>\r\n        )}\r\n\r\n        <View style={styles.buttonRow}>\r\n          <Button mode=\"text\" onPress={onClose}>\r\n            Cancelar\r\n          </Button>\r\n          <Button mode=\"contained\" onPress={handleGuardar}>\r\n            {isLoading ? \"guardando\" : \"Guardar\"}\r\n          </Button>\r\n        </View>\r\n      </Modal>\r\n    </Portal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContainer: {\r\n    margin: 10,\r\n    padding: 20,\r\n    borderRadius: 12,\r\n    maxHeight: \"95%\",\r\n  },\r\n  scroll: {\r\n    paddingVertical: 5,\r\n  },\r\n  headerTitle: {\r\n    marginBottom: 12,\r\n  },\r\n  grid: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  cardWrapper: {\r\n    marginBottom: 16,\r\n  },\r\n  alumnoCard: {\r\n    borderRadius: 12,\r\n  },\r\n  nombreAlumno: {\r\n    fontWeight: \"600\",\r\n    marginBottom: 4,\r\n  },\r\n  radioRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  buttonRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    marginTop: 20,\r\n    gap: 10,\r\n  },\r\n  radioRowFixed: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"nowrap\", // importante para evitar múltiples filas\r\n  },\r\n\r\n  radioItemFixed: {\r\n    flex: 1,\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n\r\n  radioLabel: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  radioLabelMobile: {\r\n    fontSize: 12,\r\n  },\r\n  radioItemPressable: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    minWidth: 50,\r\n    maxWidth: 80,\r\n  },\r\n\r\n  radioLabelText: {\r\n    textAlign: \"center\",\r\n    flexShrink: 1,\r\n  },\r\n});\r\n","import { AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { urlBase } from \"../utils/url\";\r\nimport { authFetch } from \"./authRefresh\";\r\n\r\nexport async function setClaseAsistencia(\r\n  clase_id: number,\r\n\r\n  asistencias: Omit<AsistenciaType, \"id\">[]\r\n): Promise<void> {\r\n  const response = await authFetch(\r\n    `${urlBase}/asistencias/masiva/${clase_id}`,\r\n    {\r\n      method: \"POST\",\r\n\r\n      body: JSON.stringify(asistencias),\r\n    }\r\n  );\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al guardar asistencias\");\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Card, Text, Button, useTheme } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\nimport ModalAsistencia from \"./ModalAsistencias\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { AsistenciaType } from \"../types/AsistenciaType\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\n\r\ntype Props = {\r\n  clase: ClaseType;\r\n  asistencia: AsistenciaType | undefined;\r\n};\r\n\r\nexport default function ClaseCard({ clase, asistencia }: Props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const { user } = useAuth();\r\n  const { colors } = useTheme();\r\n  const getColorFromAsistencia = (asistencia: number) => {\r\n    if (asistencia === 1) return [colors.background, colors.asistenciaBuena];\r\n    if (asistencia === 2) return [colors.background, colors.asistenciaMala]; //rojo\r\n    if (asistencia === 3) return [colors.background, colors.asistenciaMedia]; // naranja\r\n    return [\"transparent\", \"transparent\"];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card style={[styles.card]}>\r\n        <LinearGradient\r\n          colors={\r\n            !user?.is_teacher\r\n              ? getColorFromAsistencia(asistencia?.presente)\r\n              : [\"#trnasparent\", \"transparent\"]\r\n          }\r\n          start={{ x: 0.4, y: 0.3 }}\r\n          end={{ x: 1, y: 1 }}\r\n          style={{ borderRadius: 8, padding: 10 }}\r\n        >\r\n          <Card.Content>\r\n            <View style={styles.headerRow}>\r\n              <Text variant=\"titleSmall\" style={styles.cardTitle}>\r\n                {clase.tema}\r\n              </Text>\r\n\r\n              <View style={styles.iconButtons}>\r\n                {user?.is_teacher ? (\r\n                  <>\r\n                    <Ionicons\r\n                      name=\"create-outline\"\r\n                      size={20}\r\n                      color=\"#9CA3AF\"\r\n                      style={styles.iconMargin}\r\n                    />\r\n                    <Ionicons name=\"trash-outline\" size={20} color=\"#9CA3AF\" />\r\n                  </>\r\n                ) : (\r\n                  <Text variant=\"bodyMedium\">\r\n                    {\" \"}\r\n                    {asistencia\r\n                      ? asistencia.presente === 1\r\n                        ? \"Presente\"\r\n                        : asistencia.presente === 2\r\n                        ? \"Ausente\"\r\n                        : \"Tarde\"\r\n                      : \"Sin asistencia\"}\r\n                  </Text>\r\n                )}\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.scheduleRow}>\r\n              <Ionicons\r\n                name=\"calendar-outline\"\r\n                size={13}\r\n                color=\"#9CA3AF\"\r\n                style={styles.iconMargin}\r\n              />\r\n              <Text variant=\"bodySmall\" style={styles.cardSubtitle}>\r\n                {clase.fecha.toString()}\r\n              </Text>\r\n            </View>\r\n\r\n            {user?.is_teacher && (\r\n              <Button\r\n                mode=\"outlined\"\r\n                icon={({ color, size }) => (\r\n                  <Ionicons name=\"checkmark-circle\" color={color} size={size} />\r\n                )}\r\n                style={styles.attendanceButton}\r\n                onPress={() => setModalVisible(true)}\r\n              >\r\n                Tomar asistencia\r\n              </Button>\r\n            )}\r\n          </Card.Content>\r\n        </LinearGradient>\r\n      </Card>\r\n\r\n      {/* Modal de asistencia */}\r\n      <ModalAsistencia\r\n        visible={modalVisible}\r\n        onClose={() => setModalVisible(false)}\r\n        clase={clase}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 400,\r\n    borderRadius: 8,\r\n    elevation: 2,\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 15,\r\n    marginBottom: 10,\r\n  },\r\n  headerRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconButtons: {\r\n    flexDirection: \"row\",\r\n  },\r\n  iconMargin: {\r\n    marginRight: 8,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n  },\r\n  cardTitle: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: 4,\r\n  },\r\n  cardSubtitle: {\r\n    color: \"#6B7280\",\r\n  },\r\n  attendanceButton: {\r\n    marginTop: 10,\r\n  },\r\n  modalBackdrop: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.4)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modalContainer: {\r\n    width: \"85%\",\r\n    padding: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    elevation: 5,\r\n  },\r\n  modalCloseButton: {\r\n    marginTop: 20,\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  modalCloseText: {\r\n    color: \"#2563EB\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","import { View, StyleSheet, Image, ScrollView } from \"react-native\";\r\nimport { Text, Button, ActivityIndicator, useTheme } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useNavigation, useRoute, RouteProp } from \"@react-navigation/native\";\r\nimport { MateriasStackParamList } from \"../types/route\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { clasesMateria } from \"../api/clasesMateria\";\r\nimport { useAuth } from \"../context/authContent\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\nimport ClaseCard from \"../components/ClaseCard\";\r\nimport { useWindowDimensions } from \"react-native\";\r\nimport { getClasesStorage, getFromStorage, saveClases } from \"../utils/storage\";\r\nimport { Layout } from \"../layout/layout\";\r\ntype Props = RouteProp<MateriasStackParamList, \"DetalleMateria\">;\r\n\r\nexport default function DetallesMaterias() {\r\n  const { width } = useWindowDimensions();\r\n  const route = useRoute<Props>();\r\n  const { materia, asistencia } = route.params;\r\n  const navigation = useNavigation();\r\n  const { token, user } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [clases, setClases] = useState<ClaseType[]>([]);\r\n  const [error, setError] = useState(false);\r\n  const [grupoSeleccionado, setGrupoSeleccionado] = useState<number | null>(\r\n    null\r\n  );\r\n  const [cuatrimestreSeleccionado, setCuatrimestreSeleccionado] = useState<\r\n    number | null\r\n  >(null);\r\n\r\n  const { colors } = useTheme();\r\n\r\n  const getClases = async (forzarBackend = false) => {\r\n    let efectiveToken = token;\r\n    if (!token) {\r\n      efectiveToken = await getFromStorage(\"token\");\r\n    }\r\n    try {\r\n      if (!forzarBackend) {\r\n        const local = await getClasesStorage(materia.id);\r\n        if (local) {\r\n          setClases(local);\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Si no hay local o se fuerza el fetch\r\n      const data = await clasesMateria(materia.id);\r\n      setClases(data);\r\n      await saveClases(materia.id, data); // guardar local\r\n    } catch (error) {\r\n      console.log(\"error al obtener las clases\", error);\r\n      setError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // const clasesFiltradas = user?.is_teacher\r\n  //   ? clases\r\n  //   : clases.filter((clase) => !/^clases\\s+\\d+/i.test(clase.tema));\r\n\r\n  const clasesVisibles = user?.is_teacher\r\n    ? clases\r\n    : clases.filter((clase) => !/^clases\\s+\\d+/i.test(clase.tema));\r\n\r\n  const clasesFiltradas = clasesVisibles.filter((clase) => {\r\n    if (grupoSeleccionado !== null && clase.grupo_id !== grupoSeleccionado) {\r\n      return false;\r\n    }\r\n    if (\r\n      cuatrimestreSeleccionado !== null &&\r\n      clase.cuatrimestre !== cuatrimestreSeleccionado\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  const numColumns = width >= 1024 ? 3 : width >= 600 ? 2 : 1;\r\n  const isSmallDevice = width < 600;\r\n  useEffect(() => {\r\n    getClases();\r\n  }, []);\r\n\r\n  const handleGoBack = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  const handleAddClass = () => {\r\n    // lógica para agregar clase\r\n  };\r\n\r\n  // Agrupa las clases en filas según numColumns\r\n  const getRows = (data: ClaseType[], columns: number) => {\r\n    const rows = [];\r\n    for (let i = 0; i < data.length; i += columns) {\r\n      rows.push(data.slice(i, i + columns));\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.container}>\r\n        <View\r\n          style={[\r\n            styles.sectionHeader,\r\n            isSmallDevice && {\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\",\r\n              gap: 8,\r\n            },\r\n          ]}\r\n        >\r\n          <View\r\n            style={[\r\n              styles.headerRow,\r\n              isSmallDevice && { flexDirection: \"row\", alignItems: \"center\" },\r\n            ]}\r\n          >\r\n            <Button\r\n              onPress={handleGoBack}\r\n              mode=\"text\"\r\n              compact\r\n              icon={({ size, color }) => (\r\n                <Ionicons name=\"arrow-back\" size={16} color={colors.primary} />\r\n              )}\r\n              contentStyle={styles.backButton}\r\n              labelStyle={[\r\n                styles.backButtonText,\r\n                isSmallDevice && { display: \"none\" },\r\n              ]}\r\n            >\r\n              {!isSmallDevice && \"Volver\"}\r\n            </Button>\r\n            <Text\r\n              variant={isSmallDevice ? \"titleSmall\" : \"titleMedium\"}\r\n              style={[\r\n                styles.subjectTitle,\r\n                {\r\n                  flexShrink: 1,\r\n                  flexWrap: \"wrap\",\r\n                  maxWidth: isSmallDevice ? \"90%\" : \"100%\",\r\n                },\r\n              ]}\r\n              numberOfLines={1}\r\n              ellipsizeMode=\"tail\"\r\n            >\r\n              {materia.nombre}\r\n            </Text>\r\n          </View>\r\n\r\n          <View style={styles.scheduleRow}>\r\n            <Button\r\n              mode=\"contained\"\r\n              style={styles.addButton}\r\n              onPress={() => getClases(true)}\r\n              icon={({ color, size }) => (\r\n                <Ionicons name=\"refresh\" color={color} size={size} />\r\n              )}\r\n            >\r\n              Refrescar\r\n            </Button>\r\n\r\n            {user?.is_teacher && (\r\n              <Button\r\n                icon={({ color, size }) => (\r\n                  <Ionicons\r\n                    name=\"add-circle-outline\"\r\n                    color={color}\r\n                    size={size}\r\n                  />\r\n                )}\r\n                mode=\"contained\"\r\n                onPress={handleAddClass}\r\n                contentStyle={styles.addButtonContent}\r\n                style={styles.addButton}\r\n              >\r\n                Agregar Clase\r\n              </Button>\r\n            )}\r\n          </View>\r\n        </View>\r\n\r\n        {isLoading ? (\r\n          <ActivityIndicator size={\"large\"} color=\"violet\" />\r\n        ) : error ? (\r\n          <View\r\n            style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}\r\n          >\r\n            <Text\r\n              variant=\"titleLarge\"\r\n              style={{\r\n                marginBottom: 12,\r\n                color: \"#9333EA\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Ocurrió un error al cargar las clases\r\n            </Text>\r\n            <Image\r\n              source={require(\"../../assets/errorImagen.png\")}\r\n              style={{\r\n                width: 180,\r\n                height: 180,\r\n                marginBottom: 20,\r\n                borderRadius: 90,\r\n                opacity: 0.85,\r\n              }}\r\n              resizeMode=\"contain\"\r\n            />\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={() => {\r\n                setIsLoading(true);\r\n                setError(false);\r\n                getClases();\r\n              }}\r\n              style={{ marginTop: 8 }}\r\n            >\r\n              Reintentar\r\n            </Button>\r\n          </View>\r\n        ) : (\r\n          <>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                gap: 8,\r\n                marginBottom: 12,\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              {!user?.is_teacher ? (\r\n                <Text> </Text>\r\n              ) : (\r\n                materia.tipo === \"taller\" && (\r\n                  <>\r\n                    <Button\r\n                      mode={\r\n                        grupoSeleccionado === null ? \"contained\" : \"outlined\"\r\n                      }\r\n                      onPress={() => setGrupoSeleccionado(null)}\r\n                    >\r\n                      Todos los grupos\r\n                    </Button>\r\n                    {[1, 2].map((id) => (\r\n                      <Button\r\n                        key={id}\r\n                        mode={\r\n                          grupoSeleccionado === id ? \"contained\" : \"outlined\"\r\n                        }\r\n                        onPress={() => setGrupoSeleccionado(id)}\r\n                      >\r\n                        G {id}\r\n                      </Button>\r\n                    ))}\r\n                  </>\r\n                )\r\n              )}\r\n              <Button\r\n                mode={\r\n                  cuatrimestreSeleccionado === null ? \"contained\" : \"outlined\"\r\n                }\r\n                onPress={() => setCuatrimestreSeleccionado(null)}\r\n              >\r\n                Todos los cuatris\r\n              </Button>\r\n              {[1, 2].map((c) => (\r\n                <Button\r\n                  key={c}\r\n                  mode={\r\n                    cuatrimestreSeleccionado === c ? \"contained\" : \"outlined\"\r\n                  }\r\n                  onPress={() => setCuatrimestreSeleccionado(c)}\r\n                >\r\n                  C {c}\r\n                </Button>\r\n              ))}\r\n            </View>\r\n\r\n            <ScrollView\r\n              contentContainerStyle={{\r\n                paddingBottom: user?.is_teacher ? 90 : 32,\r\n                paddingHorizontal: 6,\r\n                gap: 10,\r\n              }}\r\n              showsVerticalScrollIndicator={false}\r\n            >\r\n              {clasesFiltradas.length === 0 ? (\r\n                <View>\r\n                  <Ionicons\r\n                    name=\"information-circle-outline\"\r\n                    size={48}\r\n                    color=\"#A78BFA\"\r\n                  />\r\n                  <Text\r\n                    style={{\r\n                      color: \"#6B7280\",\r\n                      marginTop: 12,\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    No hay clases registradas aún.\r\n                  </Text>\r\n                </View>\r\n              ) : (\r\n                getRows(clasesFiltradas, numColumns).map((row, rowIndex) => (\r\n                  <View\r\n                    key={rowIndex}\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: numColumns > 1 ? \"center\" : \"flex-start\",\r\n                      marginBottom: 10,\r\n                      gap: 10,\r\n                    }}\r\n                  >\r\n                    {row.map((item) => {\r\n                      const asistenciaDeEstaClase = asistencia.find(\r\n                        (asistencia) => asistencia.id === item.id\r\n                      );\r\n                      return (\r\n                        <View\r\n                          key={item.id}\r\n                          style={{\r\n                            flex: 1,\r\n                            maxWidth: `${100 / numColumns}%`,\r\n                          }}\r\n                        >\r\n                          <View>\r\n                            <ClaseCard\r\n                              clase={item}\r\n                              asistencia={asistenciaDeEstaClase}\r\n                            />\r\n                          </View>\r\n                        </View>\r\n                      );\r\n                    })}\r\n                    {row.length < numColumns &&\r\n                      Array.from({ length: numColumns - row.length }).map(\r\n                        (_, idx) => (\r\n                          <View\r\n                            key={`empty-${idx}`}\r\n                            style={{\r\n                              flex: 1,\r\n                              maxWidth: `${100 / numColumns}%`,\r\n                              minHeight: 120,\r\n                            }}\r\n                          />\r\n                        )\r\n                      )}\r\n                  </View>\r\n                ))\r\n              )}\r\n            </ScrollView>\r\n          </>\r\n        )}\r\n      </View>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  backButton: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingLeft: 0,\r\n  },\r\n  backButtonText: {\r\n    color: \"#4B5563\",\r\n    fontSize: 14,\r\n    marginLeft: 4,\r\n  },\r\n  scheduleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    gap: 6,\r\n  },\r\n\r\n  subjectTitle: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  subjectSchedule: {\r\n    color: \"#6B7280\",\r\n    marginTop: 4,\r\n    marginBottom: 4,\r\n  },\r\n\r\n  sectionHeader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginVertical: 8,\r\n  },\r\n  addButton: {\r\n    borderRadius: 8,\r\n    marginVertical: 10,\r\n  },\r\n  addButtonContent: {\r\n    flexDirection: \"row\",\r\n  },\r\n  headerRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 8,\r\n  },\r\n});\r\n","import { urlBase } from \"../utils/url\";\r\nimport { ClaseType } from \"../types/AulaType\";\r\nimport { authFetch } from \"./authRefresh\";\r\n\r\nexport async function clasesMateria(aulaId: number): Promise<ClaseType[]> {\r\n  const response = await authFetch(`${urlBase}/clases/aulas/${aulaId}/clases`, {\r\n    method: \"GET\",\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.detail || \"Error al iniciar sesión\");\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n","import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport Materias from \"../screens/MisAulas\";\r\nimport DetalleMateria from \"../screens/DetailsAulas\";\r\nimport { MateriasStackParamList } from \"../types/route\";\r\n\r\nconst Stack = createNativeStackNavigator<MateriasStackParamList>();\r\n\r\nexport default function MateriasStack() {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen\r\n        name=\"Materias\"\r\n        component={Materias}\r\n        options={{ title: \"adminAulas | Mis Materias\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"DetalleMateria\"\r\n        component={DetalleMateria}\r\n        options={{ title: \"adminAulas | Detalle de Materia\" }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport {\r\n  Avatar,\r\n  Text,\r\n  Card,\r\n  ProgressBar,\r\n  Button,\r\n  useTheme,\r\n} from \"react-native-paper\";\r\nimport { getInitials } from \"../utils/initials\";\r\n\r\ninterface StudentCardProps {\r\n  name: string;\r\n  email: string;\r\n  promedio: number;\r\n  asistencia: number;\r\n  completadas: number;\r\n  totalTareas: number;\r\n  estado?: \"Excelente\" | \"Bien\" | \"Regular\";\r\n  onPressDetalles?: () => void;\r\n}\r\n\r\nconst AlumnoResumen: React.FC<StudentCardProps> = ({\r\n  name,\r\n  email,\r\n  promedio,\r\n  asistencia,\r\n  completadas,\r\n  totalTareas,\r\n  estado = \"Bien\",\r\n  onPressDetalles,\r\n}) => {\r\n  const theme = useTheme();\r\n  const initials = getInitials(name);\r\n\r\n  const badgeColors = {\r\n    Excelente: theme.colors.tertiary,\r\n    Bien: theme.colors.secondary,\r\n    Regular: theme.colors.error,\r\n  };\r\n\r\n  const badgeColor = badgeColors[estado];\r\n\r\n  return (\r\n    <Card style={styles.card} mode=\"elevated\">\r\n      <Card.Title\r\n        title={name}\r\n        subtitle={email}\r\n        titleVariant=\"titleMedium\"\r\n        subtitleVariant=\"bodySmall\"\r\n        left={() => <Avatar.Text size={40} label={initials} />}\r\n        right={() => (\r\n          <View style={[styles.badge, { backgroundColor: badgeColor }]}>\r\n            <Text style={styles.badgeText}>{estado}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n\r\n      <Card.Content>\r\n        <View style={styles.row}>\r\n          <View style={styles.column}>\r\n            <Text variant=\"labelSmall\" style={styles.label}>\r\n              Promedio\r\n            </Text>\r\n            <Text variant=\"titleMedium\">{promedio}%</Text>\r\n          </View>\r\n          <View style={styles.column}>\r\n            <Text variant=\"labelSmall\" style={styles.label}>\r\n              Asistencia\r\n            </Text>\r\n            <Text variant=\"titleMedium\">{asistencia}%</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.progressWrapper}>\r\n          <View style={styles.progressLabel}>\r\n            <Text variant=\"labelSmall\" style={styles.label}>\r\n              Tareas Completadas\r\n            </Text>\r\n            <Text variant=\"bodyMedium\">{`${completadas}/${totalTareas}`}</Text>\r\n          </View>\r\n          <ProgressBar\r\n            progress={completadas / totalTareas}\r\n            color={theme.colors.primary}\r\n            style={styles.progressBar}\r\n          />\r\n        </View>\r\n      </Card.Content>\r\n\r\n      <Card.Actions>\r\n        <Button onPress={onPressDetalles} mode=\"contained-tonal\">\r\n          Ver detalles\r\n        </Button>\r\n      </Card.Actions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    marginVertical: 8,\r\n    borderRadius: 16,\r\n  },\r\n  badge: {\r\n    borderRadius: 12,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 4,\r\n    marginRight: 16,\r\n    alignSelf: \"center\",\r\n  },\r\n  badgeText: {\r\n    color: \"white\",\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 8,\r\n    marginBottom: 12,\r\n  },\r\n  column: {\r\n    flex: 1,\r\n  },\r\n  label: {\r\n    color: \"gray\",\r\n    marginBottom: 4,\r\n  },\r\n  progressWrapper: {\r\n    marginTop: 8,\r\n  },\r\n  progressLabel: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 4,\r\n  },\r\n  progressBar: {\r\n    height: 6,\r\n    borderRadius: 4,\r\n    backgroundColor: \"#e5e7eb\",\r\n  },\r\n});\r\n\r\nexport default AlumnoResumen;\r\n","import React, { useState } from \"react\";\r\nimport { View, FlatList, StyleSheet, useWindowDimensions } from \"react-native\";\r\nimport { Text, TextInput, Menu, Button } from \"react-native-paper\";\r\nimport { Layout } from \"../layout/layout\";\r\nimport AlumnoResumen from \"../components/AlumnoResumen\";\r\n\r\n// Simulados\r\nconst materias = [\r\n  { id: 1, nombre: \"Matemática 1°A\" },\r\n  { id: 2, nombre: \"Física 2°B\" },\r\n];\r\n\r\nconst alumnos = [\r\n  {\r\n    id: 1,\r\n    nombre: \"Alicia González\",\r\n    email: \"alicia.g@colegio.edu\",\r\n    aulas: [\r\n      {\r\n        aulaId: 1,\r\n        promedio: 85,\r\n        asistencia: 91,\r\n        completadas: 8,\r\n        totalTareas: 10,\r\n      },\r\n      {\r\n        aulaId: 2,\r\n        promedio: 78,\r\n        asistencia: 88,\r\n        completadas: 6,\r\n        totalTareas: 9,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    nombre: \"Carlos Pérez\",\r\n    email: \"carlos.p@colegio.edu\",\r\n    aulas: [\r\n      {\r\n        aulaId: 1,\r\n        promedio: 72,\r\n        asistencia: 75,\r\n        completadas: 6,\r\n        totalTareas: 10,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    nombre: \"Brenda Martínez\",\r\n    email: \"brenda.m@colegio.edu\",\r\n    aulas: [\r\n      {\r\n        aulaId: 2,\r\n        promedio: 92,\r\n        asistencia: 98,\r\n        completadas: 9,\r\n        totalTareas: 10,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    nombre: \"Diego Fernández\",\r\n    email: \"diego.f@colegio.edu\",\r\n    aulas: [\r\n      {\r\n        aulaId: 1,\r\n        promedio: 63,\r\n        asistencia: 70,\r\n        completadas: 4,\r\n        totalTareas: 10,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    nombre: \"Lucía Ramírez\",\r\n    email: \"lucia.r@colegio.edu\",\r\n    aulas: [\r\n      {\r\n        aulaId: 2,\r\n        promedio: 88,\r\n        asistencia: 95,\r\n        completadas: 10,\r\n        totalTareas: 10,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst Alumnos = () => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedMateria, setSelectedMateria] = useState<number | null>(\r\n    materias[0]?.id ?? null\r\n  );\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const { width } = useWindowDimensions();\r\n\r\n  const numColumns = width > 1024 ? 3 : 1;\r\n\r\n  const filteredAlumnos = alumnos\r\n    .map((alumno) => {\r\n      const datosAula = alumno.aulas.find((a) => a.aulaId === selectedMateria);\r\n      if (!datosAula) return null;\r\n      return {\r\n        ...alumno,\r\n        ...datosAula,\r\n      };\r\n    })\r\n    .filter(Boolean)\r\n    .filter((alumno) =>\r\n      alumno.nombre.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n  const selectedMateriaNombre =\r\n    materias.find((m) => m.id === selectedMateria)?.nombre || \"Todas\";\r\n\r\n  return (\r\n    <Layout>\r\n      <View style={styles.container}>\r\n        {/* Encabezado */}\r\n        <View style={styles.header}>\r\n          <Text variant=\"titleLarge\">Gestión de Alumnos</Text>\r\n          <Text variant=\"bodyMedium\">\r\n            Buscar, gestionar y hacer seguimiento de los estudiantes\r\n          </Text>\r\n        </View>\r\n\r\n        {/* Filtros */}\r\n        <View style={styles.filters}>\r\n          <TextInput\r\n            mode=\"outlined\"\r\n            placeholder=\"Buscar alumno...\"\r\n            value={searchQuery}\r\n            onChangeText={setSearchQuery}\r\n            style={styles.searchInput}\r\n          />\r\n\r\n          <Menu\r\n            visible={menuVisible}\r\n            onDismiss={() => setMenuVisible(false)}\r\n            anchor={\r\n              <Button mode=\"outlined\" onPress={() => setMenuVisible(true)}>\r\n                {selectedMateriaNombre}\r\n              </Button>\r\n            }\r\n          >\r\n            {materias.map((materia) => (\r\n              <Menu.Item\r\n                key={materia.id}\r\n                onPress={() => {\r\n                  setSelectedMateria(materia.id);\r\n                  setMenuVisible(false);\r\n                }}\r\n                title={materia.nombre}\r\n              />\r\n            ))}\r\n          </Menu>\r\n        </View>\r\n\r\n        {/* Lista */}\r\n        <FlatList\r\n          data={filteredAlumnos}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          contentContainerStyle={styles.listContainer}\r\n          numColumns={numColumns}\r\n          columnWrapperStyle={numColumns > 1 ? styles.columnWrapper : undefined}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.cardWrapper}>\r\n              <AlumnoResumen\r\n                name={item.nombre}\r\n                email={item.email}\r\n                asistencia={item.asistencia}\r\n                completadas={item.completadas}\r\n                promedio={item.promedio}\r\n                totalTareas={item.totalTareas}\r\n                estado=\"Excelente\"\r\n                onPressDetalles={() => {\r\n                  // ⚠️ Abrí modal o navegá a detalle acá\r\n                  console.log(\"Ver detalles de:\", item.nombre);\r\n                }}\r\n              />\r\n            </View>\r\n          )}\r\n          ListEmptyComponent={\r\n            <Text style={{ textAlign: \"center\", marginTop: 20 }}>\r\n              No se encontraron alumnos.\r\n            </Text>\r\n          }\r\n        />\r\n      </View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Alumnos;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    marginBottom: 16,\r\n  },\r\n  filters: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 12,\r\n    marginBottom: 16,\r\n    flexWrap: \"wrap\",\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    minWidth: 200,\r\n  },\r\n  listContainer: {\r\n    paddingBottom: 24,\r\n  },\r\n  columnWrapper: {\r\n    justifyContent: \"space-between\",\r\n    gap: 12,\r\n  },\r\n  cardWrapper: {\r\n    flex: 1,\r\n    maxWidth: 350,\r\n    minWidth: 280,\r\n    marginBottom: 16,\r\n  },\r\n});\r\n","// src/components/alumno/CardResumen.tsx\r\nimport React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Card, Text, ProgressBar, useTheme } from \"react-native-paper\";\r\n\r\ninterface Props {\r\n  titulo: string;\r\n  valor: string;\r\n  subtitulo?: string;\r\n  progreso?: number; // 0 - 100\r\n  isLarge?: boolean;\r\n}\r\n\r\nconst CardResumen = ({\r\n  titulo,\r\n  valor,\r\n  subtitulo,\r\n  progreso,\r\n  isLarge,\r\n}: Props) => {\r\n  const { colors } = useTheme();\r\n\r\n  return (\r\n    <Card style={[styles.card, isLarge ? { width: 150 } : { maxWidth: 100 }]}>\r\n      <Card.Title title={titulo} titleStyle={styles.titulo} />\r\n      <Card.Content>\r\n        <Text variant=\"headlineMedium\" style={styles.valor}>\r\n          {valor}\r\n        </Text>\r\n        {progreso != null && (\r\n          <ProgressBar\r\n            progress={progreso / 100}\r\n            style={styles.progress}\r\n            color={colors.primary}\r\n          />\r\n        )}\r\n        {subtitulo && (\r\n          <Text style={styles.subtitulo} variant=\"bodySmall\">\r\n            {subtitulo}\r\n          </Text>\r\n        )}\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    marginBottom: 8,\r\n    borderRadius: 12,\r\n    elevation: 1,\r\n  },\r\n  titulo: {\r\n    fontSize: 14,\r\n    color: \"#666\",\r\n    textAlign: \"center\",\r\n  },\r\n  valor: {\r\n    fontWeight: \"bold\",\r\n    marginTop: 4,\r\n    textAlign: \"center\",\r\n  },\r\n  progress: {\r\n    marginTop: 6,\r\n    height: 6,\r\n    borderRadius: 6,\r\n  },\r\n  subtitulo: {\r\n    marginTop: 4,\r\n    color: \"#888\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default CardResumen;\r\n","export const tipoTareaTextoToValor: Record<string, string> = {\r\n  Evaluación: \"evaluacion\",\r\n  \"Trabajo Práctico\": \"tp\",\r\n  \"Trabajo Teórico\": \"tt\",\r\n  Actitudinal: \"actitudinal\",\r\n};\r\n\r\nexport const tipoTareaValorToTexto: Record<string, string> = {\r\n  evaluacion: \"Evaluación\",\r\n  tp: \"Trabajo Práctico\",\r\n  tt: \"Trabajo Teórico\",\r\n  actitudinal: \"Actitudinal\",\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { View, useWindowDimensions, StyleSheet } from \"react-native\";\r\nimport { TextInput, Button, Menu } from \"react-native-paper\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\nimport { useAppData } from \"../../context/appDataContext\";\r\nimport { tipoTareaTextoToValor } from \"../../utils/tipoTarea\";\r\n\r\ninterface FiltroTareasProps {\r\n  onFiltrar: (tareasFiltradas: any[]) => void;\r\n}\r\n\r\nconst tiposTarea = [\r\n  \"Todas\",\r\n  \"Evaluación\",\r\n  \"Trabajo Práctico\",\r\n  \"Trabajo Teórico\",\r\n  \"Actitudinal\",\r\n];\r\n\r\nexport default function FiltroTareas({ onFiltrar }: FiltroTareasProps) {\r\n  const { tareas, aulas } = useAppData();\r\n  const { width } = useWindowDimensions();\r\n  const isSmall = width < 600;\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filtroTipo, setFiltroTipo] = useState(\"Todas\");\r\n  const [aulaFiltro, setAulaFiltro] = useState<number | null>(null);\r\n\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const [menuAulaVisible, setMenuAulaVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!tareas) {\r\n      onFiltrar([]);\r\n      return;\r\n    }\r\n\r\n    const filtradas = tareas.filter((t) => {\r\n      const coincideTipo =\r\n        filtroTipo === \"Todas\" || t.tipo === tipoTareaTextoToValor[filtroTipo];\r\n      const coincideBusqueda = t.titulo\r\n        .toLowerCase()\r\n        .includes(searchQuery.toLowerCase());\r\n      const coincideAula = aulaFiltro === null || t.aula_id === aulaFiltro;\r\n      return coincideTipo && coincideBusqueda && coincideAula;\r\n    });\r\n\r\n    onFiltrar(filtradas);\r\n  }, [searchQuery, filtroTipo, aulaFiltro, tareas]);\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.filters,\r\n        {\r\n          flexDirection: isSmall ? \"column\" : \"row\",\r\n          alignItems: isSmall ? \"stretch\" : \"center\",\r\n          gap: isSmall ? 12 : 16,\r\n        },\r\n      ]}\r\n    >\r\n      <TextInput\r\n        mode=\"outlined\"\r\n        placeholder=\"Buscar tareas...\"\r\n        value={searchQuery}\r\n        onChangeText={setSearchQuery}\r\n        style={[\r\n          styles.searchInput,\r\n          {\r\n            minWidth: isSmall ? \"100%\" : 220,\r\n            height: 40,\r\n          },\r\n        ]}\r\n        right={\r\n          <TextInput.Icon\r\n            icon={({ color, size }) => (\r\n              <Ionicons name=\"search\" size={size} color={color} />\r\n            )}\r\n          />\r\n        }\r\n      />\r\n\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          gap: isSmall ? 8 : 12,\r\n          flex: isSmall ? undefined : 1,\r\n          width: isSmall ? \"100%\" : undefined,\r\n          justifyContent: isSmall ? \"flex-start\" : \"flex-end\",\r\n        }}\r\n      >\r\n        <Menu\r\n          visible={menuVisible}\r\n          onDismiss={() => setMenuVisible(false)}\r\n          anchor={\r\n            <Button\r\n              mode=\"outlined\"\r\n              onPress={() => setMenuVisible(true)}\r\n              icon={({ color, size }) => (\r\n                <Ionicons name=\"filter\" size={size} color={color} />\r\n              )}\r\n              style={{ minWidth: 120 }}\r\n            >\r\n              {filtroTipo}\r\n            </Button>\r\n          }\r\n        >\r\n          {tiposTarea.map((tipo) => (\r\n            <Menu.Item\r\n              key={tipo}\r\n              onPress={() => {\r\n                setFiltroTipo(tipo);\r\n                setMenuVisible(false);\r\n              }}\r\n              title={tipo}\r\n            />\r\n          ))}\r\n        </Menu>\r\n\r\n        <Menu\r\n          visible={menuAulaVisible}\r\n          onDismiss={() => setMenuAulaVisible(false)}\r\n          anchor={\r\n            <Button\r\n              mode=\"outlined\"\r\n              onPress={() => setMenuAulaVisible(true)}\r\n              icon={({ color, size }) => (\r\n                <Ionicons name=\"school-outline\" size={size} color={color} />\r\n              )}\r\n              style={{ minWidth: 140 }}\r\n            >\r\n              {aulaFiltro\r\n                ? aulas.find((a) => a.id === aulaFiltro)?.nombre\r\n                : \"Todas las aulas\"}\r\n            </Button>\r\n          }\r\n        >\r\n          <Menu.Item\r\n            onPress={() => {\r\n              setAulaFiltro(null);\r\n              setMenuAulaVisible(false);\r\n            }}\r\n            title=\"Todas las aulas\"\r\n          />\r\n          {aulas.map((aula) => (\r\n            <Menu.Item\r\n              key={aula.id}\r\n              onPress={() => {\r\n                setAulaFiltro(aula.id);\r\n                setMenuAulaVisible(false);\r\n              }}\r\n              title={aula.nombre}\r\n            />\r\n          ))}\r\n        </Menu>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  filters: {\r\n    marginBottom: 12,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Card, Text, Badge, useTheme } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { tipoTareaValorToTexto } from \"../../utils/tipoTarea\";\r\n\r\ninterface CardTaskProps {\r\n  tipo: string; // Ej: \"Examen\"\r\n  estado: string; // Ej: \"Completada\"\r\n  titulo: string;\r\n  descripcion: string;\r\n  fechaVencimiento: string; // Ej: \"14/7/2024\"\r\n  calificacionRecibida?: number; // Ej: \"85/100\"\r\n  nombreAula?: string;\r\n}\r\n\r\nconst tipoBadgeColors: Record<string, string> = {\r\n  Evaluación: \"#f55555ff\",\r\n  \"Trabajo Práctico\": \"#93C5FD\",\r\n  \"Trabajo Teórico\": \"#FCD34D\",\r\n  Actitudinal: \"#C4B5FD\",\r\n};\r\n\r\nconst estadoBadgeColors: Record<string, string> = {\r\n  Completada: \"#029134ff\",\r\n  Pendiente: \"#fda520ff\",\r\n};\r\n\r\nconst CardTask: React.FC<CardTaskProps> = ({\r\n  tipo,\r\n  estado,\r\n  titulo,\r\n  descripcion,\r\n  fechaVencimiento,\r\n  calificacionRecibida,\r\n  nombreAula,\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card style={styles.card} mode=\"outlined\">\r\n      <Card.Content>\r\n        <View style={styles.header}>\r\n          <Ionicons\r\n            name=\"checkmark-circle-outline\"\r\n            size={24}\r\n            color={theme.colors.onSurfaceVariant}\r\n          />\r\n          <View style={styles.badgesContainer}>\r\n            <Badge\r\n              style={[\r\n                styles.badge,\r\n                {\r\n                  backgroundColor:\r\n                    tipoBadgeColors[tipoTareaValorToTexto[tipo]] ?? \"#E5E7EB\",\r\n                },\r\n              ]}\r\n              size={24}\r\n            >\r\n              {tipoTareaValorToTexto[tipo]}\r\n            </Badge>\r\n            <Badge\r\n              style={[\r\n                styles.badge,\r\n                { backgroundColor: estadoBadgeColors[estado] ?? \"#E5E7EB\" },\r\n              ]}\r\n              size={24}\r\n            >\r\n              {estado}\r\n            </Badge>\r\n          </View>\r\n        </View>\r\n      </Card.Content>\r\n\r\n      <Card.Content>\r\n        <View style={{ flex: 1, flexDirection: \"row\" }}>\r\n          <View style={{ flex: 0.8 }}>\r\n            <Text variant=\"titleMedium\" style={styles.title}>\r\n              {titulo}\r\n            </Text>\r\n\r\n            <View style={styles.aulaContainer}>\r\n              <Ionicons\r\n                name=\"school-outline\"\r\n                size={16}\r\n                color={theme.colors.onSurfaceVariant}\r\n              />\r\n              <Text variant=\"bodySmall\" style={{ marginLeft: 4 }}>\r\n                {nombreAula}\r\n              </Text>\r\n            </View>\r\n            <Text\r\n              variant=\"bodyMedium\"\r\n              numberOfLines={2}\r\n              ellipsizeMode=\"tail\"\r\n              style={{ color: theme.colors.onSurfaceVariant }}\r\n            >\r\n              {descripcion}\r\n            </Text>\r\n\r\n            <View style={styles.fechaContainer}>\r\n              <Ionicons\r\n                name=\"calendar-outline\"\r\n                size={16}\r\n                color={theme.colors.onSurfaceVariant}\r\n              />\r\n              <Text variant=\"bodySmall\" style={{ marginLeft: 4 }}>\r\n                Vence: {fechaVencimiento}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          {calificacionRecibida && (\r\n            <View\r\n              style={{\r\n                flex: 0.2,\r\n                justifyContent: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text variant=\"titleSmall\">Nota:</Text>\r\n              <Text\r\n                variant=\"headlineSmall\"\r\n                style={{\r\n                  fontWeight: \"700\",\r\n                  color: calificacionRecibida > 6 ? \"green\" : \"red\",\r\n                }}\r\n              >\r\n                {calificacionRecibida}\r\n              </Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardTask;\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    flex: 1,\r\n    maxWidth: 350,\r\n    marginVertical: 8,\r\n    borderRadius: 8,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  badgesContainer: {\r\n    flexDirection: \"row\",\r\n    gap: 8,\r\n  },\r\n  badge: {\r\n    color: \"#000\",\r\n    marginLeft: 8,\r\n    fontSize: 12,\r\n    paddingHorizontal: 6,\r\n    paddingVertical: 2,\r\n    fontWeight: \"700\",\r\n  },\r\n  title: {\r\n    marginTop: 8,\r\n    fontWeight: \"700\",\r\n  },\r\n  aulaContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 4,\r\n    marginBottom: 8,\r\n  },\r\n  fechaContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 12,\r\n    marginBottom: 8,\r\n  },\r\n  calificacionContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, FlatList, useWindowDimensions, StyleSheet } from \"react-native\";\r\nimport { Text, IconButton, useTheme } from \"react-native-paper\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\n\r\nimport { useAppData } from \"../../context/appDataContext\";\r\nimport { TareaBase } from \"../../types/TareaType\";\r\nimport CardResumen from \"../../components/evaluacion/CardResumen\";\r\nimport FiltroTareas from \"../../components/evaluacion/FiltroTarea\";\r\nimport CardTask from \"../../components/evaluacion/CardTask\";\r\nimport LoadError from \"../../components/LoadError\";\r\nimport { NotaType } from \"../../types/NotaType\";\r\n\r\nconst TareaAlumno = () => {\r\n  const {\r\n    loadTareas,\r\n    tareas,\r\n    tareasError,\r\n    tareasLoading,\r\n    aulas,\r\n    notas,\r\n    loadNotas,\r\n  } = useAppData();\r\n\r\n  const [tareasFiltradas, setTareasFiltradas] = useState<TareaBase[]>([]);\r\n\r\n  useEffect(() => {\r\n    loadNotas();\r\n  }, []);\r\n\r\n  const { width } = useWindowDimensions();\r\n  const { colors } = useTheme();\r\n\r\n  const isLargeScreen = width >= 768;\r\n  const numColumns = isLargeScreen ? 2 : 1;\r\n\r\n  // 1. Obtener IDs de las tareas visibles\r\n  const tareaIds = tareasFiltradas.map((t) => t.id);\r\n\r\n  // 2. Filtrar notas de las tareas visibles\r\n  const notasFiltradas = Object.values(notas)\r\n    .flat()\r\n    .filter((n) => tareaIds.includes(n.tarea_id));\r\n\r\n  // 3. Tareas completadas\r\n  const tareasEntregadas = tareasFiltradas.filter((t) => {\r\n    const hayNotaEntregada = notasFiltradas.some((n) => {\r\n      const coincide = n.tarea_id == t.id && n.entregado;\r\n      return coincide;\r\n    });\r\n    return hayNotaEntregada;\r\n  });\r\n\r\n  const totalTareas = tareasFiltradas.length;\r\n  const completadas = tareasEntregadas.length;\r\n  const porcentaje = totalTareas > 0 ? (completadas / totalTareas) * 100 : 0;\r\n\r\n  // 4. Promedio de notas (solo si hay nota numérica)\r\n  const notasValidas = notasFiltradas.filter((n) => typeof n.nota === \"number\");\r\n  const promedio =\r\n    notasValidas.length > 0\r\n      ? parseFloat(\r\n          (\r\n            notasValidas.reduce((acc, n) => acc + n.nota, 0) /\r\n            notasValidas.length\r\n          ).toFixed(2)\r\n        )\r\n      : 0;\r\n\r\n  // 5. Próximos vencimientos sin nota\r\n  const ahora = new Date();\r\n\r\n  // Mostramos tareas cuya fecha límite es futura (aún no vencieron)\r\n  const vencimientos = tareasFiltradas.filter(\r\n    (t) => new Date(t.fecha_limite) > ahora\r\n  );\r\n\r\n  const handleRefresh = () => {\r\n    loadNotas(true);\r\n    loadTareas(true);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <LoadError\r\n        isLoading={tareasLoading}\r\n        hasError={tareasError}\r\n        errorMessage=\"Error al cargar tareas\"\r\n        reLoad={() => loadTareas(true)}\r\n      >\r\n        <View style={{ flexDirection: \"row\", gap: 10 }}>\r\n          <View style={{ flex: isLargeScreen ? 0.9 : 1 }}>\r\n            <FiltroTareas onFiltrar={setTareasFiltradas} />\r\n          </View>\r\n          <View\r\n            style={{\r\n              flex: 0.1,\r\n              height: isLargeScreen ? 40 : 94,\r\n\r\n              justifyContent: \"flex-start\",\r\n              alignContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <IconButton\r\n              icon={({ size, color }) => (\r\n                <Ionicons name=\"refresh\" size={size} color={color} />\r\n              )}\r\n              mode=\"contained\"\r\n              onPress={() => handleRefresh()}\r\n              style={{ padding: 0, margin: 0 }}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View\r\n          style={[\r\n            styles.mainContent,\r\n            isLargeScreen\r\n              ? { flexDirection: \"row\", gap: 24 }\r\n              : { flexDirection: \"column-reverse\" },\r\n          ]}\r\n        >\r\n          <View style={{ flex: 2 }}>\r\n            {tareasFiltradas.length === 0 ? (\r\n              <View style={styles.empty}>\r\n                <Ionicons\r\n                  name=\"document-text-outline\"\r\n                  size={48}\r\n                  color={colors.onSurfaceDisabled}\r\n                  style={{ marginBottom: 12 }}\r\n                />\r\n                <Text variant=\"titleMedium\">No se encontraron tareas</Text>\r\n                <Text variant=\"bodySmall\" style={{ color: colors.outline }}>\r\n                  Intenta cambiar el filtro o la búsqueda\r\n                </Text>\r\n              </View>\r\n            ) : (\r\n              <FlatList\r\n                data={tareasFiltradas}\r\n                numColumns={numColumns}\r\n                key={numColumns}\r\n                keyExtractor={(item) =>\r\n                  item.id?.toString() ?? `tarea-${item.titulo}`\r\n                }\r\n                columnWrapperStyle={numColumns > 1 ? styles.row : undefined}\r\n                renderItem={({ item }) => {\r\n                  const notaTarea = notas[item.aula_id]?.find(\r\n                    (nota: NotaType) => nota.tarea_id === item.id\r\n                  );\r\n\r\n                  return (\r\n                    <CardTask\r\n                      descripcion={item.descripcion ?? \"sin descripción\"}\r\n                      fechaVencimiento={item.fecha_limite ?? \"sin límite\"}\r\n                      tipo={item.tipo ?? \"sin tipo\"}\r\n                      titulo={item.titulo}\r\n                      key={item.id}\r\n                      estado={notaTarea?.entregado ? \"Completado\" : \"Pendiente\"}\r\n                      calificacionRecibida={notaTarea?.nota ?? undefined}\r\n                      nombreAula={\r\n                        aulas.find((a) => a.id === item.aula_id)?.nombre ?? \"-\"\r\n                      }\r\n                    />\r\n                  );\r\n                }}\r\n                contentContainerStyle={{ paddingBottom: 24 }}\r\n              />\r\n            )}\r\n          </View>\r\n\r\n          {/* Resumen (lado derecho en pantallas grandes) */}\r\n          <View\r\n            style={[\r\n              styles.resumenContainer,\r\n              isLargeScreen && {\r\n                flex: 0.7,\r\n                flexWrap: \"nowrap\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n              },\r\n            ]}\r\n          >\r\n            <CardResumen\r\n              titulo=\"Entregadas\"\r\n              valor={`${completadas}/${totalTareas}`}\r\n              progreso={porcentaje}\r\n              isLarge={isLargeScreen}\r\n            />\r\n\r\n            <CardResumen\r\n              titulo=\"Promedio\"\r\n              valor={`${promedio}`}\r\n              subtitulo={isLargeScreen ? \"En base a tareas completadas\" : \"\"}\r\n              isLarge={isLargeScreen}\r\n            />\r\n\r\n            <CardResumen\r\n              titulo=\"Próximas\"\r\n              valor={`${vencimientos.length.toString()}`}\r\n              subtitulo={isLargeScreen ? \"Vencimientos cercanos\" : \"\"}\r\n              isLarge={isLargeScreen}\r\n            />\r\n          </View>\r\n        </View>\r\n      </LoadError>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TareaAlumno;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    maxWidth: 1000,\r\n    alignSelf: \"center\", // centra horizontalmente\r\n    width: \"100%\", // asegura que ocupe todo el ancho disponible\r\n    paddingHorizontal: 5,\r\n  },\r\n  topBar: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    gap: 12,\r\n    marginBottom: 5,\r\n  },\r\n  mainContent: {\r\n    flex: 1,\r\n  },\r\n  resumenContainer: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    gap: 10,\r\n    marginBottom: 10,\r\n  },\r\n  empty: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 32,\r\n  },\r\n  row: {\r\n    justifyContent: \"flex-start\",\r\n    gap: 16,\r\n    flexWrap: \"wrap\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport {\r\n  Card,\r\n  Text,\r\n  Button,\r\n  useTheme,\r\n  ProgressBar,\r\n  Badge,\r\n  IconButton,\r\n} from \"react-native-paper\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\n\r\ninterface Props {\r\n  titulo: string;\r\n  tipo: string;\r\n  entregados: number;\r\n  descripcion: string;\r\n  fechaEntrega: string;\r\n  cantidadAlumnos: number;\r\n  nombreAula: string | undefined;\r\n  onEditar?: () => void;\r\n  onEliminar?: () => void;\r\n  onCalificar?: () => void;\r\n}\r\n\r\nconst TareaCard = ({\r\n  titulo,\r\n  tipo,\r\n  entregados,\r\n  descripcion,\r\n  fechaEntrega,\r\n  cantidadAlumnos,\r\n  nombreAula,\r\n  onEditar,\r\n  onEliminar,\r\n  onCalificar,\r\n}: Props) => {\r\n  const theme = useTheme();\r\n  const progreso = cantidadAlumnos > 0 ? entregados / cantidadAlumnos : 0;\r\n\r\n  const tipoLabel: Record<string, string> = {\r\n    tp: \"Trabajo Práctico\",\r\n    tt: \"Trabajo Teórico\",\r\n    evaluacion: \"Evaluación\",\r\n    actitudinal: \"Actitudinal\",\r\n  };\r\n\r\n  return (\r\n    <Card mode=\"elevated\" style={styles.card}>\r\n      <Card.Content\r\n        style={{\r\n          paddingBottom: 4,\r\n          flex: 1,\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {/* Título y tipo */}\r\n        <View style={styles.header}>\r\n          <View style={{ flex: 1 }}>\r\n            <View style={styles.titleRow}>\r\n              <Text variant=\"titleMedium\" style={styles.title}>\r\n                {titulo}\r\n              </Text>\r\n              <Ionicons\r\n                name=\"time-outline\"\r\n                size={18}\r\n                color={theme.colors.primary}\r\n              />\r\n            </View>\r\n            <View style={styles.badgesRow}>\r\n              <Badge style={styles.badgeTipo}>{tipoLabel[tipo]}</Badge>\r\n              <Badge\r\n                style={styles.badgeEntregas}\r\n              >{`${entregados}/${cantidadAlumnos} entregadas`}</Badge>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Descripción */}\r\n        <Text variant=\"bodySmall\" style={styles.descripcion}>\r\n          {descripcion}\r\n        </Text>\r\n\r\n        {/* Progreso */}\r\n\r\n        <View style={styles.infoItem}>\r\n          <Ionicons\r\n            name=\"book-outline\"\r\n            size={14}\r\n            color={theme.colors.outline}\r\n          />\r\n          <Text style={styles.infoText}>{nombreAula}</Text>\r\n        </View>\r\n        <View style={styles.progreso}>\r\n          <View style={styles.progresoRow}>\r\n            <Text style={styles.label}>Progreso de entrega</Text>\r\n            <Text style={styles.label}>{Math.round(progreso * 100)}%</Text>\r\n          </View>\r\n          <ProgressBar\r\n            progress={progreso}\r\n            color={theme.colors.primary}\r\n            style={styles.progressBar}\r\n          />\r\n        </View>\r\n\r\n        {/* Info extra */}\r\n        <View style={styles.extraInfo}>\r\n          <View style={styles.infoItem}>\r\n            <Ionicons\r\n              name=\"calendar-outline\"\r\n              size={14}\r\n              color={theme.colors.outline}\r\n            />\r\n            <Text style={styles.infoText}>Vence: {fechaEntrega}</Text>\r\n          </View>\r\n          <View style={styles.infoItem}>\r\n            <Ionicons\r\n              name=\"people-outline\"\r\n              size={14}\r\n              color={theme.colors.outline}\r\n            />\r\n            <Text style={styles.infoText}>{cantidadAlumnos} Estudiantes</Text>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Botones */}\r\n        <View style={styles.buttonRow}>\r\n          <IconButton\r\n            mode=\"contained-tonal\"\r\n            containerColor=\"#eca469\"\r\n            iconColor=\"#2563EB\"\r\n            style={{ marginHorizontal: 2, borderRadius: 8 }}\r\n            onPress={onEditar}\r\n            icon={({ size, color }) => (\r\n              <Ionicons name=\"pencil-outline\" size={size} color={color} />\r\n            )}\r\n            accessibilityLabel=\"Editar tarea\"\r\n          />\r\n\r\n          <IconButton\r\n            mode=\"contained-tonal\"\r\n            containerColor=\"#FEE2E2\"\r\n            iconColor=\"#B91C1C\"\r\n            style={{ marginHorizontal: 2, borderRadius: 8 }}\r\n            onPress={onEliminar}\r\n            icon={({ size, color }) => (\r\n              <Ionicons name=\"trash-outline\" size={size} color={color} />\r\n            )}\r\n            accessibilityLabel=\"Eliminar tarea\"\r\n          />\r\n\r\n          <Button\r\n            mode=\"contained\"\r\n            style={{\r\n              borderRadius: 8,\r\n              marginLeft: 8,\r\n              height: 40, // igual al IconButton\r\n              justifyContent: \"center\",\r\n              paddingVertical: 0,\r\n            }}\r\n            contentStyle={{\r\n              flexDirection: \"row-reverse\",\r\n              paddingVertical: 0,\r\n              height: 40,\r\n            }}\r\n            labelStyle={{ fontSize: 14 }}\r\n            onPress={onCalificar}\r\n            icon={({ size, color }) => (\r\n              <Ionicons name=\"create-outline\" size={size} color={color} />\r\n            )}\r\n            accessibilityLabel=\"Calificar tarea\"\r\n          >\r\n            Calificar\r\n          </Button>\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TareaCard;\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    maxWidth: 360,\r\n    borderRadius: 12,\r\n    marginBottom: 16,\r\n    padding: 2,\r\n  },\r\n  header: {\r\n    marginBottom: 8,\r\n  },\r\n  titleRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 6,\r\n    marginBottom: 4,\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  badgesRow: {\r\n    flexDirection: \"row\",\r\n    gap: 8,\r\n    marginBottom: 8,\r\n  },\r\n  badgeTipo: {\r\n    backgroundColor: \"#FEE2E2\",\r\n    color: \"#B91C1C\",\r\n  },\r\n  badgeEntregas: {\r\n    backgroundColor: \"#E0E7FF\",\r\n    color: \"#3730A3\",\r\n  },\r\n  descripcion: {\r\n    marginBottom: 12,\r\n  },\r\n  progreso: {\r\n    marginBottom: 12,\r\n  },\r\n  progresoRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 10,\r\n  },\r\n  progressBar: {\r\n    height: 6,\r\n    borderRadius: 4,\r\n  },\r\n  extraInfo: {\r\n    flexDirection: \"row\",\r\n    gap: 16,\r\n    marginBottom: 12,\r\n    flexWrap: \"wrap\",\r\n  },\r\n  infoItem: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 4,\r\n  },\r\n  infoText: {\r\n    fontSize: 12,\r\n  },\r\n  label: {\r\n    fontSize: 12,\r\n  },\r\n  buttonRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 3,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { TextInput, HelperText } from \"react-native-paper\";\r\n\r\ninterface DateInputProps {\r\n  label?: string;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nconst DateInput: React.FC<DateInputProps> = ({\r\n  label = \"Fecha\",\r\n  value,\r\n  onChange,\r\n  placeholder = \"DD/MM/YYYY\",\r\n}) => {\r\n  const [error, setError] = useState(false);\r\n\r\n  const validate = (text: string) => {\r\n    const regex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\r\n    setError(!(text === \"\" || regex.test(text)));\r\n  };\r\n\r\n  const formatFecha = (text: string): string => {\r\n    const cleaned = text.replace(/\\D/g, \"\"); // solo números\r\n\r\n    if (cleaned.length <= 2) return cleaned;\r\n    if (cleaned.length <= 4)\r\n      return `${cleaned.slice(0, 2)}/${cleaned.slice(2)}`;\r\n    return `${cleaned.slice(0, 2)}/${cleaned.slice(2, 4)}/${cleaned.slice(\r\n      4,\r\n      8\r\n    )}`;\r\n  };\r\n\r\n  const handleChange = (text: string) => {\r\n    const formatted = formatFecha(text);\r\n    validate(formatted);\r\n    onChange(formatted);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextInput\r\n        label={label}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChangeText={handleChange}\r\n        error={error}\r\n        mode=\"outlined\"\r\n        keyboardType=\"numeric\"\r\n        style={{ marginVertical: 8 }}\r\n        maxLength={10} // Evita que escriban más de lo necesario\r\n      />\r\n      {error && (\r\n        <HelperText type=\"error\" visible={error}>\r\n          Formato inválido. Usa DD/MM/YYYY\r\n        </HelperText>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateInput;\r\n","import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { TouchableRipple, useTheme, Text } from \"react-native-paper\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\n\r\ninterface Props {\r\n  label: string;\r\n  status: \"checked\" | \"unchecked\";\r\n  onPress: () => void;\r\n}\r\n\r\nconst CheckboxItem = ({ label, status, onPress }: Props) => {\r\n  const { colors } = useTheme();\r\n  return (\r\n    <TouchableRipple onPress={onPress} style={styles.container}>\r\n      <View style={styles.row}>\r\n        <Ionicons\r\n          name={status === \"checked\" ? \"checkbox-outline\" : \"square-outline\"}\r\n          size={24}\r\n          color={status === \"checked\" ? colors.primary : colors.secondary}\r\n        />\r\n        <Text style={styles.label}>{label}</Text>\r\n      </View>\r\n    </TouchableRipple>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 4,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 12,\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default CheckboxItem;\r\n","import { useEffect, useState, useMemo } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Platform,\r\n  useWindowDimensions,\r\n  KeyboardAvoidingView,\r\n} from \"react-native\";\r\nimport {\r\n  Portal,\r\n  Button,\r\n  Text,\r\n  TextInput,\r\n  Menu,\r\n  Modal,\r\n  useTheme,\r\n  TouchableRipple,\r\n} from \"react-native-paper\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\nimport DateInput from \"../generales/DateInput\";\r\nimport CheckboxItem from \"../generales/Checkboxtem\";\r\nimport { useAppData } from \"../../context/appDataContext\";\r\nimport { tareaNueva } from \"../../types/TareaType\";\r\nimport { useAuth } from \"../../context/authContent\";\r\nimport {\r\n  DateFormatIsoLat,\r\n  DateFormatLatIso,\r\n  formatearFecha,\r\n} from \"../../utils/DateFormat\";\r\nimport {\r\n  tipoTareaTextoToValor,\r\n  tipoTareaValorToTexto,\r\n} from \"../../utils/tipoTarea\";\r\nimport { getNotas } from \"../../api/notas\";\r\nimport { NotaType } from \"../../types/NotaType\";\r\n\r\nconst tipos = [\r\n  \"Evaluación\",\r\n  \"Trabajo Práctico\",\r\n  \"Trabajo Teórico\",\r\n  \"Actitudinal\",\r\n];\r\n\r\ninterface props {\r\n  visible: boolean;\r\n  onDismiss: () => void;\r\n  onGuardar: (tarea: tareaNueva) => Promise<void>;\r\n  tareaInicial?: tareaNueva | null;\r\n}\r\n\r\nconst CrearTareaModal = ({\r\n  visible,\r\n  onDismiss,\r\n  onGuardar,\r\n  tareaInicial,\r\n}: props) => {\r\n  const { aulas, alumnosMap } = useAppData();\r\n  const { width } = useWindowDimensions();\r\n  const { colors } = useTheme();\r\n  const { user } = useAuth();\r\n  const [titulo, setTitulo] = useState(\"\");\r\n  const [descripcion, setDescripcion] = useState(\"\");\r\n  const [materiaId, setMateriaId] = useState<number | null>(null);\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n  const [tipo, setTipo] = useState<string | null>(null);\r\n  const [menuTipoVisible, setMenuTipoVisible] = useState(false);\r\n\r\n  const [fechaLimite, setFechaLimite] = useState<string>();\r\n\r\n  const [asignarTodos, setAsignarTodos] = useState(true);\r\n  const [alumnosSeleccionados, setAlumnosSeleccionados] = useState<number[]>(\r\n    []\r\n  );\r\n  const [showAlumnos, setShowAlumnos] = useState(false);\r\n\r\n  const alumnosDeMateria = useMemo(() => {\r\n    const aula = aulas.find((a) => a.id === materiaId);\r\n    if (!aula) return [];\r\n    return aula.alumnoIds.map((id) => alumnosMap[id]).filter(Boolean);\r\n  }, [materiaId, aulas, alumnosMap]);\r\n\r\n  const toggleAlumno = (id: number) => {\r\n    if (alumnosSeleccionados.includes(id)) {\r\n      setAlumnosSeleccionados(alumnosSeleccionados.filter((x) => x !== id));\r\n    } else {\r\n      setAlumnosSeleccionados([...alumnosSeleccionados, id]);\r\n    }\r\n  };\r\n  const reset = () => {\r\n    setTitulo(\"\");\r\n    setDescripcion(\"\");\r\n    setTipo(null);\r\n    setMateriaId(null);\r\n    setFechaLimite(undefined);\r\n    setAsignarTodos(true);\r\n    setAlumnosSeleccionados([]);\r\n  };\r\n\r\n  const cerrar = () => {\r\n    reset();\r\n    onDismiss();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const cargarDatos = async () => {\r\n      if (tareaInicial) {\r\n        setTitulo(tareaInicial.titulo);\r\n        setDescripcion(tareaInicial.descripcion as string);\r\n        setTipo(\r\n          tareaInicial.tipo != null\r\n            ? tipoTareaValorToTexto[tareaInicial.tipo]\r\n            : null\r\n        );\r\n        setMateriaId(tareaInicial.aula_id);\r\n        setFechaLimite(\r\n          DateFormatIsoLat(tareaInicial.fecha_limite as string) as string\r\n        );\r\n        try {\r\n          const notas = await getNotas(tareaInicial.id as number);\r\n\r\n          const idsAlumnos = notas.map((nota: NotaType) => nota.alumno_id);\r\n          setAlumnosSeleccionados(idsAlumnos);\r\n\r\n          const aula = aulas.find((a) => a.id === tareaInicial.aula_id);\r\n          if (aula) {\r\n            const todosIds = aula.alumnoIds ?? [];\r\n            // Marcar asignarTodos solo si todos los alumnos están seleccionados\r\n            setAsignarTodos(\r\n              idsAlumnos.length > 0 &&\r\n                todosIds.length === idsAlumnos.length &&\r\n                todosIds.every((id) => idsAlumnos.includes(id))\r\n            );\r\n          } else {\r\n            setAsignarTodos(false);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error cargando notas de tarea\", error);\r\n        }\r\n      } else {\r\n        reset();\r\n      }\r\n    };\r\n\r\n    if (visible) {\r\n      cargarDatos();\r\n    }\r\n  }, [visible, tareaInicial]);\r\n\r\n  const handleGuardar = () => {\r\n    if (materiaId === null) return; // Prevent calling with invalid aula_id\r\n    if (!user?.id) return; // Prevent calling with undefined created_by\r\n\r\n    const tarea = {\r\n      titulo,\r\n      descripcion,\r\n      tipo: tipoTareaTextoToValor[tipo as string],\r\n      fecha_limite: DateFormatLatIso(fechaLimite ?? \"\"),\r\n      fecha_creacion: formatearFecha(new Date()),\r\n      aula_id: materiaId,\r\n      created_by: user.id,\r\n      asignados: alumnosSeleccionados,\r\n    };\r\n    if (tareaInicial?.id) {\r\n      // Modo edición\r\n      onGuardar({ ...tarea, id: tareaInicial.id });\r\n    } else {\r\n      // Modo creación\r\n      onGuardar(tarea);\r\n    }\r\n\r\n    onDismiss();\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <Modal\r\n        visible={visible}\r\n        onDismiss={cerrar}\r\n        contentContainerStyle={{\r\n          backgroundColor: colors.surface,\r\n          padding: 16,\r\n          margin: 10,\r\n          borderRadius: 12,\r\n          width: \"90%\",\r\n          maxWidth: 600,\r\n          maxHeight: \"95%\",\r\n          alignSelf: \"center\",\r\n        }}\r\n      >\r\n        <KeyboardAvoidingView\r\n          behavior={Platform.OS === \"ios\" ? \"padding\" : undefined}\r\n          style={{ flex: 1 }}\r\n        >\r\n          <ScrollView\r\n            contentContainerStyle={{ paddingBottom: 24 }}\r\n            keyboardShouldPersistTaps=\"handled\"\r\n            showsVerticalScrollIndicator={false}\r\n          >\r\n            {/* Título y materia */}\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                marginBottom: 16,\r\n              }}\r\n            >\r\n              <Text variant=\"titleLarge\">\r\n                {tareaInicial ? \"Editar Tarea\" : \"Crear Tarea\"}\r\n              </Text>\r\n\r\n              <Menu\r\n                visible={menuVisible}\r\n                onDismiss={() => setMenuVisible(false)}\r\n                anchor={\r\n                  <Button\r\n                    compact\r\n                    mode=\"text\"\r\n                    icon={({ size, color }) => (\r\n                      <Ionicons name=\"book-outline\" size={size} color={color} />\r\n                    )}\r\n                    onPress={() => setMenuVisible(true)}\r\n                    contentStyle={{ flexDirection: \"row-reverse\" }}\r\n                  >\r\n                    {aulas.find((m) => m.id === materiaId)?.nombre ??\r\n                      \"Seleccionar Aula\"}\r\n                  </Button>\r\n                }\r\n              >\r\n                {aulas.map((m) => (\r\n                  <Menu.Item\r\n                    key={m.id}\r\n                    onPress={() => {\r\n                      setMateriaId(m.id);\r\n                      setMenuVisible(false);\r\n                      if (asignarTodos) {\r\n                        setAlumnosSeleccionados(m.alumnoIds ?? []);\r\n                      }\r\n                    }}\r\n                    title={m.nombre}\r\n                  />\r\n                ))}\r\n              </Menu>\r\n            </View>\r\n\r\n            {/* Inputs */}\r\n            <TextInput\r\n              label=\"Título\"\r\n              mode=\"outlined\"\r\n              value={titulo}\r\n              onChangeText={setTitulo}\r\n              style={{ marginBottom: 12 }}\r\n              returnKeyType=\"next\"\r\n            />\r\n\r\n            <TextInput\r\n              label=\"Descripción\"\r\n              mode=\"outlined\"\r\n              value={descripcion}\r\n              onChangeText={setDescripcion}\r\n              multiline\r\n              numberOfLines={3}\r\n              style={{ marginBottom: 12 }}\r\n            />\r\n\r\n            <Menu\r\n              visible={menuTipoVisible}\r\n              onDismiss={() => setMenuTipoVisible(false)}\r\n              mode=\"elevated\"\r\n              anchor={\r\n                <Button\r\n                  mode=\"outlined\"\r\n                  onPress={() => setMenuTipoVisible(true)}\r\n                  icon={({ size, color }) => (\r\n                    <Ionicons name=\"layers-outline\" size={size} color={color} />\r\n                  )}\r\n                  style={{ marginBottom: 12 }}\r\n                  contentStyle={{ flexDirection: \"row-reverse\" }}\r\n                >\r\n                  {tipo || \"Seleccionar tipo\"}\r\n                </Button>\r\n              }\r\n            >\r\n              {tipos.map((t) => (\r\n                <Menu.Item\r\n                  key={t}\r\n                  onPress={() => {\r\n                    setTipo(t);\r\n                    setMenuTipoVisible(false);\r\n                  }}\r\n                  title={t}\r\n                />\r\n              ))}\r\n            </Menu>\r\n\r\n            <DateInput\r\n              label=\"Fecha límite\"\r\n              value={fechaLimite || \"\"}\r\n              onChange={setFechaLimite}\r\n              placeholder=\"DD/MM/YYYY\"\r\n            />\r\n\r\n            {/* <CheckboxItem\r\n              label=\"Asignar a todos los alumnos\"\r\n              status={asignarTodos ? \"checked\" : \"unchecked\"}\r\n              onPress={() => {\r\n                setAsignarTodos(!asignarTodos);\r\n                setAlumnosSeleccionados(\r\n                  !asignarTodos ? alumnosDeMateria.map((a) => a.id) : []\r\n                );\r\n              }}\r\n            /> */}\r\n\r\n            {materiaId && (\r\n              <>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <CheckboxItem\r\n                    label=\"Asignar a todos los alumnos\"\r\n                    status={asignarTodos ? \"checked\" : \"unchecked\"}\r\n                    onPress={() => {\r\n                      const nuevoAsignarTodos = !asignarTodos;\r\n                      setAsignarTodos(nuevoAsignarTodos);\r\n                      if (nuevoAsignarTodos) {\r\n                        const aula = aulas.find((a) => a.id === materiaId);\r\n                        setAlumnosSeleccionados(\r\n                          aula ? aula.alumnoIds ?? [] : []\r\n                        );\r\n                        setShowAlumnos(false);\r\n                      } else {\r\n                        setAlumnosSeleccionados([]);\r\n                        setShowAlumnos(true); // Mostrar lista automáticamente al desmarcar\r\n                      }\r\n                    }}\r\n                  />\r\n                  {!asignarTodos && (\r\n                    <TouchableRipple\r\n                      onPress={() => setShowAlumnos(!showAlumnos)}\r\n                      style={{ padding: 8 }}\r\n                    >\r\n                      <Ionicons\r\n                        name={\r\n                          showAlumnos\r\n                            ? \"chevron-up-outline\"\r\n                            : \"chevron-down-outline\"\r\n                        }\r\n                        size={24}\r\n                        color={colors.primary}\r\n                      />\r\n                    </TouchableRipple>\r\n                  )}\r\n                </View>\r\n\r\n                {!asignarTodos && showAlumnos && (\r\n                  <View\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: \"#e0e0e0\",\r\n                      borderRadius: 8,\r\n                      marginBottom: 12,\r\n                      maxHeight: 250,\r\n                      paddingVertical: 4,\r\n                    }}\r\n                  >\r\n                    <ScrollView\r\n                      style={{ maxHeight: 170 }}\r\n                      contentContainerStyle={{ paddingHorizontal: 8 }}\r\n                      keyboardShouldPersistTaps=\"handled\"\r\n                      persistentScrollbar\r\n                    >\r\n                      {alumnosDeMateria.map((alumno) => (\r\n                        <CheckboxItem\r\n                          key={alumno.id}\r\n                          label={`${alumno.nombre} ${alumno.apellido}`}\r\n                          status={\r\n                            alumnosSeleccionados.includes(alumno.id)\r\n                              ? \"checked\"\r\n                              : \"unchecked\"\r\n                          }\r\n                          onPress={() => toggleAlumno(alumno.id)}\r\n                        />\r\n                      ))}\r\n                    </ScrollView>\r\n                  </View>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {/* Botones */}\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"flex-end\",\r\n                marginTop: 16,\r\n                gap: 8,\r\n              }}\r\n            >\r\n              <Button onPress={cerrar}>Cancelar</Button>\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={handleGuardar}\r\n                disabled={\r\n                  !titulo.trim() ||\r\n                  !materiaId ||\r\n                  !tipo ||\r\n                  (alumnosSeleccionados.length === 0 && !asignarTodos)\r\n                }\r\n              >\r\n                Guardar\r\n              </Button>\r\n            </View>\r\n          </ScrollView>\r\n        </KeyboardAvoidingView>\r\n      </Modal>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nexport default CrearTareaModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Platform,\r\n  KeyboardAvoidingView,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport {\r\n  Modal,\r\n  Portal,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  useTheme,\r\n  RadioButton,\r\n} from \"react-native-paper\";\r\nimport { NotaTareaUpdateMasiva, NotaType } from \"../../types/NotaType\";\r\nimport { TareaBase } from \"../../types/TareaType\";\r\nimport { getNotas } from \"../../api/notas\";\r\nimport { useAppData } from \"../../context/appDataContext\";\r\nimport { UserConNota } from \"../../types/UserType\";\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  onDismiss: () => void;\r\n  onGuardar: (nota: NotaTareaUpdateMasiva) => void;\r\n  tarea: TareaBase;\r\n}\r\n\r\nconst CalificarTareaModal = ({\r\n  visible,\r\n  onDismiss,\r\n  tarea,\r\n  onGuardar,\r\n}: Props) => {\r\n  const { colors } = useTheme();\r\n  const { alumnosMap } = useAppData();\r\n  const [alumnos, setAlumnos] = useState<UserConNota[]>([]);\r\n\r\n  const botonDeshabilitado = alumnos.some(\r\n    (alumno) => alumno.nota.trim() === \"\"\r\n  );\r\n  useEffect(() => {\r\n    const fetchNotas = async () => {\r\n      if (!tarea?.id) return;\r\n\r\n      try {\r\n        const notas = await getNotas(tarea.id);\r\n        // Mapear para estructurar como se necesita en el frontend\r\n        const alumnosConNotas = notas.map((nota: NotaType) => ({\r\n          id: nota.alumno_id,\r\n          nombre: alumnosMap[nota.alumno_id]?.nombre ?? \"Alumno\",\r\n          apellido: alumnosMap[nota.alumno_id].apellido,\r\n          nota: nota.nota ?? \"\",\r\n          entregado: nota.entregado ?? false,\r\n          nota_id: nota.id,\r\n        }));\r\n        setAlumnos(alumnosConNotas);\r\n      } catch (error) {\r\n        console.error(\"Error al cargar notas\", error);\r\n      }\r\n    };\r\n\r\n    fetchNotas();\r\n  }, [tarea]);\r\n\r\n  const cerrarModal = () => {\r\n    setAlumnos([]);\r\n    onDismiss();\r\n  };\r\n\r\n  const handleGuardar = async () => {\r\n    const notasActualizada: NotaTareaUpdateMasiva = {\r\n      tarea_id: tarea.id as number,\r\n      notas: alumnos.map((alumno) => ({\r\n        alumno_id: alumno.id,\r\n        nota: alumno.nota, // ya es string (por ejemplo, \"9.50\")\r\n        entregado: alumno.entregado,\r\n      })),\r\n    };\r\n    onGuardar(notasActualizada);\r\n    cerrarModal();\r\n  };\r\n\r\n  const handleNotaChange = (id: number, nuevaNota: string) => {\r\n    setAlumnos((prev) =>\r\n      prev.map((a) => (a.id === id ? { ...a, nota: nuevaNota } : a))\r\n    );\r\n  };\r\n\r\n  const toggleEntregado = (id: number) => {\r\n    setAlumnos((prev) =>\r\n      prev.map((a) => (a.id === id ? { ...a, entregado: !a.entregado } : a))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <Modal\r\n        visible={visible}\r\n        onDismiss={onDismiss}\r\n        contentContainerStyle={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            backgroundColor: colors.surface,\r\n            width: \"90%\",\r\n            maxWidth: 500,\r\n            height: \"90%\",\r\n            borderRadius: 12,\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <KeyboardAvoidingView\r\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n            style={{ flex: 1 }}\r\n            keyboardVerticalOffset={90}\r\n          >\r\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n              <ScrollView\r\n                keyboardShouldPersistTaps=\"handled\"\r\n                contentContainerStyle={{\r\n                  padding: 16,\r\n                  flexGrow: 1,\r\n                }}\r\n                showsVerticalScrollIndicator={false}\r\n              >\r\n                <Text variant=\"titleLarge\" style={{ marginBottom: 8 }}>\r\n                  Calificar Tarea\r\n                </Text>\r\n                <Text variant=\"titleMedium\">{tarea.titulo}</Text>\r\n                <Text style={{ marginBottom: 16 }}>{tarea.descripcion}</Text>\r\n\r\n                <View style={{ marginTop: 16 }}>\r\n                  {/* Encabezado */}\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      paddingHorizontal: 5,\r\n                      marginBottom: 8,\r\n                    }}\r\n                  >\r\n                    <Text style={{ flex: 1, fontWeight: \"bold\" }}>Alumno</Text>\r\n                    <Text\r\n                      style={{\r\n                        width: 100,\r\n                        textAlign: \"center\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      Entregado\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        width: 80,\r\n                        textAlign: \"center\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      Nota\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {alumnos.map((alumno) => (\r\n                    <View\r\n                      key={alumno.id}\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        paddingVertical: 6,\r\n                        paddingHorizontal: 5,\r\n                        borderBottomWidth: 0.5,\r\n                        borderColor: \"#ddd\",\r\n                      }}\r\n                    >\r\n                      {/* Nombre */}\r\n                      <Text\r\n                        style={{ flex: 1 }}\r\n                      >{`${alumno.nombre} ${alumno.apellido}`}</Text>\r\n\r\n                      <View\r\n                        style={{\r\n                          borderColor: colors.primary,\r\n                          borderWidth: Platform.OS != \"web\" ? 1 : 0,\r\n                          borderRadius: \"50%\",\r\n                          marginRight: 40,\r\n                        }}\r\n                      >\r\n                        <RadioButton\r\n                          value={alumno.id.toString()}\r\n                          status={alumno.entregado ? \"checked\" : \"unchecked\"}\r\n                          onPress={() => toggleEntregado(alumno.id)}\r\n                        />\r\n                      </View>\r\n\r\n                      {/* Nota */}\r\n                      <TextInput\r\n                        value={alumno.nota.toString()}\r\n                        onChangeText={(text) =>\r\n                          handleNotaChange(alumno.id, text)\r\n                        }\r\n                        mode=\"outlined\"\r\n                        keyboardType=\"numeric\"\r\n                        style={{\r\n                          width: 70,\r\n                          height: 40,\r\n\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      />\r\n                    </View>\r\n                  ))}\r\n                </View>\r\n              </ScrollView>\r\n            </TouchableWithoutFeedback>\r\n          </KeyboardAvoidingView>\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-end\",\r\n              marginTop: 16,\r\n              gap: 8,\r\n              padding: 10,\r\n            }}\r\n          >\r\n            <Button onPress={onDismiss}>Cancelar</Button>\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={handleGuardar}\r\n              disabled={botonDeshabilitado}\r\n            >\r\n              Guardar\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nexport default CalificarTareaModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, FlatList, StyleSheet, useWindowDimensions } from \"react-native\";\r\nimport {\r\n  Text,\r\n  Button,\r\n  useTheme,\r\n  IconButton,\r\n  Snackbar,\r\n  Portal,\r\n  Dialog,\r\n} from \"react-native-paper\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\nimport TareaCard from \"../../components/evaluacion/TareaCard\";\r\nimport CrearTareaModal from \"../../components/evaluacion/CrearTareaModal\";\r\nimport { useAppData } from \"../../context/appDataContext\";\r\nimport LoadError from \"../../components/LoadError\";\r\nimport { TareaBase, tareaNueva } from \"../../types/TareaType\";\r\nimport { CrearTarea, EditarTarea, eliminarTarea } from \"../../api/tarea\";\r\nimport {\r\n  asignarTareaMasiva,\r\n  getNotas,\r\n  eliminarNotasMasivas,\r\n  actualizarNotasMasivas,\r\n} from \"../../api/notas\";\r\nimport { NotaTareaUpdateMasiva, NotaType } from \"../../types/NotaType\";\r\nimport CalificarTareaModal from \"../../components/evaluacion/CalificarTareaModal\";\r\nimport FiltroTareas from \"../../components/evaluacion/FiltroTarea\";\r\n\r\nconst TareaProfe = () => {\r\n  const { loadTareas, tareas, tareasError, tareasLoading, aulas } =\r\n    useAppData();\r\n\r\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\r\n  const [calificarVisible, setCalificarVisible] = useState<boolean>(false);\r\n  const [visibleSnack, setVisibleSnack] = useState(false);\r\n  const [tareaAEliminar, setTareaAEliminar] = useState<TareaBase | null>(null);\r\n  const [tareaEditar, setTareaEditar] = useState<tareaNueva | null>(null);\r\n  const [tareaCalificar, setTareaCalificar] = useState<TareaBase | null>(null);\r\n  const [confirmVisible, setConfirmVisible] = useState(false);\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  const [tareasFiltradass, setTareasFiltradass] = useState<TareaBase[]>([]);\r\n\r\n  const theme = useTheme();\r\n  const { width } = useWindowDimensions();\r\n\r\n  // Definimos cuántas columnas usar según el ancho\r\n  const numColumns = width >= 1024 ? 3 : width >= 768 ? 2 : 1;\r\n  const isSmall = width < 600;\r\n\r\n  useEffect(() => {\r\n    loadTareas();\r\n  }, []);\r\n\r\n  const handlePressEliminar = (tarea: TareaBase) => {\r\n    setTareaAEliminar(tarea);\r\n    setConfirmVisible(true);\r\n  };\r\n\r\n  const onConfirmarEliminar = async () => {\r\n    if (!tareaAEliminar) return;\r\n    try {\r\n      await eliminarTarea(tareaAEliminar.id as number);\r\n      setMensaje(\"Tarea eliminada\");\r\n      setVisibleSnack(true);\r\n      loadTareas(true); // refrescar lista\r\n    } catch {\r\n      setMensaje(\"Error al eliminar\");\r\n      setVisibleSnack(true);\r\n    } finally {\r\n      setConfirmVisible(false);\r\n      setTareaAEliminar(null);\r\n    }\r\n  };\r\n\r\n  const onEditar = (tarea: tareaNueva) => {\r\n    setTareaEditar(tarea);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const onCalificar = (tarea: TareaBase) => {\r\n    setTareaCalificar(tarea);\r\n    setCalificarVisible(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalVisible(false);\r\n    setTareaEditar(null);\r\n  };\r\n\r\n  const closeModalCalificar = () => {\r\n    setCalificarVisible(false);\r\n    loadTareas(true);\r\n  };\r\n\r\n  const handleGuardarNotas = async (\r\n    notasActualizada: NotaTareaUpdateMasiva\r\n  ) => {\r\n    try {\r\n      await actualizarNotasMasivas(notasActualizada);\r\n      setMensaje(\"Notas actualizadas correctamente.\");\r\n    } catch (error) {\r\n      console.error(\"Error al actualizar notas:\", error);\r\n      setMensaje(\"Error al actualizar notas.\");\r\n    } finally {\r\n      setVisibleSnack(true);\r\n      loadTareas(true);\r\n    }\r\n  };\r\n\r\n  const handleGuardarTarea = async (tarea: tareaNueva & { id?: number }) => {\r\n    try {\r\n      let tarea_id = tarea.id;\r\n\r\n      if (!tarea_id) {\r\n        // Crear tarea (modo NUEVA)\r\n        const nueva = await CrearTarea(tarea);\r\n        tarea_id = nueva.id;\r\n\r\n        if (Array.isArray(tarea.asignados) && tarea.asignados.length > 0) {\r\n          await asignarTareaMasiva(tarea_id as number, tarea.asignados);\r\n        }\r\n      } else {\r\n        // Editar tarea existente (modo EDICIÓN)\r\n        const tareaParaEditar = {\r\n          titulo: tarea.titulo,\r\n          descripcion: tarea.descripcion,\r\n          tipo: tarea.tipo as string,\r\n          fecha_limite: tarea.fecha_limite,\r\n          aula_id: tarea.aula_id,\r\n        };\r\n\r\n        await EditarTarea(tarea_id, tareaParaEditar);\r\n\r\n        // Obtener IDs de notas existentes (los alumnos ya asignados)\r\n        const notas = await getNotas(tarea_id);\r\n        const idsYaAsignados: number[] = notas.map(\r\n          (n: NotaType) => n.alumno_id\r\n        );\r\n\r\n        const nuevosAlumnos = tarea.asignados.filter(\r\n          (id) => !idsYaAsignados.includes(id)\r\n        );\r\n\r\n        const alumnosQuitados = idsYaAsignados.filter(\r\n          (id) => !tarea.asignados.includes(id)\r\n        );\r\n\r\n        if (nuevosAlumnos.length > 0) {\r\n          await asignarTareaMasiva(tarea_id, nuevosAlumnos);\r\n        }\r\n\r\n        if (alumnosQuitados.length > 0) {\r\n          // Debes implementar esta función para eliminar notas\r\n          await eliminarNotasMasivas(tarea_id, alumnosQuitados);\r\n        }\r\n      }\r\n\r\n      setMensaje(\"Tarea guardada correctamente.\");\r\n      setVisibleSnack(true);\r\n      loadTareas(true);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMensaje(\"Error al guardar tarea\");\r\n      setVisibleSnack(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Snackbar\r\n        visible={visibleSnack && mensaje !== \"\"}\r\n        duration={1000}\r\n        onDismiss={() => {\r\n          setVisibleSnack(false);\r\n          setMensaje(\"\");\r\n        }}\r\n        action={{\r\n          label: \"Dale\",\r\n          onPress: () => setVisibleSnack(false),\r\n        }}\r\n      >\r\n        {mensaje}\r\n      </Snackbar>\r\n      <LoadError\r\n        isLoading={tareasLoading}\r\n        hasError={tareasError}\r\n        errorMessage=\"Error al cargar tareas\"\r\n        reLoad={() => loadTareas(true)}\r\n      >\r\n        <View style={{ flex: 1 }}>\r\n          {/* Header */}\r\n          <View style={[styles.header]}>\r\n            <View style={{ flex: 1 }}>\r\n              <Text variant=\"titleLarge\">Gestión de Tareas</Text>\r\n              <Text variant=\"bodyMedium\">Crear, gestionar y calificar</Text>\r\n            </View>\r\n            {isSmall ? (\r\n              <IconButton\r\n                mode=\"contained\"\r\n                onPress={() => setModalVisible(true)}\r\n                icon={({ color, size }) => (\r\n                  <Ionicons name=\"add\" size={size} color={color} />\r\n                )}\r\n              ></IconButton>\r\n            ) : (\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={() => setModalVisible(true)}\r\n                icon={({ color, size }) => (\r\n                  <Ionicons name=\"add\" size={size} color={color} />\r\n                )}\r\n              >\r\n                Crear Tarea\r\n              </Button>\r\n            )}\r\n\r\n            <IconButton\r\n              mode=\"contained\"\r\n              onPress={() => loadTareas(true)}\r\n              icon={({ color, size }) => (\r\n                <Ionicons name=\"refresh\" size={size} color={color} />\r\n              )}\r\n            ></IconButton>\r\n          </View>\r\n\r\n          <FiltroTareas onFiltrar={setTareasFiltradass} />\r\n\r\n          {/* Lista o vacío */}\r\n          {tareasFiltradass.length === 0 ? (\r\n            <View style={styles.empty}>\r\n              <Ionicons\r\n                name=\"document-text-outline\"\r\n                size={48}\r\n                color={theme.colors.onSurfaceDisabled}\r\n                style={{ marginBottom: 12 }}\r\n              />\r\n              <Text variant=\"titleMedium\">No se encontraron tareas</Text>\r\n              <Text variant=\"bodySmall\" style={{ color: theme.colors.outline }}>\r\n                Intenta cambiar el filtro o la búsqueda\r\n              </Text>\r\n              <Button\r\n                mode=\"contained\"\r\n                style={{ marginTop: 16 }}\r\n                icon={({ color, size }) => (\r\n                  <Ionicons name=\"add\" size={size} color={color} />\r\n                )}\r\n                onPress={() => setModalVisible(true)}\r\n              >\r\n                Crear tu primera tarea\r\n              </Button>\r\n            </View>\r\n          ) : (\r\n            <FlatList\r\n              data={tareasFiltradass}\r\n              numColumns={numColumns}\r\n              key={numColumns} // Esto fuerza un re-render al cambiar columnas\r\n              keyExtractor={(item, index) =>\r\n                item.id?.toString() ?? `tarea-${index}`\r\n              }\r\n              columnWrapperStyle={numColumns > 1 ? styles.row : undefined}\r\n              renderItem={({ item }) => (\r\n                <View style={styles.cardWrapper}>\r\n                  <TareaCard\r\n                    cantidadAlumnos={item.cantidad_alumnos ?? 0}\r\n                    descripcion={item.descripcion ?? \"sis descripción\"}\r\n                    entregados={item.entregados ?? 0}\r\n                    fechaEntrega={item.fecha_limite ?? \"sin limite\"}\r\n                    tipo={item.tipo ?? \"sin tipo\"}\r\n                    titulo={item.titulo}\r\n                    key={item.id}\r\n                    nombreAula={\r\n                      aulas.find((a) => a.id === item.aula_id)?.nombre\r\n                    }\r\n                    onCalificar={() => onCalificar(item)}\r\n                    onEliminar={() => handlePressEliminar(item)}\r\n                    onEditar={() => onEditar(item as tareaNueva)}\r\n                  />\r\n                </View>\r\n              )}\r\n              contentContainerStyle={{ paddingBottom: 24 }}\r\n            />\r\n          )}\r\n        </View>\r\n\r\n        <Portal>\r\n          <Dialog\r\n            visible={confirmVisible}\r\n            onDismiss={() => setConfirmVisible(false)}\r\n            style={{ borderRadius: 8 }}\r\n          >\r\n            <Dialog.Title>Confirmar eliminación</Dialog.Title>\r\n            <Dialog.Content>\r\n              <Text variant=\"bodyMedium\">\r\n                ¿Estás seguro de que querés eliminar la tarea \"\r\n                {tareaAEliminar?.titulo}\"?\r\n              </Text>\r\n            </Dialog.Content>\r\n            <Dialog.Actions>\r\n              <Button onPress={() => setConfirmVisible(false)}>Cancelar</Button>\r\n              <Button onPress={onConfirmarEliminar} textColor=\"#B91C1C\">\r\n                Eliminar\r\n              </Button>\r\n            </Dialog.Actions>\r\n          </Dialog>\r\n        </Portal>\r\n        <CrearTareaModal\r\n          visible={modalVisible}\r\n          onDismiss={closeModal}\r\n          onGuardar={handleGuardarTarea}\r\n          tareaInicial={tareaEditar}\r\n        />\r\n        {tareaCalificar && (\r\n          <CalificarTareaModal\r\n            visible={calificarVisible}\r\n            onDismiss={() => closeModalCalificar()}\r\n            tarea={tareaCalificar as TareaBase}\r\n            onGuardar={handleGuardarNotas}\r\n          />\r\n        )}\r\n      </LoadError>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TareaProfe;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    maxWidth: 1000,\r\n    alignSelf: \"center\", // centra horizontalmente\r\n    width: \"100%\", // asegura que ocupe todo el ancho disponible\r\n    paddingHorizontal: 5,\r\n  },\r\n  row: {\r\n    justifyContent: \"space-between\", // Cambiado de \"center\" a \"flex-start\"\r\n    gap: 20, // Más espacio entre cards en desktop\r\n    flexWrap: \"wrap\",\r\n    marginTop: 15, // Separación visual respecto a los filtros\r\n  },\r\n  header: {\r\n    marginBottom: 16,\r\n    flexDirection: \"row\",\r\n    gap: 12,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  filters: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    gap: 12,\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n    flexWrap: \"wrap\",\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    borderRadius: 16,\r\n    width: \"100%\",\r\n  },\r\n  card: {\r\n    marginBottom: 30, // Más espacio debajo de cada card\r\n  },\r\n  empty: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 32,\r\n  },\r\n\r\n  cardWrapper: {\r\n    flex: 1,\r\n    paddingHorizontal: 4, // o gap entre columnas\r\n    minWidth: 0, // previene overflows raros\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Layout } from \"../../layout/layout\";\r\nimport { useAuth } from \"../../context/authContent\";\r\nimport TareaAlumno from \"./TareaAlumno\";\r\nimport TareaProfe from \"./TareaProfe\";\r\nimport { useAppData } from \"../../context/appDataContext\";\r\n\r\nconst Tareas = () => {\r\n  const { user } = useAuth();\r\n  const { loadTareas } = useAppData();\r\n\r\n  useEffect(() => {\r\n    loadTareas(true);\r\n  }, []);\r\n\r\n  return <Layout>{user?.is_teacher ? <TareaProfe /> : <TareaAlumno />}</Layout>;\r\n};\r\n\r\nexport default Tareas;\r\n","import {\r\n  NavigationContainer,\r\n  DefaultTheme as NavigationDefaultTheme,\r\n  DarkTheme as NavigationDarkTheme,\r\n} from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport { AuthProvider, useAuth } from \"../context/authContent\";\r\nimport HomeScreen from \"../screens/home/home-screen\";\r\nimport LoginScreen from \"../screens/login-screen\";\r\nimport Profile from \"../screens/Profile\";\r\nimport { Pressable, View } from \"react-native\";\r\nimport CustomDrawerContent from \"./CustomDrawerContent\";\r\nimport Alarcoin from \"../screens/Epetcoin\";\r\nimport ChangePassword from \"../screens/changePassword\";\r\nimport MateriasStack from \"./materiasStack\";\r\nimport { DrawerParamList, RootStack } from \"../types/route\";\r\nimport { AppDataProvider } from \"../context/appDataContext\";\r\nimport { Avatar, useTheme } from \"react-native-paper\";\r\nimport { useThemeContext } from \"../context/themeContext\";\r\nimport { getInitials } from \"../utils/initials\";\r\nimport { useMemo } from \"react\";\r\nimport Alumnos from \"../screens/Alumnos\";\r\nimport Tareas from \"../screens/evaluacion/Tareas\";\r\n\r\nconst Stack = createNativeStackNavigator<RootStack>();\r\nconst Drawer = createDrawerNavigator<DrawerParamList>();\r\n\r\nfunction DrawerNavigator() {\r\n  const { colors } = useTheme();\r\n  const { user } = useAuth();\r\n  const memoizedUser = useMemo(() => user, [user]);\r\n\r\n  return (\r\n    <Drawer.Navigator\r\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\r\n      screenOptions={({ navigation }) => ({\r\n        headerStyle: {\r\n          backgroundColor: colors.elevation.level2,\r\n        },\r\n        headerTintColor: colors.primary,\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n\r\n        headerRight: () => (\r\n          <View style={{ padding: 2 }}>\r\n            <Pressable onPress={() => navigation.navigate(\"Perfil\")} style={{}}>\r\n              <Avatar.Text\r\n                label={getInitials(\r\n                  memoizedUser?.nombre,\r\n                  memoizedUser?.apellido\r\n                )}\r\n                size={40}\r\n                style={{\r\n                  backgroundColor: colors.primary,\r\n                  width: 40,\r\n                  height: 40,\r\n                  marginRight: 10,\r\n                }}\r\n              />\r\n            </Pressable>\r\n          </View>\r\n        ),\r\n      })}\r\n    >\r\n      <Drawer.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{ title: \"adminAulas | Dashboard\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"MateriasStack\"\r\n        component={MateriasStack}\r\n        options={{ title: \"adminAulas | Mis Materias\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Perfil\"\r\n        component={Profile}\r\n        options={{ title: \"adminAulas | Mi Perfil\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Alarcoin\"\r\n        component={Alarcoin}\r\n        options={{ title: \"adminAulas | Mis Alarcoin\" }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Alumnos\"\r\n        component={Alumnos}\r\n        options={{ title: \"adminAulas | Mis Alumnos\" }}\r\n      />\r\n\r\n      <Drawer.Screen\r\n        name=\"Tareas\"\r\n        component={Tareas}\r\n        options={{ title: \"adminAulas | Tareas\" }}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nconst StackNavigation = () => {\r\n  const { user } = useAuth();\r\n  const { theme } = useThemeContext();\r\n\r\n  // Integrar con React Navigation\r\n  const navigationTheme = theme.dark\r\n    ? {\r\n        ...NavigationDarkTheme,\r\n        colors: {\r\n          ...NavigationDarkTheme.colors,\r\n          ...theme.colors,\r\n        },\r\n      }\r\n    : {\r\n        ...NavigationDefaultTheme,\r\n        colors: {\r\n          ...NavigationDefaultTheme.colors,\r\n          ...theme.colors,\r\n        },\r\n      };\r\n\r\n  return (\r\n    <NavigationContainer theme={navigationTheme}>\r\n      <Stack.Navigator>\r\n        {!user ? (\r\n          <Stack.Screen\r\n            name=\"Login\"\r\n            component={LoginScreen}\r\n            options={{ headerShown: false }}\r\n          />\r\n        ) : user.cambiarContrasena ? (\r\n          <Stack.Screen\r\n            name=\"CambiarContra\"\r\n            component={ChangePassword}\r\n            options={{\r\n              title: \"adminAulas | Cambiar Contraseña\",\r\n              headerShown: false,\r\n            }}\r\n          />\r\n        ) : (\r\n          <Stack.Screen\r\n            name=\"Main\"\r\n            component={DrawerNavigator}\r\n            options={{ headerShown: false }}\r\n          />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default function Router() {\r\n  return (\r\n    <AuthProvider>\r\n      <AppDataProvider>\r\n        <StackNavigation />\r\n      </AppDataProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n","// src/screens/SplashScreen.tsx\r\nimport React, { useEffect } from \"react\";\r\nimport { StyleSheet, Animated } from \"react-native\";\r\nimport { useTheme, Text } from \"react-native-paper\";\r\nimport { PrimaryColor } from \"../utils/colors\";\r\n\r\nconst SplashScreen = ({ onFinish }: { onFinish: () => void }) => {\r\n  const { colors } = useTheme();\r\n  const opacity = new Animated.Value(0);\r\n\r\n  useEffect(() => {\r\n    Animated.timing(opacity, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start(() => {\r\n      setTimeout(() => {\r\n        Animated.timing(opacity, {\r\n          toValue: 0.5,\r\n          duration: 500,\r\n          useNativeDriver: true,\r\n        }).start(() => {\r\n          onFinish();\r\n        });\r\n      }, 1000);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[styles.container, { opacity }, { backgroundColor: PrimaryColor }]}\r\n    >\r\n      <Text variant=\"titleLarge\" style={styles.title}>\r\n        AdminAulas 🚀\r\n      </Text>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default SplashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","// import Router from \"./src/navigations/router\";\n// import { PaperProvider } from \"react-native-paper\";\n// import { ThemeProvider, useThemeContext } from \"./src/context/themeContext\";\n// import { StatusBar } from \"expo-status-bar\";\n// import { useFonts } from \"expo-font\";\n// import { MaterialCommunityIcons } from \"@expo/vector-icons\";\n// import { useCallback } from \"react\";\n\n// export default function App() {\n//   const [fontsLoaded] = useFonts({\n//     ...MaterialCommunityIcons.font,\n//   });\n\n//   const onLayoutRootView = useCallback(async () => {\n//     if (fontsLoaded) {\n\n//     }\n//   }, [fontsLoaded]);\n\n//   if (!fontsLoaded) return null;\n//   return (\n//     <ThemeProvider>\n//       <AppWithTheme />\n//     </ThemeProvider>\n//   );\n// }\n\n// function AppWithTheme() {\n//   const { theme, isDarkMode } = useThemeContext();\n//   return (\n//     <PaperProvider theme={theme}>\n//       <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n//       <Router />\n//     </PaperProvider>\n//   );\n// }\nimport Router from \"./src/navigations/router\";\nimport { PaperProvider } from \"react-native-paper\";\nimport { ThemeProvider, useThemeContext } from \"./src/context/themeContext\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useFonts } from \"expo-font\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Splash from \"./src/screens/splashScreen\"; // 👈\n\nSplashScreen.preventAutoHideAsync(); // 👈\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    ...MaterialCommunityIcons.font,\n  });\n\n  const [showSplash, setShowSplash] = useState(true);\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      // podés validar token acá si querés\n    }\n  }, [fontsLoaded]);\n\n  useEffect(() => {\n    if (fontsLoaded) onLayoutRootView();\n  }, [fontsLoaded]);\n\n  const handleSplashFinish = async () => {\n    setShowSplash(false);\n    await SplashScreen.hideAsync(); // 👈 Oculta el splash nativo\n  };\n\n  if (!fontsLoaded) return null;\n\n  return (\n    <ThemeProvider>\n      {showSplash ? <Splash onFinish={handleSplashFinish} /> : <AppWithTheme />}\n    </ThemeProvider>\n  );\n}\n\nfunction AppWithTheme() {\n  const { theme, isDarkMode } = useThemeContext();\n  return (\n    <PaperProvider theme={theme}>\n      <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n      <Router />\n    </PaperProvider>\n  );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [614], () => (__webpack_require__(9783)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["saveUser","async","AsyncStorage","setItem","JSON","stringify","user","error","console","saveToStorage","key","value","getFromStorage","getItem","saveAula","aulas","log","getAulaStorage","aula","parse","saveAsistencias","data","getAsistenciasStorage","saveClases","materiaId","getClasesStorage","saveTransaccionCoinProfe","json","saveTransaccionCoinAlumno","saveTareas","tareas","AuthContext","createContext","setUser","token","setToken","logout","loading","AuthProvider","children","useState","setLoading","useEffect","users","getUser","loadUser","_jsx","Provider","newUser","removeItem","removeFromStorage","clear","useAuth","useContext","Layout","colors","useTheme","LinearGradient","primary","background","start","x","y","end","style","styles","gradient","SafeAreaView","safeArea","KeyboardAvoidingView","flex","behavior","keyboardVerticalOffset","StatusBar","currentHeight","ScrollView","contentContainerStyle","scrollContainer","keyboardShouldPersistTaps","View","innerContainer","StyleSheet","create","paddingTop","flexGrow","padding","urlBase","authFetch","input","options","headers","newHeaders","Headers","set","response","fetch","Object","assign","status","refresh_token","Error","refreshRes","method","body","ok","access_token","retryHeaders","getHistorialProfesor","errorData","detail","getHistorialAlumno","DateFormatLatIso","dateStr","match","dd","mm","yyyy","day","parseInt","month","DateFormatIsoLat","isoDate","asignarTareaMasiva","tarea_id","alumnoIds","res","alumnos","getNotas","AppDataContext","undefined","AppDataProvider","setAulas","alumnosMap","setAlumnosMap","isLoading","setIsLoading","transaccioncoins","setTransaccionCoins","alarcoinsError","setAlarcoinsError","epetCoin","setEpetcoin","setTareas","tareasError","setTareasError","tareasLoading","setTareasLoading","notas","setNotas","notasError","setNotasError","notasLoading","setNotasLoading","transaccionCoinProfe","alarcoinsData","nuevoMap","keys","forEach","id","epetcoin","alumno","cantidad","reduce","acc","item","suma","calcularCantidadEpetcoins","epetcoins","actualizarCantidadEpetcoins","transaccionCoinAlumno","loadEpetcoin","cachedCoin","getEpetCoinToStorage","getEpetcoin","coin","saveEpetCoin","loadDataAlumno","cachedAulas","aulasProcesadas","getMisAulas","map","loadDataProfe","cachedAulumnosMap","alumnosArray","getAlumnosStorage","aulasData","getalumnosAulas","alumnosMapTemp","aulasSinAlumnos","nombre","ano","division","especialidad","profesor_id","cantidad_clases","tipo","saveAlumnos","values","loadData","tokenParam","is_teacher","loadAlarcoins","forceRefresh","local","getTransaccionCoinProfe","getTransaccionCoinAlumno","e","loadTareas","tareasStr","getTareasStorage","t","fecha_limite","GetTareas","loadNotas","getNotasAlumnoStorage","getNotasMe","saveNotasAlumno","useAppData","context","getSaludoFecha","now","Date","hora","getHours","saludo","fecha","toLocaleDateString","year","LoadError","hasError","reLoad","errorMessage","justifyContent","alignItems","ActivityIndicator","size","color","_jsxs","Text","variant","marginBottom","textAlign","Image","source","require","width","height","borderRadius","resizeMode","Button","mode","onPress","_Fragment","HomeProfesor","PrimaryColor","ResumenMiniCard","title","icon","bgColor","Card","card","Content","cardContent","cardTitle","cardValue","Ionicons","name","paddingVertical","paddingHorizontal","minWidth","maxWidth","flexDirection","fontSize","fontWeight","marginTop","getAsistenciasPorClase","HomeAlumnos","useWindowDimensions","setError","asistencia","setAsistencias","promedio","setPromedio","promedioAsistencia","setPromedioAsistencia","refresh","calcularPromedioAsistencia","getAsistencias","asistenciasPorMateria","materiasValidas","filter","m","porcentaje_asistencia","length","Math","round","totalCoins","totalClasesDictadas","total","notasObj","todasLasNotas","flat","nota","prom","Number","parseFloat","toFixed","calcularPromedioNotas","header","IconButton","margin","resumenContainer","gap","headerSmall","flexWrap","alumnosListContainer","HomeScreen","container","alignSelf","cardsContainer","alignContent","LoginSchema","Yup","shape","email","required","password","min","LoginScreen","useNavigation","handleLogin","setSubmitting","resetForm","loginUser","Formik","initialValues","validationSchema","onSubmit","setErrors","msg","handleChange","handleBlur","handleSubmit","errors","touched","isSubmitting","TextInput","placeholder","onChangeText","onBlur","keyboardType","autoCapitalize","secureTextEntry","backgroundColor","backdrop","buttonText","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderColor","borderWidth","marginLeft","updateUser","apellido","newPassword","confirmPassword","oneOf","minHeight","letterSpacing","subheader","opacity","avatarContainer","marginVertical","cardheader","paddingRight","cardSubtitle","editButton","form","buttonGroup","saveButton","cancelButton","logoutButton","Profile","editable","setEditable","setNombre","setApellido","setEmail","setPassword","setConfirmPassword","handleEdit","handleCancel","onSurfaceVariant","surface","Title","subtitle","titleStyle","subtitleStyle","Divider","outlineVariant","rest","_objectWithoutPropertiesLoose","_excluded","Alert","alert","updatedUser","message","handleSave","enableReinitialize","label","surfaceDisabled","left","Icon","autoComplete","textContentType","importantForAutofill","outline","labelStyle","onPrimary","contentStyle","getInitials","trim","toUpperCase","profile","avatar","role","AvatarCard","alarcoins","isalarcoins","desdeProfe","Avatar","lightTheme","MD3LightTheme","text","secondary","accent","asistenciaBuena","asistenciaMedia","asistenciaMala","darkTheme","MD3DarkTheme","ThemeContext","isDarkMode","toggleTheme","theme","ThemeProvider","systemColorScheme","useColorScheme","useSystemTheme","setUseSystemTheme","setIsDarkMode","stored","loadTheme","listener","Appearance","addChangeListener","colorScheme","remove","newValue","useThemeContext","CustomDrawerContent","props","drawerItems","screen","DrawerContentScrollView","Drawer","nav","index","DrawerItem","navigation","navigate","bottom","switchRow","themeItem","Switch","onValueChange","Feather","SelectMateria","historial","onSeleccionar","visible","setVisible","selected","setSelected","closeMenu","handleSelect","Menu","onDismiss","anchor","openMenu","buttonContent","button","labelWithIcon","onSurface","iconLeft","labelTextWrapper","iconRight","innerLabel","Item","leadingIcon","aula_id","HelperText","type","marginRight","AlarcoinModal","selectedAula","tab","setTab","setCantidad","concepto","setConcepto","setTipo","materiaSeleccionada","setMateriaSeleccionada","visibleSnack","setVisibleSnack","mensaje","setMensaje","historialPorAula","useMemo","Array","isArray","find","a","Portal","Snackbar","duration","action","Modal","overflow","SegmentedButtons","buttons","prev","String","max","RadioButton","Group","transaccionCoin","alumno_id","detalle","moneda_id","crearTransaccion","every","totalAlarcoins","entry","MateriasCard","materia","porcentaje","is_alumno","alarcoin","getColorFromPorcentaje","infoLeft","scheduleRow","infoRight","classCount","marginHorizontal","ResponsiveGrid","items","renderItem","getKey","numColumns","refreshing","onRefresh","ListEmptyComponent","ListFooterComponent","computedColumns","FlatList","keyExtractor","toString","paddingBottom","columnWrapperStyle","CrearEpetcoinForm","onCreated","sugerido","crearEpetcoin","disabled","Alarcoin","selectedAlumno","setSelectedAlumno","setSelectedAula","handleOpenModal","dataList","Pressable","pressed","nombre_moneda","handleCloseModal","ChangePassword","apiError","setApiError","matches","cambiarContrasena","Materias","numColums","asistencias","fetchAsistencias","asistenciaAula","asistenciaAulaClases","asistenciasA","handlerNavigation","params","scheduleText","ModalAsistencia","onClose","clase","filtroAlumno","setFiltroAlumno","asistenciasEditadas","setAsistenciasEditadas","isMobile","columns","Boolean","grupo_id","clase_id","AsistenciasClase","todosPresentes","presente","alumnosFiltrados","texto","toLowerCase","includes","modalContainer","headerTitle","tema","scroll","grid","asistenciaExistente","asistenciaEditada","valuePresente","valueJustificado","justificado","cardWrapper","alumnoCard","nombreAlumno","radioRowFixed","radioItemPressable","radioLabelMobile","radioLabel","radioLabelText","handleJustificacionChange","buttonRow","payload","editada","setClaseAsistencia","maxHeight","radioRow","radioItemFixed","flexShrink","ClaseCard","modalVisible","setModalVisible","getColorFromAsistencia","headerRow","iconButtons","iconMargin","attendanceButton","modalBackdrop","modalCloseButton","modalCloseText","DetallesMaterias","route","useRoute","clases","setClases","grupoSeleccionado","setGrupoSeleccionado","cuatrimestreSeleccionado","setCuatrimestreSeleccionado","getClases","forzarBackend","efectiveToken","aulaId","clasesMateria","clasesFiltradas","test","cuatrimestre","isSmallDevice","sectionHeader","handleGoBack","goBack","compact","backButton","backButtonText","display","subjectTitle","numberOfLines","ellipsizeMode","addButton","handleAddClass","addButtonContent","c","showsVerticalScrollIndicator","getRows","rows","i","push","slice","row","rowIndex","asistenciaDeEstaClase","from","_","idx","paddingLeft","subjectSchedule","Stack","createNativeStackNavigator","MateriasStack","Navigator","screenOptions","headerShown","Screen","component","DetalleMateria","badge","badgeText","column","progressWrapper","progressLabel","progressBar","AlumnoResumen","completadas","totalTareas","estado","onPressDetalles","initials","badgeColor","Excelente","tertiary","Bien","Regular","titleVariant","subtitleVariant","right","ProgressBar","progress","Actions","materias","Alumnos","searchQuery","setSearchQuery","selectedMateria","setSelectedMateria","menuVisible","setMenuVisible","filteredAlumnos","datosAula","selectedMateriaNombre","filters","searchInput","listContainer","columnWrapper","titulo","valor","subtitulo","CardResumen","progreso","isLarge","tipoTareaTextoToValor","Evaluación","Actitudinal","tipoTareaValorToTexto","evaluacion","tp","tt","actitudinal","tiposTarea","FiltroTareas","onFiltrar","isSmall","filtroTipo","setFiltroTipo","aulaFiltro","setAulaFiltro","menuAulaVisible","setMenuAulaVisible","filtradas","coincideTipo","coincideBusqueda","coincideAula","tipoBadgeColors","estadoBadgeColors","Completada","Pendiente","CardTask","descripcion","fechaVencimiento","calificacionRecibida","nombreAula","badgesContainer","Badge","aulaContainer","fechaContainer","calificacionContainer","TareaAlumno","tareasFiltradas","setTareasFiltradas","isLargeScreen","tareaIds","notasFiltradas","n","tareasEntregadas","some","entregado","notasValidas","ahora","vencimientos","mainContent","empty","onSurfaceDisabled","notaTarea","topBar","TareaCard","entregados","fechaEntrega","cantidadAlumnos","onEditar","onEliminar","onCalificar","titleRow","badgesRow","badgeTipo","badgeEntregas","infoItem","infoText","progresoRow","extraInfo","containerColor","iconColor","accessibilityLabel","DateInput","onChange","formatted","cleaned","replace","formatFecha","validate","maxLength","CheckboxItem","TouchableRipple","tipos","CrearTareaModal","onGuardar","tareaInicial","setTitulo","setDescripcion","setMateriaId","menuTipoVisible","setMenuTipoVisible","fechaLimite","setFechaLimite","asignarTodos","setAsignarTodos","alumnosSeleccionados","setAlumnosSeleccionados","showAlumnos","setShowAlumnos","alumnosDeMateria","reset","cerrar","idsAlumnos","todosIds","cargarDatos","returnKeyType","multiline","nuevoAsignarTodos","persistentScrollbar","toggleAlumno","handleGuardar","tarea","fecha_creacion","toISOString","split","created_by","asignados","CalificarTareaModal","setAlumnos","botonDeshabilitado","alumnosConNotas","nota_id","fetchNotas","TouchableWithoutFeedback","Keyboard","dismiss","borderBottomWidth","toggleEntregado","handleNotaChange","nuevaNota","notasActualizada","TareaProfe","calificarVisible","setCalificarVisible","tareaAEliminar","setTareaAEliminar","tareaEditar","setTareaEditar","tareaCalificar","setTareaCalificar","confirmVisible","setConfirmVisible","tareasFiltradass","setTareasFiltradass","cantidad_alumnos","Dialog","eliminarTarea","textColor","closeModal","tareaParaEditar","EditarTarea","idsYaAsignados","nuevosAlumnos","alumnosQuitados","alumno_ids","eliminarNotasMasivas","nueva","CrearTarea","actualizarNotasMasivas","Tareas","createDrawerNavigator","DrawerNavigator","memoizedUser","drawerContent","headerStyle","level2","headerTintColor","headerTitleStyle","headerRight","StackNavigation","navigationTheme","dark","NavigationDarkTheme","NavigationDefaultTheme","NavigationContainer","Router","SplashScreen","onFinish","Animated","Value","timing","toValue","useNativeDriver","setTimeout","AppWithTheme","PaperProvider","registerRootComponent","fontsLoaded","useFonts","MaterialCommunityIcons","font","showSplash","setShowSplash","onLayoutRootView","useCallback","Splash","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","splice","r","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}